import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as e,o as p}from"./app-eWV4nnR8.js";const t={};function l(i,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h2 id="_1-无限循环" tabindex="-1"><a class="header-anchor" href="#_1-无限循环"><span>1. 无限循环</span></a></h2><h3 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h3><p>​ 又叫死循环。循环一直停不下来。</p><h3 id="for格式" tabindex="-1"><a class="header-anchor" href="#for格式"><span>for格式</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;循环执行一直在打印内容&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解释：</p><p>初始化语句可以空着不写，表示循环之前不定义任何的控制变量。</p><p>条件判断语句可以空着不写，如果不写，默认表示true，循环一直进行。</p><p>条件控制语句可以空着不写，表示每次循环体执行完毕后，控制变量不做任何变化。</p><h3 id="while格式" tabindex="-1"><a class="header-anchor" href="#while格式"><span>while格式</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;循环执行一直在打印内容&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解释：</p><p>​ 小括号里面就不能省略了，true一定要写出来，否则代码会报错。</p><h3 id="do-while格式" tabindex="-1"><a class="header-anchor" href="#do-while格式"><span>do...while格式</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">do</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;循环执行一直在打印内容&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解释：</p><p>​ 小括号里面就不能省略了，true一定要写出来，否则代码会报错。</p><h3 id="无限循环的注意事项" tabindex="-1"><a class="header-anchor" href="#无限循环的注意事项"><span>无限循环的注意事项</span></a></h3><ul><li>最为常用的格式：while</li><li>无限循环下面不能再写其他代码了，因为永远执行不到。</li></ul><h2 id="_2-条件控制语句" tabindex="-1"><a class="header-anchor" href="#_2-条件控制语句"><span>2. 条件控制语句</span></a></h2><ul><li>break</li><li>continue</li></ul><h3 id="break" tabindex="-1"><a class="header-anchor" href="#break"><span>break</span></a></h3><p>​ 不能单独存在的。可以用在switch和循环中，表示结束，跳出的意思。</p><p>代码示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">//1.吃1~5号包子</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;在吃第&quot;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&quot;个包子&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//2.吃完第三个的时候就不吃了</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token comment">//结束整个循环。</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="continue" tabindex="-1"><a class="header-anchor" href="#continue"><span>continue</span></a></h3><p>​ 不能单独存在的。只能存在于循环当中。</p><p>​ 表示：跳过本次循环，继续执行下次循环。</p><p>代码示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token comment">//1.吃1~5号包子</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">//2.第3个包子有虫子就跳过，继续吃下面的包子</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//跳过本次循环（本次循环中，下面的代码就不执行了），继续执行下次循环。</span></span>
<span class="line">        <span class="token keyword">continue</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;在吃第&quot;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&quot;个包子&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-random" tabindex="-1"><a class="header-anchor" href="#_3-random"><span>3. Random</span></a></h2><p>Random跟Scanner一样，也是Java提前写好的类，我们不需要关心是如何实现的，只要直接使用就可以了。</p><h3 id="使用步骤" tabindex="-1"><a class="header-anchor" href="#使用步骤"><span>使用步骤</span></a></h3><ol><li>导包</li></ol><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span></span>
<span class="line">导包的动作必须出现在类定义的上边。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>创建对象</li></ol><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">Random</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">上面这个格式里面，只有r是变量名，可以变，其他的都不允许变。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>生成随机数</li></ol><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">int</span> number <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>随机数的范围<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">上面这个格式里面，只有number是变量名，可以变，其他的都不允许变。</span>
<span class="line">随机数范围的特点：从<span class="token number">0</span>开始，不包含指定值。比如：参数为<span class="token number">10</span>，生成的范围<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码示例：</p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" data-title="java" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token comment">//1.导包</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RandomDemo1</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//2.创建对象</span></span>
<span class="line">        <span class="token class-name">Random</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//3.生成随机数</span></span>
<span class="line">        <span class="token keyword">int</span> number <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//包左不包右，包头不包尾</span></span>
<span class="line">        <span class="token comment">//0 ~ 99</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div>`,41)]))}const u=s(t,[["render",l],["__file","day05-循环高级.html.vue"]]),r=JSON.parse('{"path":"/codenotes/back/javacore/javabasic/day05-%E5%BE%AA%E7%8E%AF%E9%AB%98%E7%BA%A7.html","title":"循环高级","lang":"zh-CN","frontmatter":{"title":"循环高级","author":"黑马_阿玮","category":["计算机"],"tag":["java"],"sticky":false,"star":false,"article":false,"timeline":false,"date":"2024-11-06T00:00:00.000Z","headerDepth":2,"description":"1. 无限循环 概念 ​ 又叫死循环。循环一直停不下来。 for格式 解释： 初始化语句可以空着不写，表示循环之前不定义任何的控制变量。 条件判断语句可以空着不写，如果不写，默认表示true，循环一直进行。 条件控制语句可以空着不写，表示每次循环体执行完毕后，控制变量不做任何变化。 while格式 解释： ​ 小括号里面就不能省略了，true一定要写出...","head":[["meta",{"property":"og:url","content":"https://hwchen.top/codenotes/back/javacore/javabasic/day05-%E5%BE%AA%E7%8E%AF%E9%AB%98%E7%BA%A7.html"}],["meta",{"property":"og:site_name","content":"Ahzy"}],["meta",{"property":"og:title","content":"循环高级"}],["meta",{"property":"og:description","content":"1. 无限循环 概念 ​ 又叫死循环。循环一直停不下来。 for格式 解释： 初始化语句可以空着不写，表示循环之前不定义任何的控制变量。 条件判断语句可以空着不写，如果不写，默认表示true，循环一直进行。 条件控制语句可以空着不写，表示每次循环体执行完毕后，控制变量不做任何变化。 while格式 解释： ​ 小括号里面就不能省略了，true一定要写出..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"黑马_阿玮"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:published_time","content":"2024-11-06T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"循环高级\\",\\"description\\":\\"1. 无限循环 概念 ​ 又叫死循环。循环一直停不下来。 for格式 解释： 初始化语句可以空着不写，表示循环之前不定义任何的控制变量。 条件判断语句可以空着不写，如果不写，默认表示true，循环一直进行。 条件控制语句可以空着不写，表示每次循环体执行完毕后，控制变量不做任何变化。 while格式 解释： ​ 小括号里面就不能省略了，true一定要写出...\\"}"]]},"headers":[{"level":2,"title":"1. 无限循环","slug":"_1-无限循环","link":"#_1-无限循环","children":[{"level":3,"title":"概念","slug":"概念","link":"#概念","children":[]},{"level":3,"title":"for格式","slug":"for格式","link":"#for格式","children":[]},{"level":3,"title":"while格式","slug":"while格式","link":"#while格式","children":[]},{"level":3,"title":"do...while格式","slug":"do-while格式","link":"#do-while格式","children":[]},{"level":3,"title":"无限循环的注意事项","slug":"无限循环的注意事项","link":"#无限循环的注意事项","children":[]}]},{"level":2,"title":"2. 条件控制语句","slug":"_2-条件控制语句","link":"#_2-条件控制语句","children":[{"level":3,"title":"break","slug":"break","link":"#break","children":[]},{"level":3,"title":"continue","slug":"continue","link":"#continue","children":[]}]},{"level":2,"title":"3. Random","slug":"_3-random","link":"#_3-random","children":[{"level":3,"title":"使用步骤","slug":"使用步骤","link":"#使用步骤","children":[]}]}],"git":{},"readingTime":{"minutes":2.62,"words":785},"filePathRelative":"codenotes/back/javacore/javabasic/day05-循环高级.md","localizedDate":"2024年11月6日","excerpt":"<h2>1. 无限循环</h2>\\n<h3>概念</h3>\\n<p>​\\t又叫死循环。循环一直停不下来。</p>\\n<h3>for格式</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"java\\" data-title=\\"java\\"><pre><code><span class=\\"line\\"><span class=\\"token keyword\\">for</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">;</span><span class=\\"token punctuation\\">;</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">    <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"循环执行一直在打印内容\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{u as comp,r as data};
