import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as e,o as p}from"./app-eWV4nnR8.js";const t="/assets/image-20241123160358524-IRQrAB-T.png",l="/assets/image-20241123160801899-CC-wzJRS.png",i="/assets/image-20241123170249974-MkuBfxZC.png",c={};function o(r,n){return p(),a("div",null,n[0]||(n[0]=[e('<br><h2 id="_1-spring-框架概述" tabindex="-1"><a class="header-anchor" href="#_1-spring-框架概述"><span>1. Spring 框架概述</span></a></h2><p>1 、Spring是轻量级的开源的JavaEE框架（是一个管理框架的框架）</p><p>2 、Spring可以解决企业应用开发的复杂性</p><p>3 、Spring特点</p><p>（ 1 ）方便解耦，简化开发</p><p>（ 2 ）Aop编程支持</p><p>（ 3 ）方便程序测试</p><p>（ 4 ）方便和其他框架进行整合</p><p>（ 5 ）方便进行事务操作</p><p>（ 6 ）降低API开发难度</p><h2 id="_2-入门案例" tabindex="-1"><a class="header-anchor" href="#_2-入门案例"><span>2. 入门案例</span></a></h2><ol><li><p>下载 <strong>Spring</strong> <a href="https://repo.spring.io/release/org/springframework/spring/" target="_blank" rel="noopener noreferrer">下载地址</a></p></li><li><p>创建普通 <strong>Java</strong> 工程</p></li><li><p>导入 <strong>Spring</strong> 基本 <strong>jar</strong> 包于 <code>libs</code> 下</p><figure><img src="'+t+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>导入 <strong>日志</strong> 相关 <strong>jar</strong> 包于 <code>libs</code> 下</p><figure><img src="'+l+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>定义一个类</p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" data-title="java" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> name<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> age<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&quot;Cat{&quot;</span> <span class="token operator">+</span></span>
<span class="line">                <span class="token string">&quot;name=&#39;&quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span></span>
<span class="line">                <span class="token string">&quot;, age=&quot;</span> <span class="token operator">+</span> age <span class="token operator">+</span></span>
<span class="line">                <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div></li><li><p>写 <strong>xml文件</strong></p><div class="language-XML line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="XML" data-title="XML" style="--vp-collapsed-lines:10;"><pre><code><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</span>
<span class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
<span class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;</span>
<span class="line"></span>
<span class="line">    &lt;!-- class: 全类名 id: 对象名--&gt;</span>
<span class="line">	&lt;bean id=&quot;cat1&quot; class=&quot;com.ahzy.spring.bean.Cat&quot;&gt;</span>
<span class="line">        &lt;property name=&quot;name&quot; value=&quot;橘猫&quot;/&gt;</span>
<span class="line">        &lt;property name=&quot;age&quot; value=&quot;10&quot;/&gt;</span>
<span class="line">    &lt;/bean&gt;</span>
<span class="line">&lt;/beans&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div></li><li><p>测试</p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" data-title="java" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> test01 <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Test</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 使用ApplicationContext接口</span></span>
<span class="line">        <span class="token class-name">ApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">&quot;beans.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// Object cat1 = context.getBean(&quot;cat1&quot;);</span></span>
<span class="line">        <span class="token comment">// 编译类型: Object 运行类型: Cat</span></span>
<span class="line">        <span class="token comment">// 不强转无法通过 cat1.getName 获得属性</span></span>
<span class="line">        <span class="token comment">// 以下效果一致</span></span>
<span class="line">        <span class="token comment">//Cat cat1 = context.getBean(&quot;cat1&quot;, Cat.class);</span></span>
<span class="line">        <span class="token class-name">Cat</span> cat1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Cat</span><span class="token punctuation">)</span>context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;cat1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;cat1: &quot;</span><span class="token operator">+</span> cat1 <span class="token operator">+</span><span class="token string">&quot; name: &quot;</span><span class="token operator">+</span> cat1<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><div class="hint-container important"><p class="hint-container-title">细节</p><p>为什么能识别 <code>beans.xml</code> 答：ClassPathXmlApplicationContext 默认类加载路径为</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token class-name">File</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 输出: F:\\Demo\\spring\\out\\production\\spring</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>实际读取的是 <code>out</code> 中的 <code>beans.xml</code></p></div></li></ol><figure><img src="`+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',14)]))}const k=s(c,[["render",o],["__file","1Spring 5 框架概述.html.vue"]]),v=JSON.parse(`{"path":"/codenotes/back/spring/spring/1Spring%205%20%E6%A1%86%E6%9E%B6%E6%A6%82%E8%BF%B0.html","title":"Spring概述","lang":"zh-CN","frontmatter":{"title":"Spring概述","category":["计算机"],"tag":["Spring"],"sticky":false,"star":false,"article":false,"timeline":false,"date":"2024-11-07T00:00:00.000Z","headerDepth":2,"description":"1. Spring 框架概述 1 、Spring是轻量级的开源的JavaEE框架（是一个管理框架的框架） 2 、Spring可以解决企业应用开发的复杂性 3 、Spring特点 （ 1 ）方便解耦，简化开发 （ 2 ）Aop编程支持 （ 3 ）方便程序测试 （ 4 ）方便和其他框架进行整合 （ 5 ）方便进行事务操作 （ 6 ）降低API开发难度 2....","head":[["meta",{"property":"og:url","content":"https://hwchen.top/codenotes/back/spring/spring/1Spring%205%20%E6%A1%86%E6%9E%B6%E6%A6%82%E8%BF%B0.html"}],["meta",{"property":"og:site_name","content":"Ahzy"}],["meta",{"property":"og:title","content":"Spring概述"}],["meta",{"property":"og:description","content":"1. Spring 框架概述 1 、Spring是轻量级的开源的JavaEE框架（是一个管理框架的框架） 2 、Spring可以解决企业应用开发的复杂性 3 、Spring特点 （ 1 ）方便解耦，简化开发 （ 2 ）Aop编程支持 （ 3 ）方便程序测试 （ 4 ）方便和其他框架进行整合 （ 5 ）方便进行事务操作 （ 6 ）降低API开发难度 2...."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:published_time","content":"2024-11-07T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Spring概述\\",\\"description\\":\\"1. Spring 框架概述 1 、Spring是轻量级的开源的JavaEE框架（是一个管理框架的框架） 2 、Spring可以解决企业应用开发的复杂性 3 、Spring特点 （ 1 ）方便解耦，简化开发 （ 2 ）Aop编程支持 （ 3 ）方便程序测试 （ 4 ）方便和其他框架进行整合 （ 5 ）方便进行事务操作 （ 6 ）降低API开发难度 2....\\"}"]]},"headers":[{"level":2,"title":"1. Spring 框架概述","slug":"_1-spring-框架概述","link":"#_1-spring-框架概述","children":[]},{"level":2,"title":"2. 入门案例","slug":"_2-入门案例","link":"#_2-入门案例","children":[]}],"git":{},"readingTime":{"minutes":1.62,"words":485},"filePathRelative":"codenotes/back/spring/spring/1Spring 5 框架概述.md","localizedDate":"2024年11月7日","excerpt":"<br>\\n<h2>1. Spring 框架概述</h2>\\n<p>1 、Spring是轻量级的开源的JavaEE框架（是一个管理框架的框架）</p>\\n<p>2 、Spring可以解决企业应用开发的复杂性</p>\\n<p>3 、Spring特点</p>\\n<p>（ 1 ）方便解耦，简化开发</p>\\n<p>（ 2 ）Aop编程支持</p>\\n<p>（ 3 ）方便程序测试</p>\\n<p>（ 4 ）方便和其他框架进行整合</p>\\n<p>（ 5 ）方便进行事务操作</p>\\n<p>（ 6 ）降低API开发难度</p>\\n<h2>2. 入门案例</h2>\\n<ol>\\n<li>\\n<p>下载 <strong>Spring</strong> <a href=\\"https://repo.spring.io/release/org/springframework/spring/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">下载地址</a></p>\\n</li>\\n<li>\\n<p>创建普通 <strong>Java</strong> 工程</p>\\n</li>\\n<li>\\n<p>导入 <strong>Spring</strong> 基本 <strong>jar</strong> 包于 <code>libs</code> 下</p>\\n<figure><figcaption></figcaption></figure>\\n</li>\\n<li>\\n<p>导入 <strong>日志</strong> 相关 <strong>jar</strong> 包于 <code>libs</code> 下</p>\\n<figure><figcaption></figcaption></figure>\\n</li>\\n<li>\\n<p>定义一个类</p>\\n<div class=\\"language-java line-numbers-mode has-collapsed-lines collapsed\\" data-highlighter=\\"prismjs\\" data-ext=\\"java\\" data-title=\\"java\\" style=\\"--vp-collapsed-lines:10;\\"><pre><code><span class=\\"line\\"><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Cat</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">String</span> name<span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\">    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">int</span> age<span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Cat</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> name<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">int</span> age<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">=</span> name<span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\">        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>age <span class=\\"token operator\\">=</span> age<span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\">    <span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Cat</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">getName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">        <span class=\\"token keyword\\">return</span> name<span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\">    <span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">setName</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> name<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">=</span> name<span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\">    <span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">getAge</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">        <span class=\\"token keyword\\">return</span> age<span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\">    <span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">setAge</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> age<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>age <span class=\\"token operator\\">=</span> age<span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\">    <span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\">    <span class=\\"token annotation punctuation\\">@Override</span></span>\\n<span class=\\"line\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">toString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">        <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">\\"Cat{\\"</span> <span class=\\"token operator\\">+</span></span>\\n<span class=\\"line\\">                <span class=\\"token string\\">\\"name='\\"</span> <span class=\\"token operator\\">+</span> name <span class=\\"token operator\\">+</span> <span class=\\"token char\\">'\\\\''</span> <span class=\\"token operator\\">+</span></span>\\n<span class=\\"line\\">                <span class=\\"token string\\">\\", age=\\"</span> <span class=\\"token operator\\">+</span> age <span class=\\"token operator\\">+</span></span>\\n<span class=\\"line\\">                <span class=\\"token char\\">'}'</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\">    <span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div><div class=\\"collapsed-lines\\"></div></div></li>\\n<li>\\n<p>写 <strong>xml文件</strong></p>\\n<div class=\\"language-XML line-numbers-mode has-collapsed-lines collapsed\\" data-highlighter=\\"prismjs\\" data-ext=\\"XML\\" data-title=\\"XML\\" style=\\"--vp-collapsed-lines:10;\\"><pre><code><span class=\\"line\\">&lt;?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?&gt;</span>\\n<span class=\\"line\\">&lt;beans xmlns=\\"http://www.springframework.org/schema/beans\\"</span>\\n<span class=\\"line\\">       xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\"</span>\\n<span class=\\"line\\">       xsi:schemaLocation=\\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\\"&gt;</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\">    &lt;!-- class: 全类名 id: 对象名--&gt;</span>\\n<span class=\\"line\\">\\t&lt;bean id=\\"cat1\\" class=\\"com.ahzy.spring.bean.Cat\\"&gt;</span>\\n<span class=\\"line\\">        &lt;property name=\\"name\\" value=\\"橘猫\\"/&gt;</span>\\n<span class=\\"line\\">        &lt;property name=\\"age\\" value=\\"10\\"/&gt;</span>\\n<span class=\\"line\\">    &lt;/bean&gt;</span>\\n<span class=\\"line\\">&lt;/beans&gt;</span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div><div class=\\"collapsed-lines\\"></div></div></li>\\n<li>\\n<p>测试</p>\\n<div class=\\"language-java line-numbers-mode has-collapsed-lines collapsed\\" data-highlighter=\\"prismjs\\" data-ext=\\"java\\" data-title=\\"java\\" style=\\"--vp-collapsed-lines:10;\\"><pre><code><span class=\\"line\\"><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> test01 <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\">    <span class=\\"token annotation punctuation\\">@Test</span></span>\\n<span class=\\"line\\">    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">test02</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">        <span class=\\"token comment\\">// 使用ApplicationContext接口</span></span>\\n<span class=\\"line\\">        <span class=\\"token class-name\\">ApplicationContext</span> context <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ClassPathXmlApplicationContext</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"beans.xml\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\">        </span>\\n<span class=\\"line\\">        <span class=\\"token comment\\">// Object cat1 = context.getBean(\\"cat1\\");</span></span>\\n<span class=\\"line\\">        <span class=\\"token comment\\">// 编译类型: Object 运行类型: Cat</span></span>\\n<span class=\\"line\\">        <span class=\\"token comment\\">// 不强转无法通过 cat1.getName 获得属性</span></span>\\n<span class=\\"line\\">        <span class=\\"token comment\\">// 以下效果一致</span></span>\\n<span class=\\"line\\">        <span class=\\"token comment\\">//Cat cat1 = context.getBean(\\"cat1\\", Cat.class);</span></span>\\n<span class=\\"line\\">        <span class=\\"token class-name\\">Cat</span> cat1 <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Cat</span><span class=\\"token punctuation\\">)</span>context<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getBean</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"cat1\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\">        </span>\\n<span class=\\"line\\">        <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"cat1: \\"</span><span class=\\"token operator\\">+</span> cat1 <span class=\\"token operator\\">+</span><span class=\\"token string\\">\\" name: \\"</span><span class=\\"token operator\\">+</span> cat1<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\">    <span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div><div class=\\"collapsed-lines\\"></div></div><div class=\\"hint-container important\\">\\n<p class=\\"hint-container-title\\">细节</p>\\n<p>为什么能识别 <code>beans.xml</code>\\n答：ClassPathXmlApplicationContext 默认类加载路径为</p>\\n<div class=\\"language-java line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"java\\" data-title=\\"java\\"><pre><code><span class=\\"line\\"><span class=\\"token class-name\\">File</span> f <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">File</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getclass</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getResource</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"/\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getPath</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 输出: F:\\\\Demo\\\\spring\\\\out\\\\production\\\\spring</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p>实际读取的是 <code>out</code> 中的 <code>beans.xml</code></p>\\n</div>\\n</li>\\n</ol>","autoDesc":true}`);export{k as comp,v as data};
