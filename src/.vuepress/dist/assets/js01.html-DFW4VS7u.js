import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as t,o as p}from"./app-eWV4nnR8.js";const e="/assets/1671014719642-Duw3iZef.png",l="/assets/1671015114512-B7H9hAUG.png",c="/assets/1671015365371-Cmphmxk5.png",o="/assets/1671016521031-rx7zZ1YS.png",i="/assets/1673584031663-DjSj6MOU.png",u={};function d(r,s){return p(),a("div",null,s[0]||(s[0]=[t(`<h2 id="_1-js介绍" tabindex="-1"><a class="header-anchor" href="#_1-js介绍"><span>1. js介绍</span></a></h2><h3 id="_1-1-简介" tabindex="-1"><a class="header-anchor" href="#_1-1-简介"><span>1.1 简介</span></a></h3><p>是一种运行在客户端（浏览器）的编程语言，可以用来创建动态更新的内容，控制多媒体，制作图像动画等交互效果</p><h3 id="_1-2-书写方式" tabindex="-1"><a class="header-anchor" href="#_1-2-书写方式"><span>1.2 书写方式</span></a></h3><p>JavaScript 程序不能独立运行，它需要被嵌入 HTML 中，然后浏览器才能执行 JavaScript 代码。通过 <code>script</code> 标签将 JavaScript 代码引入到 HTML 中，有两种方式：</p><h4 id="_1-2-1-内部方式" tabindex="-1"><a class="header-anchor" href="#_1-2-1-内部方式"><span>1.2.1 内部方式</span></a></h4><p>通过 <code>script</code> 标签包裹 JavaScript 代码</p><div class="language-html line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="html" data-title="html" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>JavaScript 基础 - 引入方式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token comment">&lt;!-- 内联形式：通过 script 标签包裹 JavaScript 代码 --&gt;</span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;嗨，欢迎来传智播学习前端技术！&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_1-2-2-外部形式" tabindex="-1"><a class="header-anchor" href="#_1-2-2-外部形式"><span>1.2.2 外部形式</span></a></h4><p>一般将 JavaScript 代码写在独立的以 .js 结尾的文件中，然后通过 <code>script</code> 标签的 <code>src</code> 属性引入</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// demo.js</span></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;嗨，欢迎来传智播学习前端技术！&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="html" data-title="html" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>JavaScript 基础 - 引入方式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token comment">&lt;!-- 外部形式：通过 script 的 src 属性引入独立的 .js 文件 --&gt;</span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>如果 script 标签使用 src 属性引入了某 .js 文件，那么 标签的代码会被忽略！！！如下代码所示：</p><div class="language-html line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="html" data-title="html" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>JavaScript 基础 - 引入方式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token comment">&lt;!-- 外部形式：通过 script 的 src 属性引入独立的 .js 文件 --&gt;</span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">    <span class="token comment">// 此处的代码会被忽略掉！！！！</span></span>
<span class="line">  	<span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line">  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_1-2-3-注释和结束符" tabindex="-1"><a class="header-anchor" href="#_1-2-3-注释和结束符"><span>1.2.3 注释和结束符</span></a></h4><p>通过注释可以屏蔽代码被执行或者添加备注信息，JavaScript 支持两种形式注释语法：</p><h4 id="_1-2-4-单行注释" tabindex="-1"><a class="header-anchor" href="#_1-2-4-单行注释"><span>1.2.4 单行注释</span></a></h4><p>使用 <code>// </code> 注释单行代码</p><div class="language-html line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="html" data-title="html" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>JavaScript 基础 - 注释<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">    <span class="token comment">// 这种是单行注释的语法</span></span>
<span class="line">    <span class="token comment">// 一次只能注释一行</span></span>
<span class="line">    <span class="token comment">// 可以重复注释</span></span>
<span class="line">    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;嗨，欢迎来传智播学习前端技术！&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_1-2-5-多行注释" tabindex="-1"><a class="header-anchor" href="#_1-2-5-多行注释"><span>1.2.5 多行注释</span></a></h4><p>使用 <code>/* */</code> 注释多行代码</p><div class="language-html line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="html" data-title="html" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>JavaScript 基础 - 注释<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">    <span class="token comment">/* 这种的是多行注释的语法 */</span></span>
<span class="line">    <span class="token comment">/*</span>
<span class="line">    	更常见的多行注释是这种写法</span>
<span class="line">    	在些可以任意换行</span>
<span class="line">    	多少行都可以</span>
<span class="line">      */</span></span>
<span class="line">    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;嗨，欢迎来传智播学习前端技术！&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>注：编辑器中单行注释的快捷键为 <code>ctrl + /</code></strong></p><h4 id="_1-2-6-结束符" tabindex="-1"><a class="header-anchor" href="#_1-2-6-结束符"><span>1.2.6 结束符</span></a></h4><p>在 JavaScript 中 <code>;</code> 代表一段代码的结束，多数情况下可以省略 <code>;</code> 使用回车（enter）替代。</p><div class="language-html line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="html" data-title="html" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>JavaScript 基础 - 结束符<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"> </span>
<span class="line">    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>实际开发中有许多人主张书写 JavaScript 代码时省略结束符 <code>;</code></p><h3 id="_1-3-输入和输出语句" tabindex="-1"><a class="header-anchor" href="#_1-3-输入和输出语句"><span>1.3 输入和输出语句</span></a></h3><p>输出和输入也可理解为人和计算机的交互，用户通过键盘、鼠标等向计算机输入信息，计算机处理后再展示结果给用户，这便是一次输入和输出的过程。</p><h4 id="_1-3-1-输出语句" tabindex="-1"><a class="header-anchor" href="#_1-3-1-输出语句"><span>1.3.1 输出语句</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 1. 输出语句</span></span>
<span class="line"><span class="token comment">//  1.1 alert 页面弹出警示框</span></span>
<span class="line"><span class="token comment">// alert(&#39;你好,js&#39;)</span></span>
<span class="line"><span class="token comment">// 1.2 document.write 向页面文档输入内容 显示到页面body标签之内, 可以正常的解析标签</span></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;今日特价&#39;</span><span class="token punctuation">)</span></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;h4&gt;今日特价&lt;/h4&gt;&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 1.3 console.log 给我们程序员调试使用的   console 控制台</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;给咱们程序员使用的&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-3-2-输入语句" tabindex="-1"><a class="header-anchor" href="#_1-3-2-输入语句"><span>1.3.2 输入语句</span></a></h4><p>向 <code>prompt()</code> 输入任意内容会以弹窗形式出现在浏览器中，一般提示用户输入一些内容。</p><div class="language-html line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="html" data-title="html" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>JavaScript 基础 - 输入输出<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"> </span>
<span class="line">    <span class="token comment">// 1. 输入的任意数字，都会以弹窗形式展示</span></span>
<span class="line">    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;要输出的内容&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;要输出的内容&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 2. 以弹窗形式提示用户输入姓名，注意这里的文字使用英文的引号</span></span>
<span class="line">    <span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&#39;请输入您的姓名:&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_2-变量" tabindex="-1"><a class="header-anchor" href="#_2-变量"><span>2. 变量</span></a></h2><h3 id="_2-1-简介" tabindex="-1"><a class="header-anchor" href="#_2-1-简介"><span>2.1 简介</span></a></h3><blockquote><p>理解变量是计算机存储数据的“容器”，掌握变量的声明方式</p></blockquote><p>变量是计算机中用来存储数据的“容器”，变量不是数据本身，它们仅仅是一个用于存储数值的容器。可以理解为是一个个用来装东西的纸箱子。</p><figure><img src="`+e+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-1-1-声明" tabindex="-1"><a class="header-anchor" href="#_2-1-1-声明"><span>2.1.1 声明</span></a></h4><p>声明(定义)变量有两部分构成：声明关键字、变量名（标识）</p><div class="language-html line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="html" data-title="html" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>JavaScript 基础 - 声明和赋值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"> </span>
<span class="line">    <span class="token comment">// let 变量名</span></span>
<span class="line">    <span class="token comment">// 声明(定义)变量有两部分构成：声明关键字、变量名（标识）</span></span>
<span class="line">    <span class="token comment">// let 即关键字，所谓关键字是系统提供的专门用来声明（定义）变量的词语</span></span>
<span class="line">    <span class="token comment">// age 即变量的名称，也叫标识符</span></span>
<span class="line">    <span class="token keyword">let</span> age</span>
<span class="line">  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>关键字是 JavaScript 中内置的一些英文词汇（单词或缩写），它们代表某些特定的含义，如 <code>let</code> 的含义是声明变量的，看到 <code>let</code> 后就可想到这行代码的意思是在声明变量，如 <code>let age;</code></p><p><code>let</code> 和 <code>var</code> 都是 JavaScript 中的声明变量的关键字，推荐使用 <code>let</code> 声明变量！！！</p><h4 id="_2-1-2-赋值" tabindex="-1"><a class="header-anchor" href="#_2-1-2-赋值"><span>2.1.2 赋值</span></a></h4><p>声明（定义）变量相当于创造了一个空的“容器”，通过赋值向这个容器中添加数据。</p><div class="language-html line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="html" data-title="html" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>JavaScript 基础 - 声明和赋值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"> </span>
<span class="line">    <span class="token comment">// 声明(定义)变量有两部分构成：声明关键字、变量名（标识）</span></span>
<span class="line">    <span class="token comment">// let 即关键字，所谓关键字是系统提供的专门用来声明（定义）变量的词语</span></span>
<span class="line">    <span class="token comment">// age 即变量的名称，也叫标识符</span></span>
<span class="line">    <span class="token keyword">let</span> age</span>
<span class="line">    <span class="token comment">// 赋值，将 18 这个数据存入了 age 这个“容器”中</span></span>
<span class="line">    age <span class="token operator">=</span> <span class="token number">18</span></span>
<span class="line">    <span class="token comment">// 这样 age 的值就成了 18</span></span>
<span class="line">    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 也可以声明和赋值同时进行</span></span>
<span class="line">    <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;hello world!&#39;</span></span>
<span class="line">    <span class="token function">alert</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_2-1-3-变量更新" tabindex="-1"><a class="header-anchor" href="#_2-1-3-变量更新"><span>2.1.3 变量更新</span></a></h4><p>变量赋值后，还可以通过简单地给它一个不同的值来更新它。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 1.更新变量</span></span>
<span class="line"><span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">18</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token number">19</span></span>
<span class="line"><span class="token comment">// 注意: 不要多次声明同一个变量</span></span>
<span class="line"><span class="token comment">// let age = 19</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span></span>
<span class="line">   </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-1-4-声明多个变量" tabindex="-1"><a class="header-anchor" href="#_2-1-4-声明多个变量"><span>2.1.4 声明多个变量</span></a></h4><p><strong>语法</strong>：多个变量中间用逗号隔开。</p><p><strong>说明</strong>：看上去代码长度更短，但并不推荐这样。为了更好的可读性，一般情况下我们一行只声明一个变量。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 2. 一次声明多个变量的简写方式 (了解 能认出来就可以了)</span></span>
<span class="line"><span class="token comment">// let uname = &#39;pink老师&#39;, sex = &#39;男&#39;</span></span>
<span class="line"><span class="token keyword">let</span> uname <span class="token operator">=</span> <span class="token string">&#39;pink老师&#39;</span></span>
<span class="line"><span class="token keyword">let</span> sex <span class="token operator">=</span> <span class="token string">&#39;男&#39;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>uname<span class="token punctuation">,</span> sex<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-1-5-let-和-var-区别" tabindex="-1"><a class="header-anchor" href="#_2-1-5-let-和-var-区别"><span>2.1.5 let 和 var 区别</span></a></h4><p>在较旧的JavaScript，使用关键字 var 来声明变量 ，而不是 let</p><p>var 现在开发中一般不再使用它，只是我们可能再老版程序中看到它。</p><p>let 为了解决 var 的一些问题。</p><p>var 声明一些不合理的地方：</p><ol><li>可以先使用 在声明 (不合理)</li><li>var 声明过的变量可以重复声明(不合理)</li><li>比如变量提升、全局变量、没有块级作用域等等</li></ol><p><strong>结论：</strong></p><blockquote><p>var 就是个bug，别迷恋它了，以后声明变量我们统一使用 <strong>let</strong></p></blockquote><h3 id="_2-2-变量的本质" tabindex="-1"><a class="header-anchor" href="#_2-2-变量的本质"><span>2.2 变量的本质</span></a></h3><p>内存：计算机中存储数据的地方，相当于一个空间</p><p>变量本质：是程序在内存中申请的一块用来存放数据的小空间</p><figure><img src="`+l+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-3-变量名命名规则" tabindex="-1"><a class="header-anchor" href="#_2-3-变量名命名规则"><span>2.3 变量名命名规则</span></a></h3><p>关于变量的名称（标识符）需要遵守：</p><p><strong>规则：</strong></p><ol><li>只能是字母、数字、下划线、$，且不能能数字开头</li><li>字母区分大小写，如 Age 和 age 是不同的变量</li><li>JavaScript 内部已占用于单词（关键字或保留字）不允许使用</li><li>尽量保证变量具有一定的语义，见字知义</li></ol><p><strong>规范：</strong></p><ol><li>起名要有意义</li><li>遵守小驼峰命名法 <ol><li>第一个单词首字母小写，后面每个单词首字母大写。例：userName</li></ol></li></ol><div class="language-javascript line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="js" data-title="js" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token comment">// 1. 规则(法律)</span></span>
<span class="line"><span class="token comment">// 1.1 变量名不能是关键字</span></span>
<span class="line"><span class="token comment">// let let = 10</span></span>
<span class="line"><span class="token comment">// 1.2 变量名的组成: 英文字母 数字 _  $ ，不能以数字开头</span></span>
<span class="line"><span class="token comment">// let 1num = 10 错误</span></span>
<span class="line"><span class="token comment">// let num! = 10 错误</span></span>
<span class="line"><span class="token comment">// 1.3 js严格区分大小写</span></span>
<span class="line"><span class="token comment">// let age = 18</span></span>
<span class="line"><span class="token comment">// console.log(Age)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2. 规范(道德)</span></span>
<span class="line"><span class="token comment">// 2.1 起名要有意义</span></span>
<span class="line"><span class="token comment">// let age = 18</span></span>
<span class="line"><span class="token comment">// let nl = 19</span></span>
<span class="line"><span class="token comment">// 2.2 我们命名建议采取小驼峰命名法</span></span>
<span class="line"><span class="token keyword">let</span> myName <span class="token operator">=</span> <span class="token string">&#39;pink老师&#39;</span></span>
<span class="line"><span class="token keyword">let</span> myFirstName <span class="token operator">=</span> <span class="token string">&#39;p&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_3-常量" tabindex="-1"><a class="header-anchor" href="#_3-常量"><span>3. 常量</span></a></h2><p><strong>是什么</strong>：也是一个容器，用于保存数据的</p><p><strong>和变量的区别</strong>： 常量里面保存的值是不允许改变的</p><p><strong>使用场景</strong>：当某个值永远不会改变的时候，我们可以使用常量来保存，目的为了程序的安全</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 常量： 也是一个容器用来保存的数据</span></span>
<span class="line"><span class="token keyword">const</span> pi <span class="token operator">=</span> <span class="token number">3.14</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pi<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 注意事项：</span></span>
<span class="line"><span class="token comment">// 1. 常量里面的值是不允许修改的</span></span>
<span class="line">pi <span class="token operator">=</span> <span class="token number">3.141592653</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pi<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 2. 常量必须要初始化(声明常量的时候必须要赋值)</span></span>
<span class="line"><span class="token comment">// const url</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意： 常量不允许重新赋值,声明的时候必须赋值（初始化）</p></blockquote><h2 id="_3-1-数据类型" tabindex="-1"><a class="header-anchor" href="#_3-1-数据类型"><span>3.1 数据类型</span></a></h2><blockquote><p>计算机世界中的万事成物都是数据。</p></blockquote><p>生活中会把物品进行归类，不同的物品不能混淆在一起。</p><p>计算机程序可以处理大量的数据，方便程序员的使用数据。</p><figure><img src="`+c+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-2-数字型和字符串型" tabindex="-1"><a class="header-anchor" href="#_3-2-数字型和字符串型"><span>3.2 数字型和字符串型</span></a></h3><p><strong>数字型：</strong></p><p>即我们数学中学习到的数字，可以是整数、小数、正数、负数</p><p>通过<code>typeof</code>关键字检测数据类型</p><p><strong>字符串：</strong></p><p>被引号包裹的一段文字信息</p><p>JS中的字符串:</p><p>通过单引号（ ‘’） 、双引号（ “”）或反引号( \`\` ) 包裹的数据都属于字符串</p><p>单引号和双引号没有本质上的区别，推荐使用单引号。</p><blockquote><p>注意事项：</p><ol><li>单引号/双引号可以互相嵌套，但是不以自已嵌套自已（口诀：外双内单，或者外单内双）</li><li>一定注意变量名不要加引号，否则认为是字符串</li></ol></blockquote><div class="language-javascript line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="js" data-title="js" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token comment">// 1. 数字型： 用于计算的， js数字类型包含： 整数、小数</span></span>
<span class="line"><span class="token comment">// let num1 = 18</span></span>
<span class="line"><span class="token comment">// let num1 = -18</span></span>
<span class="line"><span class="token keyword">let</span> num1 <span class="token operator">=</span> <span class="token number">18.88</span></span>
<span class="line"><span class="token comment">// let num1 = -18.88</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> num1<span class="token punctuation">)</span>  <span class="token comment">// number   typeof 关键字检测数据类型</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2. 字符串类型: 被引号包裹的一段文字信息   单引号 双引号  反引号</span></span>
<span class="line"><span class="token keyword">let</span> goods <span class="token operator">=</span> <span class="token string">&#39;笔记本电脑&#39;</span></span>
<span class="line"><span class="token keyword">let</span> address <span class="token operator">=</span> <span class="token string">&quot;黑马程序员&quot;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> goods<span class="token punctuation">)</span>  <span class="token comment">// string</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> address<span class="token punctuation">)</span>  <span class="token comment">// string</span></span>
<span class="line"><span class="token keyword">let</span> color <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">粉红色</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"><span class="token keyword">let</span> tel <span class="token operator">=</span> <span class="token string">&#39;13612342234&#39;</span></span>
<span class="line"><span class="token comment">// 2.1 变量是不能加引号的,变量加了引号就不是盒子了，是一个字符串</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;goods&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 2.2 字符串嵌套的问题. 不能嵌套自己, 外单内双  或者 外双内单</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;今日特价&quot;跳楼大甩卖&quot;速速抢购&#39;</span><span class="token punctuation">)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;今日特价&#39;跳楼大甩卖&#39;速速抢购&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_3-3-模板字符串" tabindex="-1"><a class="header-anchor" href="#_3-3-模板字符串"><span>3.3 模板字符串</span></a></h3><p><strong>使用场景:</strong></p><p>拼接字符串和变量</p><p><strong>语法</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 1. 字符串拼接</span></span>
<span class="line"><span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">91</span></span>
<span class="line"><span class="token comment">// console.log(&#39;pink老师今年&#39; + age + &#39;岁&#39;)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;pink老师今年&#39;</span> <span class="token operator">+</span> age <span class="token operator">+</span> <span class="token string">&#39;岁&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2. 模板字符串</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">pink老师今年</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>age<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">岁</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 3. 模板字符串里面的字符串可以换行</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：反引号中间的字符串可以换行的</p></blockquote><h3 id="_3-4-布尔类型" tabindex="-1"><a class="header-anchor" href="#_3-4-布尔类型"><span>3.4 布尔类型</span></a></h3><p>表示肯定或否定时在计算机中对应的是布尔类型数据，它有两个固定的值 <code>true</code> 和 <code>false</code>，表示肯定的数据用 <code>true</code>，表示否定的数据用 <code>false</code>。</p><div class="language-html line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="html" data-title="html" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>JavaScript 基础 - 数据类型<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"> </span>
<span class="line">    <span class="token comment">//  pink老师帅不帅？回答 是 或 否</span></span>
<span class="line">    <span class="token keyword">let</span> isCool <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// 是的，摔死了！</span></span>
<span class="line">    isCool <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// 不，套马杆的汉子！</span></span>
<span class="line"></span>
<span class="line">    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> isCool<span class="token punctuation">)</span> <span class="token comment">// 结果为 boolean</span></span>
<span class="line">  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_3-5-undefined" tabindex="-1"><a class="header-anchor" href="#_3-5-undefined"><span>3.5 undefined</span></a></h3><p>未定义是比较特殊的类型，只有一个值 undefined，只声明变量，不赋值的情况下，变量的默认值为 undefined，一般很少【直接】为某个变量赋值为 undefined。</p><div class="language-html line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="html" data-title="html" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>JavaScript 基础 - 数据类型<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  </span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"> </span>
<span class="line">    <span class="token comment">// 只声明了变量，并末赋值</span></span>
<span class="line">    <span class="token keyword">let</span> tmp<span class="token punctuation">;</span></span>
<span class="line">    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> tmp<span class="token punctuation">)</span> <span class="token comment">// 结果为 undefined</span></span>
<span class="line">  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>注：JavaScript 中变量的值决定了变量的数据类型。</strong></p><h2 id="_4-运算符" tabindex="-1"><a class="header-anchor" href="#_4-运算符"><span>4. 运算符</span></a></h2><h3 id="_4-1-算术运算符" tabindex="-1"><a class="header-anchor" href="#_4-1-算术运算符"><span>4.1 算术运算符</span></a></h3><p>数字是用来计算的，比如：乘法 * 、除法 / 、加法 + 、减法 - 等等，所以经常和算术运算符一起。</p><p>算术运算符：也叫数学运算符，主要包括加、减、乘、除、取余（求模）等</p><table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td>+</td><td>求和</td></tr><tr><td>-</td><td>求差</td></tr><tr><td>*</td><td>求积</td></tr><tr><td>/</td><td>求商</td></tr><tr><td>%</td><td>取模（取余数），开发中经常用于作为某个数字是否被整除</td></tr></tbody></table><blockquote><p>注意：在计算失败时，显示的结果是 NaN （not a number）</p></blockquote><div class="language-javascript line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="js" data-title="js" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token comment">// 算术运算符</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">//  4 </span></span>
<span class="line"><span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">10</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span>  <span class="token comment">// 20</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num <span class="token operator">+</span> num<span class="token punctuation">)</span>  <span class="token comment">// 20</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 1. 取模(取余数)  使用场景：  用来判断某个数是否能够被整除</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">//  0  </span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">6</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">//  0</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">//  2</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">%</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">//  3</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2. 注意事项 : 如果我们计算失败，则返回的结果是 NaN (not a number)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;pink老师&#39;</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;pink老师&#39;</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;pink老师&#39;</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span>   <span class="token comment">// pink老师2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_4-2-赋值运算符" tabindex="-1"><a class="header-anchor" href="#_4-2-赋值运算符"><span>4.2 赋值运算符</span></a></h3><p>赋值运算符：对变量进行赋值的运算符</p><p>= 将等号右边的值赋予给左边, 要求左边必须是一个容器</p><table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td>+=</td><td>加法赋值</td></tr><tr><td>-+</td><td>减法赋值</td></tr><tr><td>*=</td><td>乘法赋值</td></tr><tr><td>/=</td><td>除法赋值</td></tr><tr><td>%=</td><td>取余赋值</td></tr></tbody></table><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 赋值运算符</span></span>
<span class="line"><span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line"><span class="token comment">// 1. 需求 我们想要num变量里面的值 + 1， 加完之后再把计算结果存到num里面</span></span>
<span class="line"><span class="token comment">// num = num + 1</span></span>
<span class="line"><span class="token comment">// console.log(num)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2. += 赋值运算符</span></span>
<span class="line">num <span class="token operator">+=</span> <span class="token number">1</span>   <span class="token comment">// 当前情况下是等价于  num = num + 1</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-自增-自减运算符" tabindex="-1"><a class="header-anchor" href="#_4-3-自增-自减运算符"><span>4.3 自增/自减运算符</span></a></h3><table><thead><tr><th>符号</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>++</td><td>自增</td><td>变量自身的值加1，例如: x++</td></tr><tr><td>--</td><td>自减</td><td>变量自身的值减1，例如: x--</td></tr></tbody></table><ol><li>++在前和++在后在单独使用时二者并没有差别，而且一般开发中我们都是独立使用</li><li>++在后（后缀式）我们会使用更多</li></ol><blockquote><p>注意：</p><ol><li>只有变量能够使用自增和自减运算符</li><li>++、-- 可以在变量前面也可以在变量后面，比如: x++ 或者 ++x</li></ol></blockquote><div class="language-javascript line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="js" data-title="js" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token comment">// 1. 自增运算符： 可以让变量里面的值加1</span></span>
<span class="line"><span class="token comment">// let x = 3</span></span>
<span class="line"><span class="token comment">// // x++   // x = x + 1 或者  x += 1 </span></span>
<span class="line"><span class="token comment">// ++x</span></span>
<span class="line"><span class="token comment">// console.log(x)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2. ++在前和++在后的区别。 如果单独使用，没有区别，如果参与了运算就有区别</span></span>
<span class="line"><span class="token comment">// 2.1 ++在前  前缀式 ： 先对变量值+1， 然后拿着变量值做运算</span></span>
<span class="line"><span class="token comment">// let x = 3</span></span>
<span class="line"><span class="token comment">// let y = ++x</span></span>
<span class="line"><span class="token comment">// console.log(y) // 4</span></span>
<span class="line"><span class="token comment">// console.log(x) // 4</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2.2 ++在后 后缀式 ： 先拿着变量值运算，再对变量值+1 </span></span>
<span class="line"><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line"><span class="token keyword">let</span> y <span class="token operator">=</span> x<span class="token operator">++</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token comment">// 3</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token comment">// 4</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_4-4-比较运算符" tabindex="-1"><a class="header-anchor" href="#_4-4-比较运算符"><span>4.4 比较运算符</span></a></h3><p>使用场景：比较两个数据大小、是否相等，根据比较结果返回一个布尔值（true / false）</p><table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td>&gt;</td><td>左边是否大于右边</td></tr><tr><td>&lt;</td><td>左边是否小于右边</td></tr><tr><td>&gt;=</td><td>左边是否大于或等于右边</td></tr><tr><td>&lt;=</td><td>左边是否小于或等于右边</td></tr><tr><td>===</td><td>左右两边是否<code>类型</code>和<code>值</code>都相等（重点）</td></tr><tr><td>==</td><td>左右两边<code>值</code>是否相等</td></tr><tr><td>!=</td><td>左右值不相等</td></tr><tr><td>!==</td><td>左右两边是否不全等</td></tr></tbody></table><div class="language-javascript line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="js" data-title="js" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token comment">// 比较运算符： 根据比较结果返回 布尔值 true / false </span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span>  <span class="token comment">// false</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">// true</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&gt;=</span> <span class="token number">5</span><span class="token punctuation">)</span>  <span class="token comment">//  false </span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&gt;=</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment">// true</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">)</span>  <span class="token comment">// true</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// console.log(3 = 3)  // 错误</span></span>
<span class="line"><span class="token comment">// 1. 判断是否相等我们使用 ===  要求 值 和 数据类型都相等返回的结果才是true,提倡使用三等  全等</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span>    <span class="token comment">// true </span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">===</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">)</span> <span class="token comment">//  false </span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">!==</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment">// false </span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">!==</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2. == 判断是否相等，使用较少, 判断值是否相等，并不判断数据类型是否相等</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment">// true </span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">==</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">)</span> <span class="token comment">//  true </span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// false </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_4-5-逻辑运算符" tabindex="-1"><a class="header-anchor" href="#_4-5-逻辑运算符"><span>4.5 逻辑运算符</span></a></h3><p>使用场景：可以把多个布尔值放到一起运算，最终返回一个布尔值</p><table><thead><tr><th>符号</th><th>名称</th><th>日常读法</th><th>特点</th><th>口诀</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>逻辑与</td><td>并且</td><td>符号两边有一个假的结果为假</td><td>一假则假</td></tr><tr><td>||</td><td>逻辑或</td><td>或者</td><td>符号两边有一个真的结果为真</td><td>一真则真</td></tr><tr><td>!</td><td>逻辑非</td><td>取反</td><td>true变false false变true</td><td>真变假，假变真</td></tr></tbody></table><table><thead><tr><th>A</th><th>B</th><th>A &amp;&amp; B</th><th>A || B</th><th>!A</th></tr></thead><tbody><tr><td>false</td><td>false</td><td>false</td><td>false</td><td>true</td></tr><tr><td>false</td><td>true</td><td>false</td><td>true</td><td>true</td></tr><tr><td>true</td><td>false</td><td>false</td><td>true</td><td>false</td></tr><tr><td>true</td><td>true</td><td>true</td><td>true</td><td>false</td></tr></tbody></table><div class="language-javascript line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="js" data-title="js" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token comment">// 逻辑运算符:  逻辑与 &amp;&amp;  逻辑或 ||  逻辑非 ! </span></span>
<span class="line"><span class="token comment">// 1.逻辑与 &amp;&amp;  一假则假</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span> <span class="token boolean">false</span><span class="token punctuation">)</span>  <span class="token comment">// false</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span> <span class="token boolean">true</span><span class="token punctuation">)</span>  <span class="token comment">// false</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> <span class="token boolean">false</span><span class="token punctuation">)</span>  <span class="token comment">// false</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">&amp;&amp;</span> <span class="token boolean">true</span><span class="token punctuation">)</span>  <span class="token comment">// true</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">&gt;</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> <span class="token number">2</span> <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span>  <span class="token comment">// false </span></span>
<span class="line"><span class="token comment">// 判断某个数字是否在 8096到36999 之间： 数字大于等于 8096 并且小于等于36999</span></span>
<span class="line"><span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">1000</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num <span class="token operator">&gt;=</span> <span class="token number">8096</span> <span class="token operator">&amp;&amp;</span> num <span class="token operator">&lt;=</span> <span class="token number">36999</span><span class="token punctuation">)</span>  <span class="token comment">// false</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;------&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 2. 逻辑或 ||   一真则真</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">)</span>  <span class="token comment">// true</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">||</span> <span class="token boolean">true</span><span class="token punctuation">)</span>  <span class="token comment">// true</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">||</span> <span class="token boolean">true</span><span class="token punctuation">)</span>  <span class="token comment">// true</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token boolean">false</span> <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">)</span>  <span class="token comment">// false</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;------&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 3. 逻辑非 取反</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token boolean">false</span><span class="token punctuation">)</span>  <span class="token comment">// true</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token boolean">true</span><span class="token punctuation">)</span>  <span class="token comment">// false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_4-6-运算符优先级" tabindex="-1"><a class="header-anchor" href="#_4-6-运算符优先级"><span>4.6 运算符优先级</span></a></h3><figure><img src="`+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>逻辑运算符优先级： ！&gt; &amp;&amp; &gt; ||</p></blockquote><p>重点单词：</p><figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',139)]))}const v=n(u,[["render",d],["__file","js01.html.vue"]]),g=JSON.parse('{"path":"/codenotes/ui/js/js01.html","title":"","lang":"zh-CN","frontmatter":{"description":"1. js介绍 1.1 简介 是一种运行在客户端（浏览器）的编程语言，可以用来创建动态更新的内容，控制多媒体，制作图像动画等交互效果 1.2 书写方式 JavaScript 程序不能独立运行，它需要被嵌入 HTML 中，然后浏览器才能执行 JavaScript 代码。通过 script 标签将 JavaScript 代码引入到 HTML 中，有两种方式...","head":[["meta",{"property":"og:url","content":"https://hwchen.top/codenotes/ui/js/js01.html"}],["meta",{"property":"og:site_name","content":"Ahzy"}],["meta",{"property":"og:description","content":"1. js介绍 1.1 简介 是一种运行在客户端（浏览器）的编程语言，可以用来创建动态更新的内容，控制多媒体，制作图像动画等交互效果 1.2 书写方式 JavaScript 程序不能独立运行，它需要被嵌入 HTML 中，然后浏览器才能执行 JavaScript 代码。通过 script 标签将 JavaScript 代码引入到 HTML 中，有两种方式..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ahzy\\",\\"url\\":\\"https://gitee.com/private_crh\\"}]}"]]},"headers":[{"level":2,"title":"1. js介绍","slug":"_1-js介绍","link":"#_1-js介绍","children":[{"level":3,"title":"1.1 简介","slug":"_1-1-简介","link":"#_1-1-简介","children":[]},{"level":3,"title":"1.2  书写方式","slug":"_1-2-书写方式","link":"#_1-2-书写方式","children":[{"level":4,"title":"1.2.1 内部方式","slug":"_1-2-1-内部方式","link":"#_1-2-1-内部方式","children":[]},{"level":4,"title":"1.2.2 外部形式","slug":"_1-2-2-外部形式","link":"#_1-2-2-外部形式","children":[]},{"level":4,"title":"1.2.3 注释和结束符","slug":"_1-2-3-注释和结束符","link":"#_1-2-3-注释和结束符","children":[]},{"level":4,"title":"1.2.4 单行注释","slug":"_1-2-4-单行注释","link":"#_1-2-4-单行注释","children":[]},{"level":4,"title":"1.2.5 多行注释","slug":"_1-2-5-多行注释","link":"#_1-2-5-多行注释","children":[]},{"level":4,"title":"1.2.6 结束符","slug":"_1-2-6-结束符","link":"#_1-2-6-结束符","children":[]}]},{"level":3,"title":"1.3 输入和输出语句","slug":"_1-3-输入和输出语句","link":"#_1-3-输入和输出语句","children":[{"level":4,"title":"1.3.1 输出语句","slug":"_1-3-1-输出语句","link":"#_1-3-1-输出语句","children":[]},{"level":4,"title":"1.3.2 输入语句","slug":"_1-3-2-输入语句","link":"#_1-3-2-输入语句","children":[]}]}]},{"level":2,"title":"2. 变量","slug":"_2-变量","link":"#_2-变量","children":[{"level":3,"title":"2.1 简介","slug":"_2-1-简介","link":"#_2-1-简介","children":[{"level":4,"title":"2.1.1 声明","slug":"_2-1-1-声明","link":"#_2-1-1-声明","children":[]},{"level":4,"title":"2.1.2 赋值","slug":"_2-1-2-赋值","link":"#_2-1-2-赋值","children":[]},{"level":4,"title":"2.1.3 变量更新","slug":"_2-1-3-变量更新","link":"#_2-1-3-变量更新","children":[]},{"level":4,"title":"2.1.4 声明多个变量","slug":"_2-1-4-声明多个变量","link":"#_2-1-4-声明多个变量","children":[]},{"level":4,"title":"2.1.5 let 和 var 区别","slug":"_2-1-5-let-和-var-区别","link":"#_2-1-5-let-和-var-区别","children":[]}]},{"level":3,"title":"2.2 变量的本质","slug":"_2-2-变量的本质","link":"#_2-2-变量的本质","children":[]},{"level":3,"title":"2.3 变量名命名规则","slug":"_2-3-变量名命名规则","link":"#_2-3-变量名命名规则","children":[]}]},{"level":2,"title":"3. 常量","slug":"_3-常量","link":"#_3-常量","children":[]},{"level":2,"title":"3.1 数据类型","slug":"_3-1-数据类型","link":"#_3-1-数据类型","children":[{"level":3,"title":"3.2 数字型和字符串型","slug":"_3-2-数字型和字符串型","link":"#_3-2-数字型和字符串型","children":[]},{"level":3,"title":"3.3 模板字符串","slug":"_3-3-模板字符串","link":"#_3-3-模板字符串","children":[]},{"level":3,"title":"3.4 布尔类型","slug":"_3-4-布尔类型","link":"#_3-4-布尔类型","children":[]},{"level":3,"title":"3.5 undefined","slug":"_3-5-undefined","link":"#_3-5-undefined","children":[]}]},{"level":2,"title":"4. 运算符","slug":"_4-运算符","link":"#_4-运算符","children":[{"level":3,"title":"4.1 算术运算符","slug":"_4-1-算术运算符","link":"#_4-1-算术运算符","children":[]},{"level":3,"title":"4.2 赋值运算符","slug":"_4-2-赋值运算符","link":"#_4-2-赋值运算符","children":[]},{"level":3,"title":"4.3 自增/自减运算符","slug":"_4-3-自增-自减运算符","link":"#_4-3-自增-自减运算符","children":[]},{"level":3,"title":"4.4 比较运算符","slug":"_4-4-比较运算符","link":"#_4-4-比较运算符","children":[]},{"level":3,"title":"4.5 逻辑运算符","slug":"_4-5-逻辑运算符","link":"#_4-5-逻辑运算符","children":[]},{"level":3,"title":"4.6 运算符优先级","slug":"_4-6-运算符优先级","link":"#_4-6-运算符优先级","children":[]}]}],"git":{},"readingTime":{"minutes":14.27,"words":4282},"filePathRelative":"codenotes/ui/js/js01.md","excerpt":"<h2>1. js介绍</h2>\\n<h3>1.1 简介</h3>\\n<p>是一种运行在客户端（浏览器）的编程语言，可以用来创建动态更新的内容，控制多媒体，制作图像动画等交互效果</p>\\n<h3>1.2  书写方式</h3>\\n<p>JavaScript 程序不能独立运行，它需要被嵌入 HTML 中，然后浏览器才能执行 JavaScript 代码。通过 <code>script</code> 标签将 JavaScript 代码引入到 HTML 中，有两种方式：</p>\\n<h4>1.2.1 内部方式</h4>\\n<p>通过 <code>script</code> 标签包裹 JavaScript 代码</p>","autoDesc":true}');export{v as comp,g as data};
