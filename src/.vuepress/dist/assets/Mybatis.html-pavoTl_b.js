import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,b as a,a as s,o as l}from"./app-eWV4nnR8.js";const p={};function i(c,n){return l(),e("div",null,n[0]||(n[0]=[a(`<div style="text-align:left;"><p> <img src="https://gitee.com/private_crh/notes/raw/master//typora/image-20241013235338549.png" alt="" width="800" height="280" loading="lazy"></p></div><div style="text-align:right;"><p><strong>弱小和无知不是生存的障碍, 傲慢才是</strong></p></div><p>官网：https://mybatis.org/</p><h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1. 简介</span></a></h2><p>MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。</p><p>MyBatis 不像 Hibernete 等这些全自动框架，它把关键的SQL部分交给程序员自己编写，而不是自动生成</p><h2 id="_2-入门案例" tabindex="-1"><a class="header-anchor" href="#_2-入门案例"><span>2. 入门案例</span></a></h2><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h3><p>application.popertities</p><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:15;"><pre><code><span class="line"></span>
<span class="line"># ?allowMultiQueries=true表示开启批量sql发送给数据库执行，每个sql用分号相隔</span>
<span class="line">spring.datasource.url=jdbc:mysql://localhost:3306/mybatis-example?allowMultiQueries=true</span>
<span class="line">spring.datasource.username=root</span>
<span class="line">spring.datasource.password=123456</span>
<span class="line">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span>
<span class="line"></span>
<span class="line"># 告诉MyBatis， xml文件(Mapper文件) 都在哪里</span>
<span class="line">mybatis.mapper-locations=classpath:mapper/**.xml</span>
<span class="line"># 开启驼峰命名</span>
<span class="line">mybatis.configuration.map-underscore-to-camel-case=true</span>
<span class="line"></span>
<span class="line"># 开启sql日志</span>
<span class="line">logging.level.com.atguigu.mybatis.mapper=debug</span>
<span class="line">#11111</span>
<span class="line">#11111</span>
<span class="line">#11111</span>
<span class="line">#11111</span>
<span class="line">#11111</span>
<span class="line">#11111</span>
<span class="line">#11111</span>
<span class="line">#11111</span>
<span class="line">#11111</span>
<span class="line">#11111</span>
<span class="line">#11111</span>
<span class="line">#11111</span>
<span class="line">#11111</span>
<span class="line">#11111</span>
<span class="line">#11111</span>
<span class="line">#11111</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="对比" tabindex="-1"><a class="header-anchor" href="#对比"><span><strong>对比</strong></span></a></h3><blockquote><ul><li>以前: Dao接口 --&gt; Dao实现 --&gt; 标注 @Repository注解</li></ul><ul><li>现在: Mapper接口 --&gt; Mapper.xml实现; --&gt; 标注 @Mapper注解</li></ul></blockquote><p>安装mybatisx插件，自动为 mapper类生成 mapper文件</p><h3 id="细节" tabindex="-1"><a class="header-anchor" href="#细节"><span><strong>细节</strong></span></a></h3><blockquote><ol><li>每个Dao 接口 对应一个 XML 实现文件</li><li>Dao 实现类 是一个由 MyBatis 自动创建出来的代理对象</li><li>XML 中 <mark>namespace</mark> 需要绑定 Dao 接口 的全类名</li><li>每个 CRUD 标签 的 <mark>id</mark> 必须为Dao接口的方法名</li><li>每个 CRUD标签的 <mark>resultType</mark> 是Dao接口的返回值类型全类名</li><li>以后 xxxDao 我们将按照习惯命名为 xxxMapper，这样更明显的表示出 持久层是用 MyBatis 实现的</li></ol></blockquote><h2 id="_3-获取自增id" tabindex="-1"><a class="header-anchor" href="#_3-获取自增id"><span>3. 获取自增id</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;insert id=&quot;addEmp&quot; useGeneratedKeys=&quot;true&quot; keyProperty=&quot;id&quot;&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>自增ID回填</p><ul><li><strong>useGeneratedKeys:</strong> 使用自动生成的id</li><li><strong>keyProperty:</strong> 指定自动生成id对应的属性; 把自动生成的id封装到Emp对象的id属性中</li></ul><h2 id="_4-参数处理" tabindex="-1"><a class="header-anchor" href="#_4-参数处理"><span>4. 参数处理</span></a></h2><h3 id="参数传递" tabindex="-1"><a class="header-anchor" href="#参数传递"><span>参数传递</span></a></h3><h4 id="区别" tabindex="-1"><a class="header-anchor" href="#区别"><span>区别</span></a></h4><blockquote><ul><li>#{}：底层使用 PreparedStatement 方式，SQL预编译后设置参数</li><li>\${}：底层使用 Statement 方式，SQL无预编译，直接拼接参数</li></ul></blockquote><h4 id="使用时机" tabindex="-1"><a class="header-anchor" href="#使用时机"><span>使用时机</span></a></h4><ol><li>所有参数位置，都应该用 #{}</li><li>需要动态表名等，才用 \${}，而且需要自己编写防SQL注入攻击代码</li></ol><h3 id="单个参数直接取值" tabindex="-1"><a class="header-anchor" href="#单个参数直接取值"><span>单个参数直接取值</span></a></h3>`,26),s("table",{map中属性名:""},[s("thead",null,[s("tr",null,[s("th",null,"传参形式"),s("th",null,"取值方式")])]),s("tbody",null,[s("tr",{变量名:""},[s("td",null,"单个参数 - 普通类型"),s("td",null,"#")]),s("tr",null,[s("td",null,"单个参数 - List类型"),s("td",null,"'#{变量名[索引]}'")]),s("tr",{对象中属性名:""},[s("td",null,"单个参数 - 对象类型"),s("td",null,"#")]),s("tr",null,[s("td",null,"单个参数 - Map类型"),s("td",null,"#")])])],-1),s("p",null,"一个参数的时候，取值方式随便起名也可以接收",-1),s("h3",{id:"多个参数标注参数名称",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#多个参数标注参数名称"},[s("span",null,"多个参数标注参数名称")])],-1),s("table",{param指定的名:""},[s("thead",null,[s("tr",null,[s("th",null,"传参形式"),s("th",null,"取值方式")])]),s("tbody",null,[s("tr",null,[s("td",null,"多个参数 - 无@Param"),s("td",null,"#{变量名} //新版兼容")]),s("tr",null,[s("td",null,"多个参数 - 有@Param"),s("td",null,"#")])])],-1),a(`<div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">getEmploy(	@Param(“id”)Long id,</span>
<span class="line">			@Param(“ext”)Map&lt;String,Object&gt; m,</span>
<span class="line">			@Param(“ids”)List&lt;Long&gt; ids,</span>
<span class="line">			@Param(“emp”)Employ e			)</span>
<span class="line">			</span>
<span class="line">			</span>
<span class="line">// 传值方式</span>
<span class="line">#{id}、</span>
<span class="line">#{ext.name}、#{ext.age}，</span>
<span class="line">#{ids[0]}、#{ids[1]}，</span>
<span class="line">#{e.email}、#{e.age}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>即使只有一个参数，也可以用 @Param 指定参数名</p><h2 id="_5-结果封装" tabindex="-1"><a class="header-anchor" href="#_5-结果封装"><span>5. 结果封装</span></a></h2><h3 id="返回普通类型" tabindex="-1"><a class="header-anchor" href="#返回普通类型"><span>返回普通类型</span></a></h3><p>在 resultType 中声明返回值类型<mark>全类名</mark>即可</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"> &lt;select id=&quot;getEmp&quot; resultType=&quot;com.atguigu.mybatis.entity.Employee&quot;&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>MyBatis 为 java.lang 下的很多数据类型都起了别名，不用写全类名也可以</li></ul><p>默认别名规则：</p><figure><img src="https://gitee.com/private_crh/notes/raw/master//typora/image-20241013153221208.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="返回集合类型" tabindex="-1"><a class="header-anchor" href="#返回集合类型"><span>返回集合类型</span></a></h3><blockquote><p>**List：**resultType 为集合中的 元素类型</p><p>**Map：**resultType 为集合中的 元素类型</p></blockquote><p>关于Map一些细节</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">// 实际保存的不是 Emp，是HashMap</span>
<span class="line">// HashMap列名为Map的key    HashMap的值为Map的值</span>
<span class="line">// 该注解指定了Emp中的id作为Map的key，Emp的其他属性作为Map的value</span>
<span class="line">@MapKey(&quot;id&quot;) </span>
<span class="line">Map&lt;Integer，Emp&gt; getAllMap();</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种方式无法从map中取出emp</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;select id=&quot;getAllMap&quot; resultType=&quot;java,util.Map&quot;&gt;</span>
<span class="line">	select * from t_emp</span>
<span class="line">&lt;/select&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接取出emp</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;select id=&quot;getAllMap&quot; resultType=&quot;com.atguigu.mybatis.bean.Emp&quot;&gt;</span>
<span class="line">	select * from t_emp</span>
<span class="line">&lt;/select&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义结果集" tabindex="-1"><a class="header-anchor" href="#自定义结果集"><span>自定义结果集</span></a></h3><p>使用原因：</p><p>数据库的字段 和 Bean的属性 不能 一 一 对应</p><h4 id="入门案例" tabindex="-1"><a class="header-anchor" href="#入门案例"><span>入门案例</span></a></h4><div class="language-xml line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="xml" data-title="xml" style="--vp-collapsed-lines:15;"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>EmpRM<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.atguigu.mybatis.bean.Emp<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token comment">&lt;!--id:  声明主键映射规则--&gt;</span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>emp_name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>empName<span class="token punctuation">&quot;</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>java.lang.String<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>VARCHAR<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>emp_salary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>empSalary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line">        <span class="token comment">&lt;!--result:  声明普通列映射规则--&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token comment">&lt;!-- resultMap:指定自定义映射规则 还可以通过全类名调用别人的结果集--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getEmpById<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>EmpRM<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	select * from t_emp	where id = #{id}</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ul><li>column：数据库列名</li><li>property：对象属性名</li></ul><p>以下两个属性自动识别，不用手动指定</p><ul><li>javaType：对象属性值类型</li><li>jdbcType：数据库字段类型</li></ul></blockquote><h4 id="一对一的关联封装" tabindex="-1"><a class="header-anchor" href="#一对一的关联封装"><span>一对一的关联封装</span></a></h4><p>进行联合查询时，一个pojo包含另一个pojo时，默认的话无法封装</p><p>使用association</p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" data-title="java" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token annotation punctuation">@Data</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Order</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">String</span> address<span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> amount<span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">Long</span> customerId<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">//订单对应的客户</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">Customer</span> customer<span class="token operator">:</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Data</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Customer</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">String</span> customerName<span class="token operator">:</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">String</span> phone<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><div class="language-xml line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="xml" data-title="xml" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0rderRM<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.atguigu.mybatis.bean.Order<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>address<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>address<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>amount<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>amount<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>customer_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>customerId<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    </span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>association</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>customer<span class="token punctuation">&quot;</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.atguigu,mybatis.bean.Customer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>c_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>customer_name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>customerName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>phone<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>phone<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>association</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="一对多关系的关联封装" tabindex="-1"><a class="header-anchor" href="#一对多关系的关联封装"><span>一对多关系的关联封装</span></a></h4><p>多对多则是双向的一对多，同样使用collection</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token annotation punctuation">@Data</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Customer</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">String</span> oustomerName<span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">String</span> phone<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">//保存所有订单</span></span>
<span class="line">	<span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Order</span><span class="token punctuation">&gt;</span></span> orders<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="xml" data-title="xml" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CutomerRM<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.atguigu.mybatis.bean.Customer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>c_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>customer_name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>customerName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>phone<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>phone<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    </span>
<span class="line">	<span class="token comment">&lt;!--   ofType: 集合中元素的类型 	--&gt;</span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>collection</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>orders<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ofType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.atguigu.mybatis,bean.Order<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>address<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>address<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>amount<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>amount<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>c_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>customerId<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>collection</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="分步查询" tabindex="-1"><a class="header-anchor" href="#分步查询"><span>分步查询</span></a></h4><p>原生的分步需要写两条sql，手动调用两次方法，再进行合并</p><p>mybatis自动的分步查询机制，自动调用</p><p>可写在association或collection标签下</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">// 只需传入id</span>
<span class="line">Customer getCustomerByIdAndOrdersStep(Long id);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">&lt;select id=&quot;getOrdersByCustomerId&quot; resultType=&quot;com.atguigu.mybatis.bean.Order&quot;&gt;</span>
<span class="line">	select * from t_order where customer_id = #{cId}</span>
<span class="line">&lt;/select&gt;</span>
<span class="line"></span>
<span class="line">&lt;resultMap id=&quot;CustomerOrdersStepRM&quot; type=&quot;com,atquigu.mybatis,bean.Customer&quot;&gt;</span>
<span class="line">	&lt;id column=&quot;id&quot; property=&quot;id&quot;&gt;&lt;/id&gt;</span>
<span class="line">	&lt;result column=&quot;customer_name&quot; property=&quot;customerName&quot;&gt;&lt;/result&gt;</span>
<span class="line">	&lt;result column=&quot;phone&quot; property=&quot;phone&quot;&gt;&lt;/result&gt;</span>
<span class="line">	</span>
<span class="line">	&lt;collection property=&quot;orders&quot;</span>
<span class="line">				</span>
<span class="line">				select=&quot;com.atquigu.mybatis.mapper.OrderCustomerStepMapper.getOrdersByCustomerId&quot;</span>
<span class="line">                column=&quot;id&quot; &gt;</span>
<span class="line">	&lt;/collection&gt;</span>
<span class="line">&lt;/resultMap&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><blockquote><ul><li><p>select：自动调用getOrdersByCustomerId方法</p></li><li><p>column：将订单表的id传给cId使用</p><p>多个参数的时候 column=“{cid=id, name=customer_name}” 标准写法</p></li><li><p>不用指定ofType，因为调用select后已经明确了返回结果</p></li></ul></blockquote><h5 id="超级分步" tabindex="-1"><a class="header-anchor" href="#超级分步"><span>超级分步</span></a></h5><p>避免出现栈溢出（stackoverflow）</p><p>以查询订单起步，查到订单的顾客，又查到顾客的所有订单（该订单不能再使用自定义结果集查顾客）</p><h5 id="延迟加载" tabindex="-1"><a class="header-anchor" href="#延迟加载"><span>延迟加载</span></a></h5><p>分步查询有时候并不需要立即运行，我们希望在用到的时候再去查询，可以开启延迟加载的功能。</p><p>全局配置</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">mybatis.configuration.lazy-loading-enabled=true</span>
<span class="line">mybatis.configuration.aggressive-lazy-loading=false</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><mark>注意</mark></p><blockquote><p>不能直接用order测试延迟，应用order.getXXX(); 因为pojo类用了@Data 有toString方法，导致所有的信息都被使用到，则测不出分步</p></blockquote><h2 id="_6-动态sql" tabindex="-1"><a class="header-anchor" href="#_6-动态sql"><span>6. 动态SQL</span></a></h2><h3 id="if" tabindex="-1"><a class="header-anchor" href="#if"><span>IF</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;if test=&quot;xx != null&quot;&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>test中写判断条件</p><h3 id="where" tabindex="-1"><a class="header-anchor" href="#where"><span>where</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;where&gt;&lt;/where&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>自动处理多余的 and，or，where，解决语法</p><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set"><span>set</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;set&gt;&lt;/set&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>自动处理多余的 逗号，解决语法错误</p><h3 id="trim" tabindex="-1"><a class="header-anchor" href="#trim"><span>trim</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select *from t_emp</span>
<span class="line">&lt;trim prefix=&quot;where&quot; suffix=&quot;&quot;&gt;</span>
<span class="line">	&lt;if test=&quot;name != null&quot;&gt;</span>
<span class="line">		emp_name= #{name}</span>
<span class="line">	&lt;/if&gt;</span>
<span class="line">	&lt;if test=&quot;salary != null&quot;&gt;</span>
<span class="line">		and emp_salary = #{salary};</span>
<span class="line">	&lt;/if&gt;</span>
<span class="line">&lt;/trim&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select *from t_emp</span>
<span class="line">&lt;trim prefix=&quot;where&quot; prefix0verrides=&quot;and|or&quot;&gt;</span>
<span class="line">	and emp_salary = #{salary}</span>
<span class="line">&lt;/trim&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><ul><li>trim标签体内有东西时才拼接前置后置</li><li>前置覆盖：例如上述将标签体and或or覆盖成where</li></ul></blockquote><p>自定义字符串截串规则，去空白</p><h3 id="choose、when、otherwise" tabindex="-1"><a class="header-anchor" href="#choose、when、otherwise"><span>choose、when、otherwise</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">select *from t_emp</span>
<span class="line">&lt;where&gt;</span>
<span class="line">	&lt;choose&gt;</span>
<span class="line">		&lt;when test=&quot;name != null&quot;&gt;</span>
<span class="line">			emp_name=#{name} </span>
<span class="line">		&lt;/when&gt;</span>
<span class="line">		&lt;when test=&quot;salary &gt; 3000&quot;&gt;</span>
<span class="line">			emp_salary =#{salary}</span>
<span class="line">		&lt;/when&gt;</span>
<span class="line">		&lt;otherwise&gt;</span>
<span class="line">			id =1</span>
<span class="line">		&lt;/otherwise&gt;</span>
<span class="line">	&lt;/choose&gt;</span>
<span class="line">&lt;/where&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><blockquote><p>多个分支中只选择一个，无需考虑逗号and等问题</p></blockquote><h3 id="foreach" tabindex="-1"><a class="header-anchor" href="#foreach"><span>foreach</span></a></h3><p>用于批量插入等场景</p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>collection</td><td>要遍历的集合名</td></tr><tr><td>item</td><td>将当前遍历出的元素赋值给指定变量</td></tr><tr><td>separator</td><td>每次遍历时元素间的分隔符</td></tr><tr><td>open</td><td>拼好后，字符串整体的前面要添加的字符串</td></tr><tr><td>close</td><td>拼好后，字符串整体的后面要添加的字符串</td></tr><tr><td>index</td><td>这里起一个名字，便于后面引用</td></tr></tbody></table><ul><li>遍历Lst集合，这里能够得到List集合的索引值</li><li>遍历Map集合，这里能够得到Map集合的key</li></ul><p><mark>批量sql数据库默认支持回滚，而分布式事务一般不支持</mark></p><h3 id="sql片段" tabindex="-1"><a class="header-anchor" href="#sql片段"><span>sql片段</span></a></h3><p>可复用的片段提取出来</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;sql id=&quot;column_names&quot;&gt;</span>
<span class="line">  id,emp_name empName,age,emp_salary empSalary</span>
<span class="line">&lt;/sql&gt;</span>
<span class="line"></span>
<span class="line">select	&lt;include refid=&quot;column_names&quot;&gt;&lt;/include&gt;	from t_emp</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-特殊字符" tabindex="-1"><a class="header-anchor" href="#_8-特殊字符"><span>8. 特殊字符</span></a></h2><p>xml中使用到以下字符需转义</p><table><thead><tr><th>原始</th><th>转义</th></tr></thead><tbody><tr><td>&amp;</td><td><code>&amp;amp;</code></td></tr><tr><td>&lt;</td><td><code>&amp;lt;</code></td></tr><tr><td>&gt;</td><td><code>&amp;gt;</code></td></tr><tr><td>&quot;</td><td><code>&amp;quot</code></td></tr><tr><td>&#39;</td><td><code>&amp;apos;</code></td></tr></tbody></table><h2 id="_9-拓展" tabindex="-1"><a class="header-anchor" href="#_9-拓展"><span>9. 拓展</span></a></h2><h3 id="缓存机制" tabindex="-1"><a class="header-anchor" href="#缓存机制"><span>缓存机制</span></a></h3><h4 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介：</span></a></h4><p>MyBatis 拥有二级缓存机制</p><ol><li><p>一级缓存（事务级别缓存）<mark>默认</mark>开启; 同一个事务期间，前面查询的数据后面要查询相同的数据，从一级缓存中取</p></li><li><p>二级缓存需要<mark>手动</mark>配置开启：所有事务共享</p></li></ol><h4 id="一级缓存失效的情况" tabindex="-1"><a class="header-anchor" href="#一级缓存失效的情况"><span>一级缓存失效的情况：</span></a></h4><ol><li>查询的东西不一致</li><li>两次查询间进行了一次增删改（因为可能会引起数据库变化）</li></ol><h4 id="作用" tabindex="-1"><a class="header-anchor" href="#作用"><span>作用：</span></a></h4><p>缓存中有就不用查数据库，加速查询</p><h4 id="l1-ln" tabindex="-1"><a class="header-anchor" href="#l1-ln"><span>L1~LN：</span></a></h4><ul><li><p>N级缓存</p></li><li><p>数字越小离我越近，查的越快。存储越小，造价越高</p></li><li><p>数字越大离我越远，查的越慢。存储越大，造价越低</p></li></ul><h4 id="cpu缓存机制" tabindex="-1"><a class="header-anchor" href="#cpu缓存机制"><span>CPU缓存机制</span></a></h4><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/image-20241017221604060.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="mybatis缓存机制" tabindex="-1"><a class="header-anchor" href="#mybatis缓存机制"><span>Mybatis缓存机制</span></a></h4><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/image-20241017223624092.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>与其他不同mybatis<mark>优先</mark>从<mark>二级</mark>缓存拿数据</strong></p><p><mark>回源</mark>：缓存中没有回到数据库中查原始数据，放到缓存</p><p><mark>缓存命中率</mark>：二级缓存的东西重复使用的多，命中率高</p><h4 id="二级缓存的使用" tabindex="-1"><a class="header-anchor" href="#二级缓存的使用"><span>二级缓存的使用</span></a></h4><ol><li><p>xml中直接写<code>&lt;/cache&gt;</code>，将所有查询出来的对象转成文件保存在二级缓存中</p></li><li><p>因此实体对象应实现序列化接口 <mark>implements Serializable</mark></p></li><li><p>被redis代替，几乎不用</p></li></ol><h3 id="插件机制" tabindex="-1"><a class="header-anchor" href="#插件机制"><span>插件机制</span></a></h3><h4 id="简介-1" tabindex="-1"><a class="header-anchor" href="#简介-1"><span>简介</span></a></h4><p>MyBatis 底层使用拦截器（Interceptor）机制提供插件功能，方便用户在SQL执行前后进行拦截增强</p><p>拦截器可以拦截 <strong>四大对象</strong> 的执行</p><ul><li>ParameterHandler：处理SQL的参数对象</li><li>ResultSetHandler：处理SQL的返回结果集</li><li>StatementHandler：数据库的处理对象，用于执行SQL语句</li><li>Executor：MyBatis的执行器，用于执行增删改查操作</li></ul><p>**注意：**插件自己比较难写，用别人提供的</p><h4 id="pagehelper分页插件" tabindex="-1"><a class="header-anchor" href="#pagehelper分页插件"><span>PageHelper分页插件</span></a></h4><p>拦截后统计表的总数 量，自动拼接limit，底层利用ThreadLocal</p><blockquote><p>第一个查询从 ThreadLocal 中获取到共享数据，执行分页</p><p>第一个执行完会把 ThreadLocal 分页数据删除</p><p>以后的查询，从 ThreadLocal 中拿不到分页数据，就不会分页</p></blockquote><h5 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用：</span></a></h5><ol><li><p>引入依赖</p></li><li><p>在MyBatisConfig中设置一个bean</p><blockquote><p>创建分页插件对象</p><p>设置一系列参数，使得前端访问合理。如访问1万页，返回最后一页</p></blockquote><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">@Configuration</span>
<span class="line">public class MyBatisConfig {</span>
<span class="line">	@Bean</span>
<span class="line">	PageInterceptor pageInterceptor(){</span>
<span class="line">		//1、创建 分页插件 对象</span>
<span class="line">		PageInterceptor interceptor =new PageInterceptor();</span>
<span class="line">		//2、设置 参数</span>
<span class="line">		//......</span>
<span class="line">		Properties properties =new Properties();</span>
<span class="line">		properties.setProperty(&quot;reasonable&quot;, &quot;true&quot;);</span>
<span class="line">		interceptor.setProperties(properties);</span>
<span class="line">		return interceptor;</span>
<span class="line">	}</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div></li><li><p>**<mark>紧跟</mark>**PageHelper.startPage后的方法会执行 SQL 分页查询</p></li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">PageHelper.startPage(3, 5);</span>
<span class="line">List&lt;Emp&gt; all =empService.getAll();</span>
<span class="line">PageInfo&lt;Emp&gt; info = new PageInfo&lt;&gt;(all);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>将查询到的对象放入PageInfo中可以获取总页码，总记录数，当前页码等更多数据</p></blockquote><h3 id="逆向生成" tabindex="-1"><a class="header-anchor" href="#逆向生成"><span>逆向生成</span></a></h3><h4 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h4><p>mybatis官方提供了mapper自动生成工具mybatis-generator-core来针对单表，生成PO类，以及Mapper接口和mapper.xml映射文件。针对单表，可以不需要再手动编写xml配置文件和mapper接口文件了，非常方便。美中不足的是它不支持生成关联查询。一般做关联查询，就自己单独写SQL就好了。</p><p>配置依赖和插件</p><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">&lt;!-- 依赖MyBatis核心包 --&gt;</span>
<span class="line">&lt;dependencies&gt;</span>
<span class="line">    &lt;dependency&gt;</span>
<span class="line">        &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</span>
<span class="line">        &lt;artifactId&gt;mybatis&lt;/artifactId&gt;</span>
<span class="line">        &lt;version&gt;3.5.7&lt;/version&gt;</span>
<span class="line">    &lt;/dependency&gt;</span>
<span class="line">&lt;/dependencies&gt;</span>
<span class="line"></span>
<span class="line">&lt;!-- 控制Maven在构建过程中相关配置 --&gt;</span>
<span class="line">&lt;build&gt;</span>
<span class="line">    &lt;!-- 构建过程中用到的插件 --&gt;</span>
<span class="line">    &lt;plugins&gt;</span>
<span class="line">    &lt;!-- 具体插件，逆向工程的操作是以构建过程中插件形式出现的 --&gt;</span>
<span class="line">        &lt;plugin&gt;</span>
<span class="line">            &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span>
<span class="line">            &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</span>
<span class="line">            &lt;version&gt;1.3.0&lt;/version&gt;</span>
<span class="line">            &lt;configuration&gt;</span>
<span class="line">                    &lt;!-- 输出日志 --&gt;</span>
<span class="line">                    &lt;verbose&gt;true&lt;/verbose&gt;</span>
<span class="line">                    &lt;overwrite&gt;true&lt;/overwrite&gt;</span>
<span class="line">            &lt;/configuration&gt;</span>
<span class="line">            &lt;!-- 插件的依赖 --&gt;</span>
<span class="line">            &lt;dependencies&gt;</span>
<span class="line">                &lt;!-- 逆向工程的核心依赖 --&gt;</span>
<span class="line">                &lt;dependency&gt;</span>
<span class="line">                    &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</span>
<span class="line">                    &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt;</span>
<span class="line">                    &lt;version&gt;1.3.2&lt;/version&gt;</span>
<span class="line">                &lt;/dependency&gt;</span>
<span class="line">                &lt;!-- 数据库连接池 --&gt;</span>
<span class="line">                &lt;dependency&gt;</span>
<span class="line">                    &lt;groupId&gt;com.mchange&lt;/groupId&gt;</span>
<span class="line">                    &lt;artifactId&gt;c3p0&lt;/artifactId&gt;</span>
<span class="line">                    &lt;version&gt;0.9.2&lt;/version&gt;</span>
<span class="line">                &lt;/dependency&gt;</span>
<span class="line">                &lt;!-- MySQL驱动 --&gt;</span>
<span class="line">                &lt;dependency&gt;</span>
<span class="line">                    &lt;groupId&gt;mysql&lt;/groupId&gt;</span>
<span class="line">                    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span>
<span class="line">                    &lt;version&gt;5.1.8&lt;/version&gt;</span>
<span class="line">                &lt;/dependency&gt;</span>
<span class="line">            &lt;/dependencies&gt;</span>
<span class="line">        &lt;/plugin&gt;</span>
<span class="line">    &lt;/plugins&gt;</span>
<span class="line">&lt;/build&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>创建逆向工程的配置文件</p><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="line">&lt;!DOCTYPE generatorConfiguration</span>
<span class="line">        PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span>
<span class="line">        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</span>
<span class="line"></span>
<span class="line">&lt;generatorConfiguration&gt;</span>
<span class="line">    &lt;!--</span>
<span class="line">    targetRuntime: 执行生成的逆向工程的版本</span>
<span class="line">    MyBatis3Simple: 生成基本的CRUD（清新简洁版）</span>
<span class="line">    MyBatis3: 生成带条件的CRUD（奢华尊享版）</span>
<span class="line">    --&gt;</span>
<span class="line">    &lt;context id=&quot;DB2Tables&quot; targetRuntime=&quot;MyBatis3Simple&quot;&gt;</span>
<span class="line">        &lt;!-- 数据库的连接信息 --&gt;</span>
<span class="line">        &lt;jdbcConnection driverClass=&quot;com.mysql.jdbc.Driver&quot;</span>
<span class="line">                        connectionURL=&quot;jdbc:mysql://localhost:3306/mybatis&quot;</span>
<span class="line">                        userId=&quot;root&quot;</span>
<span class="line">                        password=&quot;123456&quot;&gt;</span>
<span class="line">        &lt;/jdbcConnection&gt;</span>
<span class="line">        &lt;!-- javaBean的生成策略--&gt;</span>
<span class="line">        &lt;javaModelGenerator targetPackage=&quot;com.atguigu.mybatis.bean&quot; targetProject=&quot;.\\src\\main\\java&quot;&gt;</span>
<span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</span>
<span class="line">            &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot; /&gt;</span>
<span class="line">        &lt;/javaModelGenerator&gt;</span>
<span class="line">        &lt;!-- SQL映射文件的生成策略 --&gt;</span>
<span class="line">        &lt;sqlMapGenerator targetPackage=&quot;com.atguigu.mybatis.mapper&quot; targetProject=&quot;.\\src\\main\\resources&quot;&gt;</span>
<span class="line">        	&lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</span>
<span class="line">        &lt;/sqlMapGenerator&gt;</span>
<span class="line">        &lt;!-- Mapper接口的生成策略 --&gt;</span>
<span class="line">        &lt;javaClientGenerator type=&quot;XMLMAPPER&quot; targetPackage=&quot;com.atguigu.mybatis.mapper&quot; targetProject=&quot;.\\src\\main\\java&quot;&gt;</span>
<span class="line">        	&lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt;</span>
<span class="line">        &lt;/javaClientGenerator&gt;</span>
<span class="line">        &lt;!-- 逆向分析的表 --&gt;</span>
<span class="line">        &lt;!-- tableName设置为*号，可以对应所有表，此时不写domainObjectName --&gt;</span>
<span class="line">        &lt;!-- domainObjectName属性指定生成出来的实体类的类名 --&gt;</span>
<span class="line">        &lt;table tableName=&quot;t_emp&quot; domainObjectName=&quot;Emp&quot;/&gt;</span>
<span class="line">        &lt;table tableName=&quot;t_dept&quot; domainObjectName=&quot;Dept&quot;/&gt;</span>
<span class="line">    &lt;/context&gt;</span>
<span class="line">&lt;/generatorConfiguration&gt;</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>执行MBG插件的generate目标</p><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/image-20241019134401538.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,120)]))}const r=t(p,[["render",i],["__file","Mybatis.html.vue"]]),d=JSON.parse('{"path":"/codenotes/back/frame/Mybatis.html","title":"Mybatis","lang":"zh-CN","frontmatter":{"title":"Mybatis","icon":"/icon/mybatis.svg","author":[{"name":"雷神"},{"name":"Ahzy"}],"category":["计算机"],"tag":["框架"],"sticky":false,"star":false,"article":false,"timeline":false,"isOriginal":true,"date":"2024-11-07T00:00:00.000Z","headerDepth":2,"description":"弱小和无知不是生存的障碍, 傲慢才是 官网：https://mybatis.org/ 1. 简介 MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。 MyBatis 不像 Hibernete 等这些全自动框架，它把关键的SQL部分交给程序员自己编写，而不是自动生成 2. 入门案例 配置 application.pope...","head":[["meta",{"property":"og:url","content":"https://hwchen.top/codenotes/back/frame/Mybatis.html"}],["meta",{"property":"og:site_name","content":"Ahzy"}],["meta",{"property":"og:title","content":"Mybatis"}],["meta",{"property":"og:description","content":"弱小和无知不是生存的障碍, 傲慢才是 官网：https://mybatis.org/ 1. 简介 MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。 MyBatis 不像 Hibernete 等这些全自动框架，它把关键的SQL部分交给程序员自己编写，而不是自动生成 2. 入门案例 配置 application.pope..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://gitee.com/private_crh/notes/raw/master//typora/image-20241013235338549.png =800x280"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"雷神"}],["meta",{"property":"article:tag","content":"框架"}],["meta",{"property":"article:published_time","content":"2024-11-07T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Mybatis\\",\\"description\\":\\"弱小和无知不是生存的障碍, 傲慢才是 官网：https://mybatis.org/ 1. 简介 MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。 MyBatis 不像 Hibernete 等这些全自动框架，它把关键的SQL部分交给程序员自己编写，而不是自动生成 2. 入门案例 配置 application.pope...\\"}"]]},"headers":[{"level":2,"title":"1. 简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"2. 入门案例","slug":"_2-入门案例","link":"#_2-入门案例","children":[{"level":3,"title":"配置","slug":"配置","link":"#配置","children":[]},{"level":3,"title":"对比","slug":"对比","link":"#对比","children":[]},{"level":3,"title":"细节","slug":"细节","link":"#细节","children":[]}]},{"level":2,"title":"3. 获取自增id","slug":"_3-获取自增id","link":"#_3-获取自增id","children":[]},{"level":2,"title":"4. 参数处理","slug":"_4-参数处理","link":"#_4-参数处理","children":[{"level":3,"title":"参数传递","slug":"参数传递","link":"#参数传递","children":[{"level":4,"title":"区别","slug":"区别","link":"#区别","children":[]},{"level":4,"title":"使用时机","slug":"使用时机","link":"#使用时机","children":[]}]},{"level":3,"title":"单个参数直接取值","slug":"单个参数直接取值","link":"#单个参数直接取值","children":[]},{"level":3,"title":"多个参数标注参数名称","slug":"多个参数标注参数名称","link":"#多个参数标注参数名称","children":[]}]},{"level":2,"title":"5. 结果封装","slug":"_5-结果封装","link":"#_5-结果封装","children":[{"level":3,"title":"返回普通类型","slug":"返回普通类型","link":"#返回普通类型","children":[]},{"level":3,"title":"返回集合类型","slug":"返回集合类型","link":"#返回集合类型","children":[]},{"level":3,"title":"自定义结果集","slug":"自定义结果集","link":"#自定义结果集","children":[{"level":4,"title":"入门案例","slug":"入门案例","link":"#入门案例","children":[]},{"level":4,"title":"一对一的关联封装","slug":"一对一的关联封装","link":"#一对一的关联封装","children":[]},{"level":4,"title":"一对多关系的关联封装","slug":"一对多关系的关联封装","link":"#一对多关系的关联封装","children":[]},{"level":4,"title":"分步查询","slug":"分步查询","link":"#分步查询","children":[{"level":5,"title":"超级分步","slug":"超级分步","link":"#超级分步","children":[]},{"level":5,"title":"延迟加载","slug":"延迟加载","link":"#延迟加载","children":[]}]}]}]},{"level":2,"title":"6. 动态SQL","slug":"_6-动态sql","link":"#_6-动态sql","children":[{"level":3,"title":"IF","slug":"if","link":"#if","children":[]},{"level":3,"title":"where","slug":"where","link":"#where","children":[]},{"level":3,"title":"set","slug":"set","link":"#set","children":[]},{"level":3,"title":"trim","slug":"trim","link":"#trim","children":[]},{"level":3,"title":"choose、when、otherwise","slug":"choose、when、otherwise","link":"#choose、when、otherwise","children":[]},{"level":3,"title":"foreach","slug":"foreach","link":"#foreach","children":[]},{"level":3,"title":"sql片段","slug":"sql片段","link":"#sql片段","children":[]}]},{"level":2,"title":"8. 特殊字符","slug":"_8-特殊字符","link":"#_8-特殊字符","children":[]},{"level":2,"title":"9. 拓展","slug":"_9-拓展","link":"#_9-拓展","children":[{"level":3,"title":"缓存机制","slug":"缓存机制","link":"#缓存机制","children":[{"level":4,"title":"简介：","slug":"简介","link":"#简介","children":[]},{"level":4,"title":"一级缓存失效的情况：","slug":"一级缓存失效的情况","link":"#一级缓存失效的情况","children":[]},{"level":4,"title":"作用：","slug":"作用","link":"#作用","children":[]},{"level":4,"title":"L1~LN：","slug":"l1-ln","link":"#l1-ln","children":[]},{"level":4,"title":"CPU缓存机制","slug":"cpu缓存机制","link":"#cpu缓存机制","children":[]},{"level":4,"title":"Mybatis缓存机制","slug":"mybatis缓存机制","link":"#mybatis缓存机制","children":[]},{"level":4,"title":"二级缓存的使用","slug":"二级缓存的使用","link":"#二级缓存的使用","children":[]}]},{"level":3,"title":"插件机制","slug":"插件机制","link":"#插件机制","children":[{"level":4,"title":"简介","slug":"简介-1","link":"#简介-1","children":[]},{"level":4,"title":"PageHelper分页插件","slug":"pagehelper分页插件","link":"#pagehelper分页插件","children":[{"level":5,"title":"使用：","slug":"使用","link":"#使用","children":[]}]}]},{"level":3,"title":"逆向生成","slug":"逆向生成","link":"#逆向生成","children":[{"level":4,"title":"概念","slug":"概念","link":"#概念","children":[]}]}]}],"git":{},"readingTime":{"minutes":12.15,"words":3646},"filePathRelative":"codenotes/back/frame/Mybatis.md","localizedDate":"2024年11月7日","excerpt":"<div style=\\"text-align:left\\">\\n<p>&nbsp;<img src=\\"https://gitee.com/private_crh/notes/raw/master//typora/image-20241013235338549.png\\" alt=\\"\\" width=\\"800\\" height=\\"280\\" loading=\\"lazy\\"></p>\\n</div>\\n<div style=\\"text-align:right\\">\\n<p><strong>弱小和无知不是生存的障碍, 傲慢才是</strong></p>\\n</div>\\n<p>官网：https://mybatis.org/</p>","autoDesc":true}');export{r as comp,d as data};
