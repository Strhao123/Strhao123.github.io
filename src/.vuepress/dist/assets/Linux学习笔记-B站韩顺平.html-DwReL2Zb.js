import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as l,o as i}from"./app-eWV4nnR8.js";const e={};function d(c,s){return i(),a("div",null,s[0]||(s[0]=[l(`<h2 id="第一章-内容介绍" tabindex="-1"><a class="header-anchor" href="#第一章-内容介绍"><span>第一章：内容介绍</span></a></h2><h3 id="_1-1-本套-linux-课程内容" tabindex="-1"><a class="header-anchor" href="#_1-1-本套-linux-课程内容"><span>1.1.本套 Linux 课程内容</span></a></h3><p><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071140193.png" alt="" loading="lazy"><br><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071143371.png" alt="" loading="lazy"></p><h3 id="_1-2-linux-使用在那些地方" tabindex="-1"><a class="header-anchor" href="#_1-2-linux-使用在那些地方"><span>1.2.Linux 使用在那些地方</span></a></h3><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071143166.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">linux运营工程师主要做：</span>
<span class="line">	服务器规划</span>
<span class="line">	调试优化</span>
<span class="line">	对系统进行日常监控</span>
<span class="line">	故障处理</span>
<span class="line">	对数据的备份和处理</span>
<span class="line">	日志的分析</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-linux-的应用领域" tabindex="-1"><a class="header-anchor" href="#_1-3-linux-的应用领域"><span>1.3.Linux 的应用领域</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1.个人桌面领域的应用</span>
<span class="line"></span>
<span class="line">2.服务器领域(Linux最主要的领域)</span>
<span class="line">linux 在服务器领域的应用是最强的。</span>
<span class="line">linux 免费、稳定、高效等特点在这里得到了很好的体现，尤其在一些高端领域尤为广泛（c/c++/php/java/python/go）</span>
<span class="line"></span>
<span class="line">3.嵌入式领域</span>
<span class="line">linux 运行稳定、对网络的良好支持性、低成本，且可以根据需要进行软件裁剪，内核最小可以达到几百 KB 等特点， 使其近些年来在嵌入式领域的应用得到非常大的提高</span>
<span class="line">主要应用：机顶盒、数字电视、网络电话、程控交换机、手机、PDA、智能家居、智能硬件等都是其应用领域。以后在物联网中应用会更加广泛。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第二章-linux-入门" tabindex="-1"><a class="header-anchor" href="#第二章-linux-入门"><span>第二章：Linux 入门</span></a></h2><h3 id="_2-1-linux-介绍" tabindex="-1"><a class="header-anchor" href="#_2-1-linux-介绍"><span>2.1.Linux 介绍</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">linux 是一个开源、免费的操作系统，其稳定性、安全性、处理多并发已经得到业界的认可，</span>
<span class="line">目前很多企业级的项目(c/c++/php/python/java/go)都会部署到 Linux/unix 系统上。</span>
<span class="line"></span>
<span class="line">常见的操作系统(windows、IOS、Android、MacOS, Linux, Unix)</span>
<span class="line"></span>
<span class="line">Linux之父：Linus Torvalds</span>
<span class="line"></span>
<span class="line">Linux主要的发行版:</span>
<span class="line">	Ubuntu(乌班图)、RedHat(红帽)、CentOS...</span>
<span class="line">	Linux只是一个内核，在此基础上有不同的人对其进行包装(开发了很多软件包/工具，做成了发行版)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_2-2-linux-和-unix-的关系" tabindex="-1"><a class="header-anchor" href="#_2-2-linux-和-unix-的关系"><span>2.2.Linux 和 Unix 的关系</span></a></h3><h4 id="_2-2-1-unix-是怎么来的" tabindex="-1"><a class="header-anchor" href="#_2-2-1-unix-是怎么来的"><span>2.2.1.unix 是怎么来的</span></a></h4><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071143658.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-2-2-linux-是怎么来的" tabindex="-1"><a class="header-anchor" href="#_2-2-2-linux-是怎么来的"><span>2.2.2.Linux 是怎么来的</span></a></h4><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071143342.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_2-2-3-linux-和-unix-关系图" tabindex="-1"><a class="header-anchor" href="#_2-2-3-linux-和-unix-关系图"><span>2.2.3.Linux 和 Unix 关系图</span></a></h4><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071143607.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="第三章-vm-和-linux-的安装" tabindex="-1"><a class="header-anchor" href="#第三章-vm-和-linux-的安装"><span>第三章：VM 和 Linux 的安装</span></a></h2><h3 id="_3-1-安装-vm-和-centos" tabindex="-1"><a class="header-anchor" href="#_3-1-安装-vm-和-centos"><span>3.1.安装 vm 和 Centos</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">学习 Linux 需要一个环境，我们需要创建一个虚拟机，然后在虚拟机上安装一个 Centos 系统来学习</span>
<span class="line">1.先安装 virtual machine 15.5 (vmware15.5)</span>
<span class="line">2.再安装 Linux (CentOS 7.6/centOS8.1) </span>
<span class="line">3.原理:</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071143942.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Linux磁盘手动分区：</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071143780.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">设置密码不要写那么简单，可以百度搜索生成随机密码。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-2-网络连接的三种模式" tabindex="-1"><a class="header-anchor" href="#_3-2-网络连接的三种模式"><span>3.2.网络连接的三种模式</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">给虚拟系统连接网络。</span>
<span class="line">张三，李四，王五在同一网段内，假设ip地址都是192.168.0.x</span>
<span class="line"></span>
<span class="line">桥接模式：</span>
<span class="line">	虚拟系统直接与外部系统通信，虚拟系统也是192.168.0.x的ip地址</span>
<span class="line">	这样就占用了该网段的主机号，类似于同一局域网内有多了一台主机</span>
<span class="line">	但是x最多有255种，超过了数量就会造成ip冲突</span>
<span class="line">	</span>
<span class="line">NAT模式：</span>
<span class="line">	nat地址转换</span>
<span class="line">	虚拟系统通过本主机与外部系统通信，不造成ip冲突</span>
<span class="line">	</span>
<span class="line">主机模式：独立的系统，不和外部发生联系</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071143430.png" alt="" loading="lazy"><br><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071143399.png" alt="" loading="lazy"></p><h3 id="_3-3-虚拟机的克隆" tabindex="-1"><a class="header-anchor" href="#_3-3-虚拟机的克隆"><span>3.3.虚拟机的克隆</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">如果已经安装了一台 linux 操作系统，你还想再更多的，没有必要再重新安装，只需要克隆就可以</span>
<span class="line"></span>
<span class="line">方式1：直接拷贝一份安装好的虚拟机文件</span>
<span class="line">	在我的电脑中找到要克隆的虚拟机的文件，赋值后粘贴到另一个位置，在 vmware 中打开就好了。</span>
<span class="line">方式2：使用 vmware 的克隆操作（注意：克隆时，需要先关闭 linux 系统 先关机）</span>
<span class="line">	在 vmware 中鼠标右击要克隆的虚拟机----&gt;管理----&gt;克隆----&gt;克隆方法</span>
<span class="line">		克隆方法：</span>
<span class="line">			链接克隆：对原系统的引用(本质上没有克隆，就一个系统)</span>
<span class="line">			完整克隆：一般选这个，克隆出来的系统与原系统完全一样</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-虚拟机的快照" tabindex="-1"><a class="header-anchor" href="#_3-4-虚拟机的快照"><span>3.4.虚拟机的快照</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">如果你在使用虚拟机系统的时候(比如 linux)，你想回到原先的某一个状态，</span>
<span class="line">也就是说你担心可能有些误操作造成系统异常，需要回到原先某个正常运行的状态，</span>
<span class="line">vmware 也提供了这样的功能，就叫快照管理。</span>
<span class="line"></span>
<span class="line">方法：</span>
<span class="line">	对左栏虚拟机鼠标右击---&gt;快照---&gt;拍摄快照</span>
<span class="line">	查看快照管理器，点击要回到的快照图标，转到。</span>
<span class="line">	</span>
<span class="line">注意：每次拍摄一个快照都是对当前状态进行保存，会占用硬盘空间，做有意义的快照。</span>
<span class="line"></span>
<span class="line">应用实例：</span>
<span class="line">1.最初状态拍摄一个快照A</span>
<span class="line">2.创建一个文件夹，拍摄一个快照B</span>
<span class="line">3.再创建一个文件夹，拍摄一个快照C</span>
<span class="line">4.从C回到A</span>
<span class="line">5.从A回到B</span>
<span class="line">6.再创建一个文件夹，拍摄一个快照D</span>
<span class="line">7.回到A</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071143976.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-5-虚拟机的迁移和删除" tabindex="-1"><a class="header-anchor" href="#_3-5-虚拟机的迁移和删除"><span>3.5.虚拟机的迁移和删除</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">虚拟系统安装好之后，虚拟系统的本质就是文件(放在文件夹的)</span>
<span class="line"></span>
<span class="line">虚拟系统的迁移：</span>
<span class="line">	把安装好的虚拟系统这个文件夹整体拷贝或者剪切到另外位置使用。</span>
<span class="line"></span>
<span class="line">虚拟机系统的删除：</span>
<span class="line">	在vmware中，鼠标右击要移除的虚拟系统----&gt;移除</span>
<span class="line">	但是，该操作并没有把虚拟系统的文件夹删除，还要再去找到文件夹将其删除。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-6-安装vmtools" tabindex="-1"><a class="header-anchor" href="#_3-6-安装vmtools"><span>3.6.<a href="https://so.csdn.net/so/search?q=%E5%AE%89%E8%A3%85vmtools&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">安装vmtools</a></span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1. vmtools 安装后，可以让我们在 windows 下更好的管理 vm 虚拟机</span>
<span class="line">2. 可以设置 windows 和 centos 的共享文件夹</span>
<span class="line">(主机和虚拟系统都可以操作共享文件夹，更加方便)</span>
<span class="line"></span>
<span class="line">如何安装：</span>
<span class="line">	仔细看视频吧</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-7-设置共享文件夹" tabindex="-1"><a class="header-anchor" href="#_3-7-设置共享文件夹"><span>3.7.设置<a href="https://so.csdn.net/so/search?q=%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">共享文件夹</a></span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">仔细看视频吧</span>
<span class="line"></span>
<span class="line">如何设置共享文件夹？</span>
<span class="line">	在主机上找到一个位置创建一个文件夹作为共享文件夹</span>
<span class="line">	然后在vm上操作：</span>
<span class="line">		鼠标右击虚拟系统---&gt;设置---&gt;选项---&gt;共享文件夹---&gt;添加(将上述文件夹路径填上就好了)</span>
<span class="line">		</span>
<span class="line">如何在虚拟系统上找到共享文件夹？</span>
<span class="line">	点击主文件夹---&gt;其他位置---&gt;计算机----&gt;mnt----&gt;hgfs---&gt;里面就有共享文件夹</span>
<span class="line"></span>
<span class="line">注意：在实际开发中，文件的上传下载是需要使用远程方式完成的</span>
<span class="line">      因为是主机A与主机B上的虚拟系统通信(我们教学，所以虚拟系统在自己的主机上)</span>
<span class="line">      远程方式后面学。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="第四章-目录结构" tabindex="-1"><a class="header-anchor" href="#第四章-目录结构"><span>第四章：目录结构</span></a></h2><h3 id="_4-1-目录结构基本介绍" tabindex="-1"><a class="header-anchor" href="#_4-1-目录结构基本介绍"><span>4.1.目录结构基本介绍</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">linux 的文件系统是采用级层式的树状目录结构，</span>
<span class="line">	在此结构中的最上层是根目录“/”，然后在此目录下再创建其他的目录。</span>
<span class="line"></span>
<span class="line">记住一句经典的话：在 Linux 世界里，一切皆文件(!!)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071144246.png" alt="" loading="lazy"><br><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071144010.png" alt="" loading="lazy"></p><h3 id="_4-2-具体的目录结构-不要背-了解就好" tabindex="-1"><a class="header-anchor" href="#_4-2-具体的目录结构-不要背-了解就好"><span>4.2.具体的目录结构(不要背，了解就好)</span></a></h3><table><thead><tr><th>目录</th><th>注解</th><th>介绍</th></tr></thead><tbody><tr><td>/bin</td><td>常用</td><td>是 Binary 的缩写, 这个目录存放着最经常使用的命令；子目录：/usr/bin 和 /usr/local/bin</td></tr><tr><td>/sbin</td><td></td><td>s 就是 Super User 的意思，这里存放的是系统管理员使用的系统管理程序；子目录：/usr/sbin 和 /usr/local/sbin</td></tr><tr><td>/home</td><td>常用</td><td>存放普通用户的主目录，在 Linux 中每个用户都有一个自己的目录，一般该目录名是以用户的账号命名</td></tr><tr><td>/root</td><td>常用</td><td>该目录为系统管理员，也称作超级权限者的用户主目录</td></tr><tr><td>/lib</td><td></td><td>系统开机所需要最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。几乎所有的应用程序都需要用到这些共享库</td></tr><tr><td>/lost+found</td><td></td><td>这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件(该目录隐藏起来了，使用命令可以看到)</td></tr><tr><td>/etc</td><td>常用</td><td>所有的系统管理所需要的配置文件和子目录, 比如安装 mysql 数据库 my.conf</td></tr><tr><td>/user</td><td>常用</td><td>这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似与 windows 下的 program files 目录</td></tr><tr><td>/boot</td><td>常用</td><td>存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件</td></tr><tr><td>/proc</td><td>不能动这个文件，可能造成系统崩溃</td><td>这个目录是一个虚拟的目录，它是系统内存的映射，访问这个目录来获取系统信息</td></tr><tr><td>/srv</td><td>不能动</td><td>service 缩写，该目录存放一些服务启动之后需要提取的数据</td></tr><tr><td>/sys</td><td>不能动</td><td>这是 linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs</td></tr><tr><td>/tmp</td><td></td><td>这个目录是用来存放一些临时文件的</td></tr><tr><td>/dev</td><td></td><td>类似于 windows 的设备管理器，把所有的硬件用文件的形式存储</td></tr><tr><td>/media</td><td>常用</td><td>linux 系统会自动识别一些设备，例如 U 盘、光驱等等，当识别后，linux 会把识别的设备挂载到这个目录下</td></tr><tr><td>/mnt</td><td>常用</td><td>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂载在/mnt/上，然后进入该目录就可以查看里的内容了。 (比如共享文件)</td></tr><tr><td>/opt</td><td></td><td>这是给主机额外安装软件所存放的目录(想要安装某个软件，把它的安装软件放在这个目录下)。如想要在虚拟系统上安装 ORACLE 数据库就可以先把其安装文件放在该目录下。默认为空</td></tr><tr><td>/user/local</td><td>常用</td><td>这是另一个给主机额外安装软件所安装的目录(软件安装后的目标目录)。一般是通过编译源码方式安装的程序</td></tr><tr><td>/var</td><td>常用</td><td>这个目录中存放着在不断扩充着的东西，习惯将经常被修改的目录放在这个目录下。包括各种日志文件</td></tr><tr><td>/selinux</td><td>security-enhanced linux</td><td>SELinux 是一种安全子系统,它能控制程序只能访问特定文件, 有三种工作模式，可以自行设置. 类似于360，保证系统安全。这个目录看不到，因为没有被启用</td></tr></tbody></table><h2 id="第五章-远程登录到-linux-服务器" tabindex="-1"><a class="header-anchor" href="#第五章-远程登录到-linux-服务器"><span>第五章：<a href="https://so.csdn.net/so/search?q=%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">远程登录</a>到 Linux 服务器</span></a></h2><h3 id="_5-1-为什么需要远程登录-linux" tabindex="-1"><a class="header-anchor" href="#_5-1-为什么需要远程登录-linux"><span>5.1.为什么需要远程登录 Linux</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">说明: 公司开发时候，具体的应用场景是这样的：</span>
<span class="line">1. linux 服务器是开发小组共享</span>
<span class="line">2. 正式上线的项目是运行在公网</span>
<span class="line">3. 因此程序员需要远程登录到 Linux 进行项目管理或者开发</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071144763.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_5-2-下载xshell6和xftp6" tabindex="-1"><a class="header-anchor" href="#_5-2-下载xshell6和xftp6"><span>5.2.下载Xshell6和Xftp6</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">远程登录工具Xshell：</span>
<span class="line">	1.Xshell 是目前最好的远程登录到 Linux 操作的软件，流畅的速度并且完美解决了中文乱码的问题，是目前程序员首选的软件。</span>
<span class="line">	2.Xshell 是一个强大的安全终端模拟软件，它支持 SSH1, SSH2, 以及 Microsoft Windows 平台的 TELNET 协议。</span>
<span class="line">	3.Xshell 可以在 Windows 界面下用来访问远端不同系统下的服务器，从而比较好的达到远程控制终端的目的。</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">注意：</span>
<span class="line">1.使用Xshell之前，需要知道Linux的ip地址</span>
<span class="line">	如何知道ip地址？</span>
<span class="line">		在Linux中，鼠标右击桌面打开终端，输入ifconfig指令，ens33中，就可以知道ip地址了。</span>
<span class="line">2.要保证本机可以ping通虚拟主机</span>
<span class="line">	在本机DOS命令窗口中输入命令：ping 虚拟主机ip地址</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">登录Xshell：</span>
<span class="line">	打开Xshell---&gt;添加会话---&gt;主机(虚拟主机ip地址)---&gt;确定</span>
<span class="line">	双击密钥---&gt;选择接受并保存主机密钥(就不用重复接受了)</span>
<span class="line">	远程登陆成功</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">远程上传下载文件Xftp：</span>
<span class="line">	是一个基于 windows 平台的功能强大的 SFTP、FTP 文件传输软件。</span>
<span class="line">	使用了 Xftp 以后，windows 用户能安全地在 UNIX/Linux 和 Windows PC 之间传输文件</span>
<span class="line"></span>
<span class="line">	操作同上</span>
<span class="line">	注意：xftp打开时乱码：属性---&gt;选项---&gt;UTF-8编码</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="第六章-vi-和-vim-编辑器" tabindex="-1"><a class="header-anchor" href="#第六章-vi-和-vim-编辑器"><span>第六章：Vi 和 Vim 编辑器</span></a></h2><h3 id="_6-1-vi-和-vim-的基本介绍" tabindex="-1"><a class="header-anchor" href="#_6-1-vi-和-vim-的基本介绍"><span>6.1. vi 和 vim 的基本介绍</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Linux 系统会内置 vi 文本编辑器</span>
<span class="line"></span>
<span class="line">Vim可以看作是Vi的增强版本，Vim 具有程序编辑的能力，可以主动的以字体颜色辨别语法的正确性，方便程序设计。</span>
<span class="line">代码补完、编译及错误跳转等方便编程的功能特别丰富。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-vi-和-vim-常用的三种模式" tabindex="-1"><a class="header-anchor" href="#_6-2-vi-和-vim-常用的三种模式"><span>6.2. vi 和 vim 常用的三种模式</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.正常模式：</span>
<span class="line">	以 vim 打开一个档案就直接进入一般模式了(这是默认的模式)。</span>
<span class="line">	在这个模式中，你可以使用『上下左右』按键来移动光标，</span>
<span class="line">	可以使用『删除字符』或『删除整行』来处理档案内容，</span>
<span class="line">	也可以使用『复制、粘贴』来处理你的文件数据。</span>
<span class="line"></span>
<span class="line">2.插入模式</span>
<span class="line">按下 i, I, o, O, a, A, r, R 等任何一个字母之后才会进入编辑模式, 一般来说按 i 即可.</span>
<span class="line">可以写东西了。</span>
<span class="line"></span>
<span class="line">3.命令行模式</span>
<span class="line">在这个模式当中，可以提供你相关指令，完成读取、存盘、替换、离开 vim，显示行号等动作</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_6-3-vi-和-vim-基本使用" tabindex="-1"><a class="header-anchor" href="#_6-3-vi-和-vim-基本使用"><span>6.3. vi 和 vim 基本使用</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">案例：使用 vim 开发一个 Hello.java 程序</span>
<span class="line"></span>
<span class="line">使用xshell登录编写(因为以后工作都是这样写的)：</span>
<span class="line">	首先输入：vi Hello.java 或者 vim Hello.java (使用vim编辑器编写java程序)</span>
<span class="line">	回车后进入正常模式</span>
<span class="line">	之后输入i等字母，进入插入模式(编辑模式)</span>
<span class="line">	然后可是写代码：</span>
<span class="line">		public class Hello{</span>
<span class="line">			public static void main(String[] args){</span>
<span class="line">				System.out.println(&quot;Hello World&quot;);</span>
<span class="line">			}</span>
<span class="line">		}</span>
<span class="line">	然后保存，怎么保存？</span>
<span class="line">		先 按 Esc 回到正常模式</span>
<span class="line">		然后输入冒号:  接着输入wq (代表写入并退出write quit)</span>
<span class="line">		回车</span>
<span class="line">	结束</span>
<span class="line">	</span>
<span class="line">	输入ls命令，就可以看到Hello.java文件</span>
<span class="line">	还想修该文件：再输入 vim Hello.java (按Tab键 代码补全) 就有回到了上面</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_6-4-各种模式的相互切换" tabindex="-1"><a class="header-anchor" href="#_6-4-各种模式的相互切换"><span>6.4. 各种模式的相互切换</span></a></h3><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071144752.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_6-5-vi-和-vim-快捷键" tabindex="-1"><a class="header-anchor" href="#_6-5-vi-和-vim-快捷键"><span>6.5. vi 和 vim 快捷键</span></a></h3><table><thead><tr><th>快捷键</th><th>模式</th><th>介绍</th></tr></thead><tbody><tr><td>yy</td><td>正常模式</td><td>复制当前行</td></tr><tr><td>p</td><td>正常模式</td><td>粘贴</td></tr><tr><td>5yy</td><td>正常模式</td><td>复制当前行向下的5行</td></tr><tr><td>dd</td><td>正常模式</td><td>删除当前行</td></tr><tr><td>5dd</td><td>正常模式</td><td>删除当前行向下的5行</td></tr></tbody></table><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">在文件中查找某个单词：</span>
<span class="line">	初始在正常模式，输入/，进入命令行模式，然后输入要查找的单词，回车查找</span>
<span class="line">	输入n查找到下一个</span>
<span class="line">	想查找另一个单词：输入/，重复上述即可</span>
<span class="line"></span>
<span class="line">正常模式---&gt;命令行模式</span>
<span class="line">给文件每行设置行号：</span>
<span class="line">	先冒号: </span>
<span class="line">	然后set nu  (set number)</span>
<span class="line">	回车</span>
<span class="line">取消行号：</span>
<span class="line">	先冒号:</span>
<span class="line">	然后set nonu</span>
<span class="line">	回车</span>
<span class="line"></span>
<span class="line">快捷键到该文档的最首行(正常模式)：gg</span>
<span class="line"></span>
<span class="line">快捷键到该文档的最末行(正常模式)：G</span>
<span class="line"></span>
<span class="line">撤销动作(比如删除某一行，发现删错了，然后恢复这一行)(正常模式)：u</span>
<span class="line"></span>
<span class="line">在某个文件中，想让光标移动到第20行(正常模式)：输入20，再输入 shift+g</span>
<span class="line"></span>
<span class="line">更多的快捷键：有整理的文档和下图</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071144020.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="第七章-开机、重启和用户登录注销" tabindex="-1"><a class="header-anchor" href="#第七章-开机、重启和用户登录注销"><span>第七章：开机、重启和用户登录注销</span></a></h2><h3 id="_7-1-关机和重启命令" tabindex="-1"><a class="header-anchor" href="#_7-1-关机和重启命令"><span>7.1.关机和重启命令</span></a></h3><table><thead><tr><th>命令</th><th>介绍</th></tr></thead><tbody><tr><td>shutdown -h now</td><td>立即关机(h—&gt;halt停止)</td></tr><tr><td>halt</td><td>立即关机，同上</td></tr><tr><td>shutdown</td><td>1分钟后关机</td></tr><tr><td>shutdown -h 1</td><td>同上，给每一个登录到Linux系统的用户发一条消息：1分钟后关机</td></tr><tr><td>shutdown -h 2</td><td>2分钟后关机</td></tr><tr><td>shutdonw -r now</td><td>现在重新启动(r—&gt;rboot重启)</td></tr><tr><td>reboot</td><td>现在重新启动，同上</td></tr><tr><td>sync</td><td>把内存的数据同步到磁盘</td></tr><tr><td>注意</td><td>不管是重启还是关机，首先要运行 sync 命令，把内存中的数据写到磁盘中；目前的 shutdown/reboot/halt 等命令均已经在关机前进行了sync，但还是手动执行一下sync保险</td></tr></tbody></table><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">既可以在Xshell，也可以在Linux执行上述指令</span>
<span class="line"></span>
<span class="line">进入Linux，打开终端，验证上述指令</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-2-用户登录和注销" tabindex="-1"><a class="header-anchor" href="#_7-2-用户登录和注销"><span>7.2.用户登录和注销</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">用户登录：	</span>
<span class="line">	登录时尽量少用 root 帐号登录，因为它是系统管理员，最大的权限，避免操作失误。</span>
<span class="line">	而且以后也用不到root，除非你是系统管理员。</span>
<span class="line">	可以利用普通用户登录，登录后再用”su - 用户名’命令来切换成系统管理员身份.</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">注销：</span>
<span class="line">	在提示符下输入 logout  即可注销用户</span>
<span class="line">	</span>
<span class="line">	注意：logout 注销指令在图形运行级别无效，在运行级别 3 下有效.</span>
<span class="line">	运行级别后面讲。</span>
<span class="line"></span>
<span class="line">验证：</span>
<span class="line">	使用普通用户登录</span>
<span class="line">	使用Xshell远程登陆Linux</span>
<span class="line">	输入命令：su - root   变为root用户</span>
<span class="line">	再输入：logout  注销用户回到普通用户</span>
<span class="line">	再输入：logout 退出系统</span>
<span class="line"></span>
<span class="line">	注意：退出系统后，如何要重新连接到Linux，双击左栏会话再重新输入即可。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="第八章-用户管理" tabindex="-1"><a class="header-anchor" href="#第八章-用户管理"><span>第八章：用户管理</span></a></h2><h3 id="_8-1-基本介绍" tabindex="-1"><a class="header-anchor" href="#_8-1-基本介绍"><span>8.1.基本介绍</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Linux 系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。</span>
<span class="line"></span>
<span class="line">一个Linux系统中只有一个root用户，但是由root用户可以创建多个其他用户，可以给这些用户分配权限，</span>
<span class="line">其中每个用户会对应一个目录，这个目录叫做家目录。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-2-添加用户" tabindex="-1"><a class="header-anchor" href="#_8-2-添加用户"><span>8.2.添加用户</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">语法：useradd 用户名</span>
<span class="line">比如：useradd milan 注册新用户milan</span>
<span class="line"></span>
<span class="line">注意：当创建用户成功后，会自动创建和用户同名的家目录，该用户的家目录默认在home目录下</span>
<span class="line"></span>
<span class="line">也可以给新用户指定家目录：useradd -d 指定目录 新用户名</span>
<span class="line">比如：useradd -d /home/test king 创建一个新用户king，其家目录test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-3-指定-修改密码" tabindex="-1"><a class="header-anchor" href="#_8-3-指定-修改密码"><span>8.3.指定/修改密码</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">语法：passwd 用户名  给某个用户设置/更改密码</span>
<span class="line">注意：要写用户名。不写用户名默认设置当前用户，如果当前用户是root就麻烦了。</span>
<span class="line">比如：给milan设置密码 </span>
<span class="line"></span>
<span class="line">命令：pwd ---&gt;显示当前用户所在目录 Print Working Directory</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-4-删除用户" tabindex="-1"><a class="header-anchor" href="#_8-4-删除用户"><span>8.4.删除用户</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">语法： userdel 用户名</span>
<span class="line"></span>
<span class="line">普通用户不能删除别的用户，只有root用户可以；并且不能自己删除自己</span>
<span class="line"></span>
<span class="line">1.删掉用户，但是保留其家目录：</span>
<span class="line">	userdel 用户名</span>
<span class="line">2.将用户和其家目录一起删除(这个操作要谨慎)：</span>
<span class="line">	user -r 用户名</span>
<span class="line"></span>
<span class="line">一般情况，建议保留家目录(不删除)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_8-5-查询用户信息" tabindex="-1"><a class="header-anchor" href="#_8-5-查询用户信息"><span>8.5.查询用户信息</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">语法：id 用户名</span>
<span class="line">id root:</span>
<span class="line">uid=0(root) gid=0(root) 组=0(root)  userid是0 gruopid组id是0 所在组0</span>
<span class="line"></span>
<span class="line">	当用户不存在：返回无此用户 no such user</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-6-切换用户" tabindex="-1"><a class="header-anchor" href="#_8-6-切换用户"><span>8.6.切换用户</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">在操作 Linux 中，如果当前用户的权限不够，可以通过 su - 指令，切换到高权限用户(比如 root)</span>
<span class="line"></span>
<span class="line">语法： su - 切换用户名</span>
<span class="line"></span>
<span class="line">创建一个用户lucy，指定密码，然后切换到lucy</span>
<span class="line"></span>
<span class="line">注意：</span>
<span class="line">	1.从权限高的用户切换到权限低的用户，不需要输入密码，反之需要。</span>
<span class="line">	2.当需要返回到原来用户时，使用 exit/logout 指令</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-7-查看当前用户-登录用户" tabindex="-1"><a class="header-anchor" href="#_8-7-查看当前用户-登录用户"><span>8.7.查看当前用户/登录用户</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">语法：who am i 或者 who am I</span>
<span class="line">who am i ---&gt;第一个登录该系统的用户信息</span>
<span class="line">假设A用户登录系统，切换到B用户，B输入命令who am i，输出的还是A用户的信息</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-8-用户组" tabindex="-1"><a class="header-anchor" href="#_8-8-用户组"><span>8.8.用户组</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">介绍：类似于角色，系统可以对有共性/有相同的权限的多个用户进行统一的管理</span>
<span class="line"></span>
<span class="line">新增组：groupadd 组名</span>
<span class="line">	假如A用户和B用户有相同的权限，一个一个赋权限太麻烦了；</span>
<span class="line">	可以把A用户和B用户放在一个组里，然后给这个组赋权限，组里的用户有相同的权限。</span>
<span class="line"></span>
<span class="line">	新增一个用户，其实会默认生成一个跟用户名相同的组，然后把用户放到该组里。</span>
<span class="line">	就像是 id root：uid=0(root) gid=0(root) 组=0(root)---&gt;root组</span>
<span class="line"></span>
<span class="line">	例子：增加一个用户zwj，把他直接放到组wudang中</span>
<span class="line">	命令：</span>
<span class="line">		groupadd wudang</span>
<span class="line">		useradd -g wudang zwj</span>
<span class="line">		id zwj：uid=1001(zwj) gid=1001(wudang) 组=1001(wudang)</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">修改用户的组：usermod -g 用户组 用户名</span>
<span class="line">	例子：把zwj 放到组 mojiao 中</span>
<span class="line">	命令：</span>
<span class="line">		groupadd mojiao</span>
<span class="line">		usermod -g mojiao zwj</span>
<span class="line">		id zwj：uid=1001(zwj) gid=1002(mojiao) 组=1002(mojiao)</span>
<span class="line"></span>
<span class="line">	新增一个用户john，怎么把john放进组mojiao中？</span>
<span class="line">		useradd jhon</span>
<span class="line">		usermod -g mojiao jhon</span>
<span class="line">		新增一个用户john，john在以自己的名字命名的组john中，从john组到mojiao组</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">删除组：groupdel 组名</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_8-9-用户和组的相关文件" tabindex="-1"><a class="header-anchor" href="#_8-9-用户和组的相关文件"><span>8.9.用户和组的相关文件</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">(1)/etc/passwd 文件</span>
<span class="line">每增加一个用户，就会把用户的信息保存到该文件。</span>
<span class="line">用户（user）的配置文件，记录用户的各种信息</span>
<span class="line">每行都是一个用户，每行的含义：用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell</span>
<span class="line"></span>
<span class="line">主目录：用户所在的家目录</span>
<span class="line"></span>
<span class="line">shell：命令解释程序</span>
<span class="line">	将发布的指令通过shell解析，再传给Linux内核</span>
<span class="line">	Linux是看不懂发布的指令的</span>
<span class="line">	shell有很多种，中国一般用的是bash</span>
<span class="line"></span>
<span class="line">命令：viw /etc/passwd 可以查看该文件(还有其他命令)</span>
<span class="line"></span>
<span class="line">(2)/etc/shadow 文件</span>
<span class="line">口令的配置文件</span>
<span class="line">每行的含义：登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志</span>
<span class="line"></span>
<span class="line">(3)/etc/group 文件</span>
<span class="line">组(group)的配置文件，记录 Linux 包含的组的信息每行含义：组名:口令:组标识号:组内用户列表</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="第九章-实用指令" tabindex="-1"><a class="header-anchor" href="#第九章-实用指令"><span>第九章：实用指令</span></a></h2><h3 id="_9-1-指定运行级别" tabindex="-1"><a class="header-anchor" href="#_9-1-指定运行级别"><span>9.1.指定运行级别</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">Linux系统运行级别：</span>
<span class="line">0：关机</span>
<span class="line">1：单用户【可以找回丢失密码】</span>
<span class="line">2：多用户状态没有网络服务(一般不用，没网络)</span>
<span class="line">3：多用户状态有网络服务</span>
<span class="line">4：系统未使用保留给用户</span>
<span class="line">5：图形界面</span>
<span class="line">6：系统重启</span>
<span class="line">常用运行级别是 3 和 5</span>
<span class="line"></span>
<span class="line">切换运行级别命令：init 选0-6</span>
<span class="line"></span>
<span class="line">指定默认运行级别：</span>
<span class="line">	CentOS7之前是在文件/etc/inittab文件中设置</span>
<span class="line">	CentOS7之后对设置进行了简化：</span>
<span class="line">		用 multi-user.target 代表3运行级别</span>
<span class="line">		用 graphical.target 代表5运行级别</span>
<span class="line">		7版本之后主要用3和5运行级别。</span>
<span class="line"></span>
<span class="line">	用命令：systemctl get-default 查看当前系统运行级别</span>
<span class="line">	用命令：systemctl set-default multi-user.target /graphical.target  设置默认运行级别</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_9-2-找回-root-密码" tabindex="-1"><a class="header-anchor" href="#_9-2-找回-root-密码"><span>9.2.找回 root 密码</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">在登录系统时，忘记了root密码，如何找回root密码？</span>
<span class="line">资料中有，不同版本方式不同，介绍CentOS7之后的版本解决方法：</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071144668.png" alt="" loading="lazy"><br><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071144048.png" alt="" loading="lazy"></p><h3 id="_9-3-帮助指令" tabindex="-1"><a class="header-anchor" href="#_9-3-帮助指令"><span>9.3.帮助指令</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">语法：man 命令或配置文件</span>
<span class="line">是manual的简写，manual是手册的意思</span>
<span class="line"></span>
<span class="line">功能：获得帮助信息</span>
<span class="line">例子：查看ls命令的帮助信息</span>
<span class="line"></span>
<span class="line">输入 man ls 之后，会看到ls的具体信息(要回到前一个页面，输入q)</span>
<span class="line">注意：可能不止一页，使用空格或下键，可以往下看</span>
<span class="line"></span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line">ls命令：列出目录内容</span>
<span class="line">格式：ls [选项] [文件名...]     </span>
<span class="line">	 ls  -a  ---&gt;列出所有文件，包括隐藏文件(隐藏文件以 . 开头)</span>
<span class="line">	 ls  -l  ---&gt;单列输出 </span>
<span class="line"></span>
<span class="line">选项以 - 开始</span>
<span class="line">选项可以组合使用，没有顺序：</span>
<span class="line">	比如： ls -al  也可以 ls -a -l  表示列出所有的文件 并 单列输出</span>
<span class="line"></span>
<span class="line">ls默认是对当前目录下的文件</span>
<span class="line">也可以指定某个目录：</span>
<span class="line">	如： ls -al /root  把root目录下的所有文件单列输出</span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line"></span>
<span class="line">语法：help 命令</span>
<span class="line">功能：获得 shell 内置命令的帮助信息</span>
<span class="line">例子：查看 cd 命令的帮助信息</span>
<span class="line">help cd</span>
<span class="line"></span>
<span class="line">语法：man [命令或配置文件]</span>
<span class="line">功能：获得帮助信息</span>
<span class="line">例子：查看ls命令的帮助信息</span>
<span class="line">man ls</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_9-4-关于文件目录的指令" tabindex="-1"><a class="header-anchor" href="#_9-4-关于文件目录的指令"><span>9.4.关于文件目录的指令</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">基本语法：pwd    (print working directory)</span>
<span class="line">功能：显示当前目录的绝对路径</span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line"></span>
<span class="line">基本语法：ls [选项] [目录或是文件]</span>
<span class="line">常用选项：</span>
<span class="line">	-a：显示当前目录所有的文件和目录，包括隐藏的。</span>
<span class="line">	-l：以列表的方式显示信息</span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line"></span>
<span class="line">基本语法：cd [参数]	</span>
<span class="line">功能：切换到指定目录</span>
<span class="line"></span>
<span class="line">cd ~ 或者 cd ---&gt;回到当前用户的家目录 </span>
<span class="line">cd ..   ---&gt;回到当前目录的上一级目录</span>
<span class="line"></span>
<span class="line">案例 1：使用绝对路径切换到 root 目录</span>
<span class="line">	cd /root</span>
<span class="line">	</span>
<span class="line">案例 2：使用相对路径到 root 目录</span>
<span class="line">	比如当前在 /home/tom </span>
<span class="line">		cd ../../root    ../..回到了根目录,再/root</span>
<span class="line">		</span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line"></span>
<span class="line">基本语法：mkdir [选项] 要创建的目录路径</span>
<span class="line">功能：创建目录</span>
<span class="line">常用选项：</span>
<span class="line">	-p：创建多级目录</span>
<span class="line"></span>
<span class="line">案例1：在home下创建一个目录dog</span>
<span class="line">	mkdir /home/dog</span>
<span class="line">	</span>
<span class="line">案例2：在home下创建多级目录 /home/animal/tiger </span>
<span class="line">	mkdir -p /home/animal/tiger</span>
<span class="line"></span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line"></span>
<span class="line">基本语法：rmdir [选项] 要删除的空目录路径</span>
<span class="line">功能：删除一个空目录</span>
<span class="line"></span>
<span class="line">案例:删除一个目录 /home/dog</span>
<span class="line">	rmdir /home/dog</span>
<span class="line"></span>
<span class="line">注意：</span>
<span class="line">	rmdir 删除的是空目录，如果目录下有内容是无法删除的。</span>
<span class="line">	如果需要删除非空目录，需要使用命令：rm -rf 要删除的目录</span>
<span class="line">	比如： 删除animal目录</span>
<span class="line">		rm -rf /home/animal</span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line"></span>
<span class="line">基本语法：touch 文件名称</span>
<span class="line">功能：创建空文件</span>
<span class="line"></span>
<span class="line">案例:：在/home 目录下，创建一个空文件 hello.txt</span>
<span class="line">	touch /home/hello.txt</span>
<span class="line">	或者当前目录是home：touch hello.text</span>
<span class="line"></span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line"></span>
<span class="line">基本语法：cp [选项] 被拷贝的文件 拷贝到哪个地方</span>
<span class="line">功能：拷贝文件到指定目录</span>
<span class="line">常用选项：</span>
<span class="line">	-r：递归复制整个文件夹</span>
<span class="line"></span>
<span class="line">案例1：将 /home/hello.txt  拷贝到	/home/bbb  目录下</span>
<span class="line">	若在根目录下操作：</span>
<span class="line">	先创建 bbb目录</span>
<span class="line">		mkdir /home/bbb</span>
<span class="line">	然后复制</span>
<span class="line">		cp /home/hello.txt /home/bbb</span>
<span class="line">	</span>
<span class="line">案例2：递归复制整个文件夹，比如将 /home/bbb 整个目录，拷贝到 /opt </span>
<span class="line">	cp -r /home/bbb /opt</span>
<span class="line"></span>
<span class="line">注意：强制覆盖不提示的方法：\\cp	</span>
<span class="line">	\\cp -r /home/bbb /opt</span>
<span class="line"></span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line"></span>
<span class="line">基本语法：rm	[选项] 要删除的文件或目录</span>
<span class="line">功能：移除文件或目录</span>
<span class="line">常用选项：</span>
<span class="line">	-r：递归删除整个文件夹</span>
<span class="line">	-f：强制删除不提示</span>
<span class="line"></span>
<span class="line">案例1：将 /home/hello.txt 删除 </span>
<span class="line">	rm	/home/hello.txt</span>
<span class="line">	</span>
<span class="line">案例2：递归删除整个文件夹 /home/bbb ，并不提示</span>
<span class="line">	rm -rf /home/bbb </span>
<span class="line">	</span>
<span class="line">注意：强制删除不提示的方法：带上 -f 参数即可</span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line"></span>
<span class="line">功能：移动文件与目录或重命名</span>
<span class="line">基本语法：</span>
<span class="line">	mv	原文件名 新文件名 	     (功能描述：重命名)</span>
<span class="line">	mv  被移动的文件 移动到哪   (功能描述：移动文件)</span>
<span class="line"></span>
<span class="line">案例 1: 将 /home/cat.txt 文件 重新命名为 pig.txt</span>
<span class="line">	[root@hspEdu01 ~]# cd /home</span>
<span class="line">	[root@hspEdu01 home]# touch cat.txt</span>
<span class="line">	[root@hspEdu01 home]# ls</span>
<span class="line">	cat.txt  jack  king  milan  zwj</span>
<span class="line">	[root@hspEdu01 home]# mv cat.txt pig.txt</span>
<span class="line">	[root@hspEdu01 home]# ls</span>
<span class="line">	jack  king  milan  pig.txt  zwj</span>
<span class="line"></span>
<span class="line">案例 2:将 /home/pig.txt	文件 移动到 /root 目录下</span>
<span class="line">	[root@hspEdu01 home]# mv pig.txt /root</span>
<span class="line">	[root@hspEdu01 home]# ls</span>
<span class="line">	jack  king  milan  zwj</span>
<span class="line">	[root@hspEdu01 home]# cd /root</span>
<span class="line">	[root@hspEdu01 ~]# ls	</span>
<span class="line">	Hello.java  pig.txt </span>
<span class="line"></span>
<span class="line">移动并重名：mv pig.txt /root/cow.txt</span>
<span class="line"></span>
<span class="line">案例 3: 移动整个目录,比如将 /opt/bbb  移动到 /home 下</span>
<span class="line">	 mv /opt/bbb /home/</span>
<span class="line"></span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line">前面学过一个查看：vim</span>
<span class="line">cat也可以查看，cat只能查看不能修改，cat更安全。</span>
<span class="line"></span>
<span class="line">基本语法：cat	[选项] 要查看的文件</span>
<span class="line">功能：查看文件内容</span>
<span class="line">常用选项：</span>
<span class="line">	-n：显示行号</span>
<span class="line"></span>
<span class="line">案例1：查看 /etc/profile 文件内容，并显示行号。</span>
<span class="line">	cat	-n /etc/profile </span>
<span class="line">注意：</span>
<span class="line">	cat 只能浏览文件，而不能修改文件；为了浏览方便再加上管道命令 | more </span>
<span class="line">	管道命令：把前面的结果再交给下一个指令进行处理。</span>
<span class="line">		语法：| 其他指令</span>
<span class="line">		</span>
<span class="line">	cat	-n /etc/profile | more </span>
<span class="line">		意思：先执行cat -n /etc/profile 然后，按回车键输出一行，按空格翻页等。</span>
<span class="line"></span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line"></span>
<span class="line">基本语法：more 要查看的文件</span>
<span class="line">功能：</span>
<span class="line">more 指令是一个基于 VI 编辑器的文本过滤器，它以全屏幕的方式按页显示文本文件的内容。</span>
<span class="line">more 指令中内置了若干快捷键(交互的指令)，详见操作说明：</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071145099.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">基本语法：less 要查看的文件</span>
<span class="line">功能：</span>
<span class="line">less 指令用来分屏查看文件内容，它的功能与 more 指令类似，但是比 more 指令更加强大，支持各种显示终端。</span>
<span class="line">less 指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是根据显示需要加载内容，对于显示大型文件具有较高的效率。</span>
<span class="line"></span>
<span class="line">有一个文件是100M，用vim查看会将其全部加载再显示出来，这样会很慢。</span>
<span class="line">使用less，会先加载一部分显示出来，再根据指令显示剩下的，这样更快。</span>
<span class="line"></span>
<span class="line">所以要查找一些大的文件，建议用less。</span>
<span class="line"></span>
<span class="line">案例: 采用 less 查看一个大文件文件 /opt/杂文.txt</span>
<span class="line">首先使用xftp将杂文.txt传输到opt下</span>
<span class="line">然后输入指令：less /opt/杂文.txt  </span>
<span class="line"></span>
<span class="line">下面操作中：</span>
<span class="line">	想要找某个字或词</span>
<span class="line">	输入：/要找的字或词    然后按n向下找  按N向上找</span>
<span class="line">操作说明：</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071145140.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">基本语法：echo [选项]	[输出内容]</span>
<span class="line">功能：输出内容到控制台</span>
<span class="line"></span>
<span class="line">案例: 使用 echo  指令输出环境变量</span>
<span class="line">比如输出 $PATH $HOSTNAME</span>
<span class="line">	输入：echo $HOSTNAME (环境变量一般加$)</span>
<span class="line">	</span>
<span class="line">案例: 使用 echo 指令输出 hello,world!</span>
<span class="line">	输入：echo hello,world!</span>
<span class="line">		 echo &quot;hello,world!&quot;  加不加引号都可以</span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line"></span>
<span class="line">功能：head 用于显示文件的开头部分内容，默认情况下 head 指令显示文件的前 10 行内容。</span>
<span class="line">基本语法：</span>
<span class="line">	head  文件	    (功能描述：查看文件头 10 行内容)</span>
<span class="line">	head -n 5 文件	(功能描述：查看文件头 5 行内容，5 可以是任意行数)</span>
<span class="line"></span>
<span class="line">案例: 查看/etc/profile 的前面 5 行代码</span>
<span class="line">	head -n 5 /etc/profile</span>
<span class="line"></span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line"></span>
<span class="line">功能：tail 用于输出文件中尾部的内容，默认情况下 tail 指令显示文件的前 10 行内容。</span>
<span class="line">基本语法：</span>
<span class="line">	tail 文件	    （功能描述：查看文件尾 10 行内容）</span>
<span class="line">	tail -n 5 文件	（功能描述：查看文件尾 5 行内容，5 可以是任意行数）</span>
<span class="line">	tail -f	文件	    （功能描述：实时追踪该文档的所有更新，只要该文件改动了什么内容就可实时看到）</span>
<span class="line"></span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line"></span>
<span class="line">&gt;指令和&gt;&gt;指令：</span>
<span class="line">	&gt; 输出重定向(覆盖)</span>
<span class="line">    &gt;&gt; 追加</span>
<span class="line">基本语法：</span>
<span class="line">	ls -l &gt;文件1	         (功能描述：将列表的内容写入文件1中(覆盖写))</span>
<span class="line">	ls -al &gt;&gt;文件1        (功能描述：将列表的内容追加到文件1的末尾)</span>
<span class="line">	cat 文件 1 &gt; 文件 2	  (功能描述：将文件 1 的内容覆盖到文件 2)</span>
<span class="line">	echo &quot;内容&quot;&gt;&gt; 文件1     (将内容追加到文件1的末尾)</span>
<span class="line"></span>
<span class="line">案例 1: 将 /home 目录下的文件列表 写入到 /home/info.txt 中,覆盖写入。</span>
<span class="line">	ls -l /home &gt; /home/info.txt	[如果 info.txt 没有，则会自动创建] </span>
<span class="line">	</span>
<span class="line">案例 2: 将当前日历信息 追加到	/home/mycal 文件中</span>
<span class="line">	cal &gt;&gt; /home/mycal</span>
<span class="line"></span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line"></span>
<span class="line">功能：给原文件创建一个软链接</span>
<span class="line">	 软链接也称为符号链接，类似于 windows 里的快捷方式，主要存放了链接其他文件的路径</span>
<span class="line">基本语法：</span>
<span class="line">	ln -s [原文件或目录] [软链接名] （功能描述：给原文件创建一个软链接）</span>
<span class="line">	ln是link</span>
<span class="line"></span>
<span class="line">案例1：在/home 目录下创建一个软连接 myroot，连接到 /root 目录</span>
<span class="line">(这样 切换到myroot 其实就是切换到root)</span>
<span class="line">	ln -s /root	/home/myroot</span>
<span class="line">	</span>
<span class="line">案例2: 删除软连接 myroot </span>
<span class="line">	rm	/home/myroot</span>
<span class="line"></span>
<span class="line">当我们使用 pwd 指令查看目录时，仍然看到的是软链接所在目录。</span>
<span class="line"></span>
<span class="line">---------------------------------------------------------------------</span>
<span class="line"></span>
<span class="line">功能：查看已经执行过历史命令,也可以执行历史指令</span>
<span class="line">基本语法：</span>
<span class="line">	history （功能描述：查看已经执行过历史命令）</span>
<span class="line">	可以看其他登录的用户做了什么操作。</span>
<span class="line"></span>
<span class="line">案例 1: 显示所有的历史命令</span>
<span class="line">history</span>
<span class="line">案例 2: 显示最近使用过的 10 个指令。</span>
<span class="line">history 10</span>
<span class="line">案例 3：执行历史编号为 5 的指令</span>
<span class="line">!5</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_9-5-关于时间日期的指令" tabindex="-1"><a class="header-anchor" href="#_9-5-关于时间日期的指令"><span>9.5.关于时间日期的指令</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">date指令：</span>
<span class="line">	1.显示当前日期</span>
<span class="line">		基本语法：</span>
<span class="line">			date	  （功能描述：显示当前时间）</span>
<span class="line">			date +%Y  （功能描述：显示当前年份）</span>
<span class="line">			date +%m  （功能描述：显示当前月份）</span>
<span class="line">			date +%d  （功能描述：显示当前是哪一天）</span>
<span class="line">			date &quot;+%Y-%m-%d %H:%M:%S&quot;（功能描述：显示年月日时分秒）</span>
<span class="line"></span>
<span class="line">			Y year</span>
<span class="line">			m month</span>
<span class="line">			d day</span>
<span class="line">			H hour</span>
<span class="line">			M minute</span>
<span class="line">			S second</span>
<span class="line">		</span>
<span class="line">		案例 1: 显示当前时间信息</span>
<span class="line">		date</span>
<span class="line">		案例 2: 显示当前时间年月日</span>
<span class="line">		date &quot;+%Y-%m-%d&quot;</span>
<span class="line">		案例 3: 显示当前时间年月日时分秒</span>
<span class="line">		date &quot;+%Y-%m-%d %H:%M:%S&quot;</span>
<span class="line"></span>
<span class="line">	2.设置日期</span>
<span class="line">		基本语法：</span>
<span class="line">			date -s	字符串时间</span>
<span class="line">			</span>
<span class="line">		案例 1: 设置系统当前时间</span>
<span class="line">		date -s &quot;2020-11-03 20:02:10&quot;</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">cal指令：</span>
<span class="line">	查看日历指令 cal</span>
<span class="line">	</span>
<span class="line">	基本语法：</span>
<span class="line">	cal [选项]	（功能描述：不加选项，显示本月日历）</span>
<span class="line">	</span>
<span class="line">	案例 1: 显示当前日历 </span>
<span class="line">	cal</span>
<span class="line">	案例 2: 显示 2020 年日历 </span>
<span class="line">	cal 2020</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_9-6-关于搜索查找有关的指令" tabindex="-1"><a class="header-anchor" href="#_9-6-关于搜索查找有关的指令"><span>9.6.关于搜索查找有关的指令</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">find 指令</span>
<span class="line">	从指定目录向下递归地遍历其各个子目录，将满足条件的文件或者目录显示在终端。</span>
<span class="line">    </span>
<span class="line">    基本语法：</span>
<span class="line">	find [搜索范围] [选项]</span>
<span class="line">	</span>
<span class="line">选项说明：</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i-blog.csdnimg.cn/blog_migrate/b980b70a5e54b5b52dab975ceee2a323.bmp#pic_center" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">案例 1: 按文件名：根据名称查找 /home 目录下的 hello.txt 文件</span>
<span class="line">find /home -name hello.txt</span>
<span class="line"></span>
<span class="line">案例 2：按拥有者：查找 /opt 目录下，用户名称为 nobody 的文件</span>
<span class="line">find /opt -user nobody</span>
<span class="line"></span>
<span class="line">案例 3：查找整个 linux 系统下大于 200M 的文件</span>
<span class="line">	+n 大于 -n 小于 n 等于</span>
<span class="line">	单位有 k,M,G </span>
<span class="line">find / -size +200M</span>
<span class="line"></span>
<span class="line">[root@hspEdu01 opt]# find / -size +200M</span>
<span class="line">/proc/kcore</span>
<span class="line">find: ‘/proc/12775/task/12775/fd/5’: 没有那个文件或目录</span>
<span class="line">find: ‘/proc/12775/task/12775/fdinfo/5’: 没有那个文件或目录</span>
<span class="line">find: ‘/proc/12775/fd/6’: 没有那个文件或目录</span>
<span class="line">find: ‘/proc/12775/fdinfo/6’: 没有那个文件或目录</span>
<span class="line">/run/media/root/CentOS 7 x86_64/LiveOS/squashfs.img (这个文件大于200M)</span>
<span class="line">[root@hspEdu01 opt]# cd /run/media/root/CentOS\\ 7\\ x86_64/LiveOS/</span>
<span class="line">[root@hspEdu01 LiveOS]# ls</span>
<span class="line">squashfs.img  TRANS.TBL</span>
<span class="line">[root@hspEdu01 LiveOS]# ls -l</span>
<span class="line">总用量 442741</span>
<span class="line">-rw-r--r--. 1 root root 453365760 11月 26 2018 squashfs.img</span>
<span class="line">-r--r--r--. 1 root root       224 11月 26 2018 TRANS.TBL</span>
<span class="line">[root@hspEdu01 LiveOS]# ls -lh  (上面的总用量大小看不懂，加上h human 能看懂的内容)</span>
<span class="line">总用量 433M</span>
<span class="line">-rw-r--r--. 1 root root 433M 11月 26 2018 squashfs.img</span>
<span class="line">-r--r--r--. 1 root root  224 11月 26 2018 TRANS.TBL</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">locate 指令</span>
<span class="line">	可以快速定位文件路径。</span>
<span class="line">	利用事先建立的系统中所有文件名称及路径的 locate 数据库实现快速定位给定的文件。</span>
<span class="line">	Locate 指令无需遍历整个文件系统，查询速度较快。</span>
<span class="line">	为了保证查询结果的准确度，管理员必须定期更新 locate 时刻</span>
<span class="line">	</span>
<span class="line">	基本语法:</span>
<span class="line">	locate 搜索文件</span>
<span class="line"></span>
<span class="line">	注意：</span>
<span class="line">	由于 locate 指令基于数据库进行查询，</span>
<span class="line">	所以第一次运行前，必须使用 updatedb 指令创建 locate 数据库。</span>
<span class="line"></span>
<span class="line">	案例 1: 请使用 locate 指令快速定位 hello.txt 文件所在目录</span>
<span class="line">	updatedb</span>
<span class="line">	locate hello.txt</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">which 指令</span>
<span class="line">	可以查看某个指令在哪个目录下</span>
<span class="line">	案例：ls 指令在哪个目录</span>
<span class="line">	which ls</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">grep 指令和 管道符号 |  </span>
<span class="line">	grep指令往往和管道符号 | 结合使用</span>
<span class="line">	grep：过滤查找</span>
<span class="line">	管道符：“|”</span>
<span class="line">	表示将前一个命令的处理结果输出传递给后面的命令处理。</span>
<span class="line">	比如：先 cat a.txt，然后又想看a.txt文件中有没有hello这个词</span>
<span class="line">	那么就 cat a.txt | grep &quot;hello&quot; ---&gt;先找到a.txt，然后再在a.txt中找hello</span>
<span class="line"></span>
<span class="line">	基本语法：</span>
<span class="line">	grep [选项] 查找内容 源文件</span>
<span class="line">	</span>
<span class="line">	常用选项：</span>
<span class="line">		-n  显示匹配行及行号</span>
<span class="line">		-i   忽略字母大小写</span>
<span class="line"></span>
<span class="line">	案例 1: 请在 hello.txt 文件中，查找&quot;yes&quot;所在行，并且显示行号</span>
<span class="line">		写法 1:  cat /home/hello.txt	| grep &quot;yes&quot;  引号写不写都行</span>
<span class="line">				cat /home/hello.txt	| grep -n &quot;yes&quot;   显示行号    			</span>
<span class="line">		写法 2:  grep -n &quot;yes&quot; /home/hello.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_9-7-关于压缩和解压的指令" tabindex="-1"><a class="header-anchor" href="#_9-7-关于压缩和解压的指令"><span>9.7.关于压缩和解压的指令</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">gzip/gunzip 指令</span>
<span class="line">	gzip    用于压缩文件</span>
<span class="line">	gunzip  用于解压的</span>
<span class="line">    </span>
<span class="line">    基本语法：</span>
<span class="line">	gzip 文件	  （功能描述：压缩文件，只能将文件压缩为*.gz 文件）</span>
<span class="line">	gunzip 文件.gz （功能描述：解压缩文件命令）</span>
<span class="line">	</span>
<span class="line"></span>
<span class="line">	案例 1: gzip 压缩，将 /home 下的 hello.txt 文件进行压缩</span>
<span class="line">	gzip /home/hello.txt</span>
<span class="line">	</span>
<span class="line">	案例 2: gunzip 解缩，将 /home 下的 hello.txt.gz 文件进行解压</span>
<span class="line">	gunzip /home/hello.txt.gz</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">zip/unzip 指令</span>
<span class="line">	zip 用于压缩文件</span>
<span class="line">	unzip 用于解压的 </span>
<span class="line">	（这个在项目打包发布中很有用的）</span>
<span class="line">		</span>
<span class="line">	基本语法：</span>
<span class="line">	zip	[选项] XXX.zip 将要压缩的内容    （功能描述：压缩文件和目录的命令）</span>
<span class="line">	unzip [选项] XXX.zip	              （功能描述：解压文件）</span>
<span class="line">    </span>
<span class="line">    zip 常用选项</span>
<span class="line">		-r：递归压缩，即压缩目录</span>
<span class="line">	</span>
<span class="line">	unzip 的常用选项</span>
<span class="line">		-d&lt;目录&gt; ：指定解压后文件的存放目录</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">	案例 1:将 /home 下的所有文件/文件夹压缩成 myhome.zip</span>
<span class="line">	zip -r myhome.zip /home/	[将 home 目录及其包含的文件和子文件夹都压缩] </span>
<span class="line">	</span>
<span class="line">	案例 2:将 myhome.zip 解压到 /opt/tmp 目录下</span>
<span class="line">	mkdir /opt/tmp</span>
<span class="line">	unzip -d /opt/tmp /home/myhome.zip</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">tar 指令</span>
<span class="line">	tar 指令是打包指令，最后打包后的文件是 .tar.gz 的文件。</span>
<span class="line">	把一个或者多个文件（夹）用压缩软件进行压缩的过程，一般可称之为打包。</span>
<span class="line">	</span>
<span class="line">	tar指令可以压缩也可以解压。</span>
<span class="line">	根据选项来 压缩还是解压。</span>
<span class="line"></span>
<span class="line">	基本语法：</span>
<span class="line">	tar	[选项] XXX.tar.gz 打包的内容	  (功能描述：打包目录，压缩后的文件格式.tar.gz)</span>
<span class="line">	</span>
<span class="line">	选项说明：</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071145005.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">案例 1:压缩多个文件，将 /home/pig.txt 和 /home/cat.txt 压缩成 pc.tar.gz </span>
<span class="line">tar -zcvf pc.tar.gz /home/pig.txt /home/cat.txt</span>
<span class="line">	使用了选项：-z -c -v -f</span>
<span class="line">	多个文件就 空格直接写在后面就好了</span>
<span class="line"></span>
<span class="line">案例 2:将 /home 的文件夹压缩成 myhome.tar.gz </span>
<span class="line">tar -zcvf myhome.tar.gz /home/</span>
<span class="line"></span>
<span class="line">案例 3:将 pc.tar.gz 解压到当前目录</span>
<span class="line">tar -zxvf pc.tar.gz</span>
<span class="line"></span>
<span class="line">案例 4:将 myhome.tar.gz 解压到 /opt/tmp2 目录下	</span>
<span class="line">(1)	mkdir /opt/tmp2 </span>
<span class="line">(2) tar -zxvf /home/myhome.tar.gz -C /opt/tmp2</span>
<span class="line">注意：-C 后写要解压到的位置</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="第十章-组管理和权限管理" tabindex="-1"><a class="header-anchor" href="#第十章-组管理和权限管理"><span>第十章：组管理和权限管理</span></a></h2><h3 id="_10-1-linux-组基本介绍" tabindex="-1"><a class="header-anchor" href="#_10-1-linux-组基本介绍"><span>10.1. Linux 组基本介绍</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">在 linux 中的每个用户必须属于一个组，不能独立于组外。</span>
<span class="line">在 linux 中每个文件都有所有者、所在组、其它组的概念。</span>
<span class="line"></span>
<span class="line">1)	所有者</span>
<span class="line">2)	所在组</span>
<span class="line">3)	其它组</span>
<span class="line">4)	改变用户所在的组</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-2-文件-目录的所有者" tabindex="-1"><a class="header-anchor" href="#_10-2-文件-目录的所有者"><span>10.2.文件/目录的所有者</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">一般为文件的创建者，谁创建了该文件，就自然的成为该文件的所有者。</span>
<span class="line">但是所有者也可以更改。</span>
<span class="line"></span>
<span class="line">1.查看文件/目录的所有者(在/home下才能看到)</span>
<span class="line">指令：ls –ahl</span>
<span class="line">-ahl是三个选项</span>
<span class="line">	-h human 让输出的结果方便人看(文件的大小容易看)</span>
<span class="line"></span>
<span class="line">drwxr-xr-x.  6 root root   4.0K 2月  23 13:59 .</span>
<span class="line">dr-xr-xr-x. 18 root root   4.0K 2月  20 16:45 ..</span>
<span class="line">-rw-r--r--.  1 root root     24 2月  22 21:59 hello.txt</span>
<span class="line">...</span>
<span class="line">第三列就是文件的所有者</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">2.修改文件/目录所有者指令：chown 新所有者 文件名</span>
<span class="line">案例：</span>
<span class="line">	要求：使用 root 创建一个文件 apple.txt ，然后将其所有者修改成 tom</span>
<span class="line">		  chown tom apple.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_10-3-组的创建" tabindex="-1"><a class="header-anchor" href="#_10-3-组的创建"><span>10.3.组的创建</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">基本指令:</span>
<span class="line">	groupadd 组名</span>
<span class="line"></span>
<span class="line">案例：</span>
<span class="line">创建一个组 monster </span>
<span class="line">	groupadd monster</span>
<span class="line"></span>
<span class="line">创建一个用户 fox ，并放入到	monster 组中</span>
<span class="line">	useradd -g monster fox</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-4-文件-目录的所在组" tabindex="-1"><a class="header-anchor" href="#_10-4-文件-目录的所在组"><span>10.4.文件/目录的所在组</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">当某个用户创建了一个文件后，这个文件的所在组就是该用户所在的组(默认)。</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">查看文件/目录所在组</span>
<span class="line">	指令:</span>
<span class="line">	ls –ahl  或者ll</span>
<span class="line"></span>
<span class="line">	ll并不是linux下一个基本的命令，它实际上是ls -l的一个别名。</span>
<span class="line">	Ubuntu默认不支持命令ll，必须用 ls -l，这样使用起来不是很方便。</span>
<span class="line">	</span>
<span class="line">	案例：使用 fox 来创建一个文件，看看该文件属于哪个组?</span>
<span class="line">	使用fox创建一个文件：</span>
<span class="line">		su fox</span>
<span class="line">		然后touch ok.txt</span>
<span class="line">		然后ll</span>
<span class="line">		</span>
<span class="line">	-rw-r--r--. 1 fox monster 0 11 月 5 12:50 ok.txt</span>
<span class="line">	第三列：文件的所有者(谁创建了这个文件，就是这个文件的所有者)</span>
<span class="line">	第四列：文件的所在组(某个用户创建了一个文件，该文件所在组=该用户所在组)</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">	注意：/etc/group下存放着所有的组</span>
<span class="line">	使用指令：cat /etc/group 可以查看所有的组</span>
<span class="line">	</span>
<span class="line">	比如查看有没有mojiao这个组</span>
<span class="line">	可以使用管道命令和grep过滤</span>
<span class="line">		cat /etc/group | grep mojiao</span>
<span class="line">	当一个文件很大，想找某个关键词就可以这个过滤！</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">修改文件/目录所在的组</span>
<span class="line">	指令：</span>
<span class="line">	chgrp 组名 文件名</span>
<span class="line">	</span>
<span class="line">	案例：使用 root 用户创建文件 orange.txt ,看看当前这个文件属于哪个组，</span>
<span class="line">		 然后将这个文件所在组，修改到 fruit 组。</span>
<span class="line">	</span>
<span class="line">		groupadd fruit</span>
<span class="line">		touch orange.txt</span>
<span class="line">		看看当前这个文件属于哪个组 -&gt; root 组</span>
<span class="line">		chgrp fruit orange.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_10-5-其它组" tabindex="-1"><a class="header-anchor" href="#_10-5-其它组"><span>10.5.其它组</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">除文件的所有者和所在组的用户外，系统的其它用户都是该文件的其它组</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_10-6-改变用户所在的组" tabindex="-1"><a class="header-anchor" href="#_10-6-改变用户所在的组"><span>10.6.改变用户所在的组</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">在添加用户时，可以指定将该用户添加到哪个组中，同样的用 root 的管理权限可以改变某个用户所在的组。</span>
<span class="line"></span>
<span class="line">改变用户所在组</span>
<span class="line">	usermod	–g	新组名	用户名</span>
<span class="line">	usermod	–d	目录名	用户名	 (改变该用户登陆的初始目录)</span>
<span class="line"></span>
<span class="line">特别说明：用户需要有进入到新目录的权限。</span>
<span class="line"></span>
<span class="line">如何查看用户所在的组？</span>
<span class="line">	id 用户名  ---&gt;显示用户信息</span>
<span class="line">	</span>
<span class="line">案例：</span>
<span class="line">将 zwj 这个用户从原来所在组，修改到 wudang 组</span>
<span class="line">	先查看zwj在哪个组：id zwj</span>
<span class="line">	然后查看有没有wudang这个组：cat /etc/group | grep wudang</span>
<span class="line">	修改：usermod -g wudang zwj</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_10-7-权限基本介绍" tabindex="-1"><a class="header-anchor" href="#_10-7-权限基本介绍"><span>10.7.权限基本介绍</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">ls -l 中显示的内容如下：</span>
<span class="line">-rwxrw-r-- 1 root root 1213 Feb 2 09:39 abc</span>
<span class="line">第一列共10位</span>
<span class="line"></span>
<span class="line">0-9 位说明：</span>
<span class="line">	第 0 位确定文件类型(d, - , l , c , b)</span>
<span class="line">		d 是目录，相当于 windows 的文件夹</span>
<span class="line">		- 代表是普通文件(.txt)</span>
<span class="line">		l 是链接，相当于 windows 的快捷方式</span>
<span class="line">		c 是字符设备文件，比如鼠标，键盘    ---&gt; /dev/目录下可以看到</span>
<span class="line">		b 是块设备，比如硬盘    ---&gt; /dev/目录下可以看到</span>
<span class="line">		</span>
<span class="line">	第 1-3 位确定 该文件的所有者 对该文件的 权限。---User</span>
<span class="line">	第 4-6 位确定 该文件所属的组和该组中的用户 对该文件的 权限。---Group </span>
<span class="line">	第 7-9 位确定 其他用户(不是所有者，也不是同一组的其他用户) 对该文件的权限 ---Other</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_10-8-rwx权限详解" tabindex="-1"><a class="header-anchor" href="#_10-8-rwx权限详解"><span>10.8.rwx权限详解</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">权限有三种：</span>
<span class="line">	r 代表可读(read)</span>
<span class="line">	w 代表可写(write)</span>
<span class="line">	x 代表可执行(execute)</span>
<span class="line">	</span>
<span class="line">rwx 作用到文件：</span>
<span class="line">	r: 可以读取,查看</span>
<span class="line">	w: 可以修改,但是不代表可以删除该文件</span>
<span class="line">	   删除一个文件的前提条件是 对该文件所在的目录 有 写权限，才能删除该文件.</span>
<span class="line">	x: 可以被执行,前提是可执行文件</span>
<span class="line"></span>
<span class="line">rwx 作用到目录：</span>
<span class="line">	r: 可以读取，可以用 ls 查看目录内容</span>
<span class="line">	w: 可以修改, 可以对目录进行 创建+删除+重命名目录</span>
<span class="line">	x: 可以进入该目录</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_10-9-文件-目录权限实际案例" tabindex="-1"><a class="header-anchor" href="#_10-9-文件-目录权限实际案例"><span>10.9.文件/目录权限实际案例</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">ls -l 中显示的内容如下：</span>
<span class="line">-rwxrw-r-- 1 root root 1213 Feb 2 09:39 abc</span>
<span class="line"></span>
<span class="line">第一列中 10 个字符 确定不同用户能对文件干什么(权限)：</span>
<span class="line">	第一个字符代表文件类型： - l d c b</span>
<span class="line">	其余字符每 3 个一组(rwx) 读(r) 写(w) 执行(x) </span>
<span class="line">	</span>
<span class="line">	第一组 rwx：文件所有者的权限是 读、写和执行</span>
<span class="line">	第二组 rw-：与文件所有者同一组的用户的权限是 读、写但不能执行</span>
<span class="line">	第三组 r- ：不与文件拥所有者同组的其他用户 的权限是 读不能写和执行</span>
<span class="line"></span>
<span class="line">也可以用数字表示对应的权限：</span>
<span class="line">	r=4,w=2,x=1  </span>
<span class="line">	因此 rwx=4+2+1=7 </span>
<span class="line">	数字可以进行组合</span>
<span class="line"></span>
<span class="line">其它说明：</span>
<span class="line">	第二列：1				如果是普通文件，直接就是1；</span>
<span class="line">							如果是目录，代表该目录下有多少内容(即子目录数+文件数)</span>
<span class="line">							</span>
<span class="line">	第三列：root				该文件/目录的所有者</span>
<span class="line">	第四列：root				该文件/目录的所在组</span>
<span class="line">	第五列：1213				文件大小(这里是字节)</span>
<span class="line">	第六列：Feb 2 09:39		最后修改日期</span>
<span class="line">	第七列：abc				文件名</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_10-10-修改权限-chmod" tabindex="-1"><a class="header-anchor" href="#_10-10-修改权限-chmod"><span>10.10.修改权限-chmod</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">基本说明：</span>
<span class="line">通过 chmod 指令，可以修改文件或者目录的权限。</span>
<span class="line"></span>
<span class="line">第一种方式：通过 + 、-、=  变更权限</span>
<span class="line">	u:所有者	</span>
<span class="line">	g:所在组(同一个组的其他用户)	</span>
<span class="line">	o:其他人(不同一个组的其他用户)	</span>
<span class="line">	a:所有人(所有用户)(u、g、o 的总和)</span>
<span class="line">	</span>
<span class="line">	chmod 	u=rwx,g=rx,o=x	文件/目录名  (该文件/目录的u的权限是rwx，g的权限是rx，o的权限是x)</span>
<span class="line">	chmod	o+w				文件/目录名  (该文件/目录的o的权限加上w)</span>
<span class="line">	chmod	a-x				文件/目录名  (取消该文件/目录的a的x权限)</span>
<span class="line">	</span>
<span class="line">	</span>
<span class="line">案例演示：</span>
<span class="line">1.给 abc 文件 的所有者读写执行的权限，给所在组读执行权限，给其它组读执行权限。</span>
<span class="line">chmod u=rwx,g=rx,o=rx abc</span>
<span class="line"></span>
<span class="line">2.给 abc 文件的所有者除去执行的权限，增加组写的权限</span>
<span class="line">chmod u-x,g+w abc</span>
<span class="line"></span>
<span class="line">3.给 abc 文件的所有用户添加读的权限</span>
<span class="line">chmod a+r abc</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">注意：</span>
<span class="line">	可执行文件 	图标	   绿色</span>
<span class="line">	普通文件	 	图标    白色</span>
<span class="line">	目录/文件夹	图标    蓝色</span>
<span class="line">	压缩文件		图标    红色</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">第二种方式：通过数字变更权限</span>
<span class="line">	权限可以用数字代替：r=4 w=2 x=1	</span>
<span class="line">	 </span>
<span class="line">	chmod u=rwx,g=rx,o=x 文件/目录名</span>
<span class="line">	相当于 </span>
<span class="line">	chmod 751		     文件/目录名</span>
<span class="line">	</span>
<span class="line">	rwx=4+2+1=7</span>
<span class="line">	rx=4+1=5</span>
<span class="line">	x=1</span>
<span class="line"></span>
<span class="line">案例演示</span>
<span class="line">要求：将 /home/abc.txt 文件的权限修改成	rwxr-xr-x,使用给数字的方式实现：</span>
<span class="line">	rwxr-xr-x：u-rwx g=r-x o=r-x</span>
<span class="line">	chmod 755 /home/abc.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_10-11-修改文件-目录的所有者-chown" tabindex="-1"><a class="header-anchor" href="#_10-11-修改文件-目录的所有者-chown"><span>10.11.修改文件/目录的所有者-chown</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">基本介绍</span>
<span class="line">chown	newowner			文件/目录	(修改所有者)</span>
<span class="line">chown 	newowner:newgroup	文件/目录 	(同时修改所有者和所在组)</span>
<span class="line"></span>
<span class="line">选项：-R	如果是目录 则使其下所有子文件或目录递归生效</span>
<span class="line"></span>
<span class="line">案例演示</span>
<span class="line">1.请将 /home/abc.txt 文件的所有者修改成 tom</span>
<span class="line">chown tom /home/abc.txt</span>
<span class="line"></span>
<span class="line">2.请将 /home/test 目录下所有的文件和目录的所有者都修改成 tom </span>
<span class="line">chown -R tom /home/test</span>
<span class="line"></span>
<span class="line">R:Recursive递归</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_10-12-修改文件-目录的所在组-chgrp" tabindex="-1"><a class="header-anchor" href="#_10-12-修改文件-目录的所在组-chgrp"><span>10.12.修改文件/目录的所在组-chgrp</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">chgrp  newgroup  文件/目录	(改变所在组)</span>
<span class="line"></span>
<span class="line">案例演示:</span>
<span class="line">1.请将 /home/abc.txt 文件的所在组修改成 shaolin (少林) </span>
<span class="line">groupadd shaolin</span>
<span class="line">chgrp shaolin /home/abc.txt</span>
<span class="line"></span>
<span class="line">2.请将 /home/test 目录下所有的文件和目录的所在组都修改成 shaolin(少林) </span>
<span class="line">chgrp -R shaolin /home/test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-13-最佳实践-警察和土匪游戏" tabindex="-1"><a class="header-anchor" href="#_10-13-最佳实践-警察和土匪游戏"><span>10.13.最佳实践-警察和土匪游戏</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">有两个组：police组，bandit组</span>
<span class="line">有四个用户：jackie,jerry,xh,xq</span>
<span class="line">jackie,jerry: 警察</span>
<span class="line">xh,xq: 土匪</span>
<span class="line"></span>
<span class="line">1.创建组	</span>
<span class="line">	groupadd police</span>
<span class="line">	groupadd bandit</span>
<span class="line">2.创建用户(直接放到对应组)</span>
<span class="line">	useradd -g police jackie</span>
<span class="line">	useradd -g police jerry</span>
<span class="line">	useradd -g bandit xh</span>
<span class="line">	useradd -g bandit xq</span>
<span class="line">3.jackie 创建一个文件，自己可以读 r 写 w，本组人可以读，其它组没人任何权限</span>
<span class="line">	首先jackie登录，可以使用切换用户：su jackie ----&gt;这样不行，无法创建文件，权限不够</span>
<span class="line"></span>
<span class="line">	使用jackie登录，先设置密码123，然后退出系统用jackie登录：passwd jackie</span>
<span class="line">	然后创建文件：touch jackie.txt </span>
<span class="line">	权限设置：</span>
<span class="line">		原权限：rw-r--r--</span>
<span class="line">		chmod o-r jackie.txt </span>
<span class="line">		修改后权限：rw-r-----</span>
<span class="line">		</span>
<span class="line">		也可以直接使用数字方式：chmod 640 jackie.txt</span>
<span class="line">		</span>
<span class="line">4.jackie 修改该文件，让其它组人可以读，本组人可以读写</span>
<span class="line">	chmod g+w o+r jackie.txt </span>
<span class="line">	或者</span>
<span class="line">	chmod 664 jackie.txt</span>
<span class="line"></span>
<span class="line">	改后权限：rw-rw-r--</span>
<span class="line">	</span>
<span class="line">5.xh投靠警察</span>
<span class="line">	由root执行这条指令</span>
<span class="line">	usermod -g police xh</span>
<span class="line"></span>
<span class="line">6.测试xh和xq能不能对jackie.txt文件进行读写</span>
<span class="line">	分别使用xh和xq登录(首先对其设置密码123)</span>
<span class="line">		</span>
<span class="line">	jackie.txt文件在jackie目录下</span>
<span class="line">	要想对jackie.txt文件进行操作，首先进入jackie目录</span>
<span class="line">	但是jackie目录权限是：rwx------</span>
<span class="line">	所以xh连jackie目录都进不去</span>
<span class="line"></span>
<span class="line">	解决办法：登录jackie，对jackie目录权限进行修改(也可以登录root进行修改)(必须都在home下才能执行这个修改权限命令)</span>
<span class="line">		登录</span>
<span class="line">		cd /home/</span>
<span class="line">		ll</span>
<span class="line">		得到jackie原目录权限：rwx------</span>
<span class="line">		修改权限：chmod 770 jackie			(权限中有x才能进入目录)</span>
<span class="line">		修改后jackie目录权限：rwxrwx---</span>
<span class="line"></span>
<span class="line">		这时xh就可以进入jackie目录，并对jackie.txt进行读写</span>
<span class="line">	</span>
<span class="line">	</span>
<span class="line">结论：如果要对目录内的文件进行操作，首先要有对该目录有相应权限</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_10-14-课后练习1" tabindex="-1"><a class="header-anchor" href="#_10-14-课后练习1"><span>10.14.课后练习1</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.建立两个组（神仙(sx),妖怪(yg)）</span>
<span class="line">	groupadd sx</span>
<span class="line">	groupadd yg</span>
<span class="line">2.建立四个用户(唐僧,悟空，八戒，沙僧)</span>
<span class="line">	useradd ts</span>
<span class="line">	useradd wk</span>
<span class="line">	useradd bj</span>
<span class="line">	useradd ss</span>
<span class="line">3.设置密码(都为123)</span>
<span class="line">	passwd ts</span>
<span class="line">	passwd wk</span>
<span class="line">	passwd bj</span>
<span class="line">	passwd ss</span>
<span class="line">4.妖怪组：悟空，八戒；神仙组：唐僧，沙僧</span>
<span class="line">	usermod -g yg wk</span>
<span class="line">	usermod -g yg bj</span>
<span class="line">	usermod -g sx ts</span>
<span class="line">	usermod -g sx ss</span>
<span class="line">5.用悟空建立一个文件 monkey.txt ，该文件要输出 i am a monkey</span>
<span class="line">	先使用悟空登录</span>
<span class="line">	vim monkey.txt</span>
<span class="line">	i am a monkey</span>
<span class="line">	:wq</span>
<span class="line">6.给八戒一个可以 r w 的权限</span>
<span class="line">	悟空和八戒是一组的</span>
<span class="line">	当前monkey.txt权限：-rw-r--r--</span>
<span class="line">	此时八戒只能r</span>
<span class="line">	命令：chmod g+w monkey.txt</span>
<span class="line">	现在monkey.txt权限：-rw-rw-r--</span>
<span class="line"></span>
<span class="line">7.八戒修改 monkey.txt 加入一句话( i am a pig)</span>
<span class="line">	monkey.txt文件在wk目录下</span>
<span class="line">	八戒要修改monkey.txt文件就要先进入wk目录</span>
<span class="line">	但是此时wk目录权限：rwx------</span>
<span class="line">	八戒进不去wk目录</span>
<span class="line">	所以先修改wk目录权限：chmod g+r+w+x wk  (先把所以权限都给，在wk的home下写指令或root的home下写指令，因为目录在home下)</span>
<span class="line">	现在wk目录权限：rwxrwx---</span>
<span class="line">	这时八戒就能进入wk目录了</span>
<span class="line"></span>
<span class="line">8.唐僧 沙僧 对该文件没有权限</span>
<span class="line">	唐僧和沙僧是其他组，进不去wk目录</span>
<span class="line"></span>
<span class="line">9.把 沙僧 放入妖怪组</span>
<span class="line">	usermod -g yg ss</span>
<span class="line">	</span>
<span class="line">10.让沙僧修改该文件 monkey.txt, 加入一句话 (&quot;我是沙僧，我是妖怪!&quot;);</span>
<span class="line">	使用沙僧登录</span>
<span class="line">	cd /home/wk</span>
<span class="line">	viw monkey.txt</span>
<span class="line">	...</span>
<span class="line">	:wq</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">注意：</span>
<span class="line">rwx权限对于 文件夹(目录) 的细节讨论和测试!!!</span>
<span class="line">	x: 表示可以进入到该目录,比如 cd</span>
<span class="line">	r: 表示可以 ls ,将目录的内容显示</span>
<span class="line">	w: 表示可以在该目录下删除或者创建文件</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_10-15-课后练习2" tabindex="-1"><a class="header-anchor" href="#_10-15-课后练习2"><span>10.15.课后练习2</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1)	用 root 登录，建立用户 mycentos,自己设定密码</span>
<span class="line">2)	用 mycentos 登录，在主目录下建立目录 test/t11/t1</span>
<span class="line">3)	在 t1 中建立一个文本文件 aa,用 vi 编辑其内容为 ls  –al</span>
<span class="line">4)	改变 aa 的权限为可执行文件[可以将当前日期追加到一个文件],运行该文件./aa</span>
<span class="line">5)	删除新建立的目录 test/t11/t1</span>
<span class="line">6)	删除用户 mycentos 及其主目录中的内容</span>
<span class="line">7)	将 linux 设置成进入到图形界面的</span>
<span class="line">8)	重新启动 linux 或关机</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第十一章-定时任务调度" tabindex="-1"><a class="header-anchor" href="#第十一章-定时任务调度"><span>第十一章：定时任务调度</span></a></h2><h3 id="_11-1-crond任务调度" tabindex="-1"><a class="header-anchor" href="#_11-1-crond任务调度"><span>11.1. crond任务调度</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1.概述</span>
<span class="line">任务调度：是指系统在某个时间执行特定的命令或程序。</span>
<span class="line">crond---&gt;周期任务</span>
<span class="line"></span>
<span class="line">任务调度分类：</span>
<span class="line">	(1)系统工作：有些重要的工作必须周而复始地执行。如病毒扫描等</span>
<span class="line">	(2)个别用户工作：个别用户可能希望执行某些程序，比如对 mysql 数据库的备份。</span>
<span class="line"></span>
<span class="line">示意图：</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071145292.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2.基本语法</span>
<span class="line">	crontab [选项]</span>
<span class="line">	功能：进行定时任务的设置</span>
<span class="line">	</span>
<span class="line">3.常用选项</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071145782.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">4.快速入门</span>
<span class="line">在/etc/下有一个crontab文件，在这个文件中写入所有的定时任务</span>
<span class="line"></span>
<span class="line">输入crontab -e  就会进入crontab文件</span>
<span class="line">然后在文件中写入定时任务：*/1 * * * * ls –l	/etc/ &gt; /tmp/to.txt</span>
<span class="line">意思说每小时的每分钟执行 ls –l /etc/ &gt; /tmp/to.txt 命令</span>
<span class="line">最后保存退出</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">参数细节说明：</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071145258.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">特定时间执行任务案例：</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071145039.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">5.应用实例</span>
<span class="line">案例 1：每隔 1 分钟，就将当前的日期信息，追加到 /tmp/mydate 文件中</span>
<span class="line">crontab -e</span>
<span class="line">*/1 * * * * date &gt;&gt; /tmp/mydate</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">案例 2：每隔 1 分钟，将当前日期和日历都追加到 /home/mycal 文件中</span>
<span class="line">第一种方法：</span>
<span class="line">	crontab -e</span>
<span class="line">	在crontab文件中输入：</span>
<span class="line">	*/1 * * * * date &gt;&gt; /home/mycal </span>
<span class="line">	*/1 * * * * cal &gt;&gt; /home/mycal </span>
<span class="line">	保存退出</span>
<span class="line"></span>
<span class="line">第二种方法：</span>
<span class="line">	将 date &gt;&gt; /home/mycal 和  cal &gt;&gt; /home/mycal 命令写在文件 /home/my.sh中</span>
<span class="line">	就是将命令都写在shell脚本中，直接调用shell脚本</span>
<span class="line"></span>
<span class="line">	步骤：</span>
<span class="line">		vim /home/my.sh</span>
<span class="line">		在my.sh中写入：</span>
<span class="line">			date &gt;&gt; /home/mycal</span>
<span class="line">			cal &gt;&gt; /home/mycal</span>
<span class="line">			:wq</span>
<span class="line">		给 my.sh 增加执行权限：chmod u+x /home/my.sh (否则无法使用crontab命令)</span>
<span class="line">		crontab -e</span>
<span class="line">		在crontab中写入：*/1 * * * *	/home/my.sh</span>
<span class="line"></span>
<span class="line">注意：可以写脚本也可以不写脚本</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">案例 3:	每天凌晨 2:00  将 mysql 数据库 testdb 备份到文件中。</span>
<span class="line">提示: 指令为 mysqldump -u root -p密码 数据库 &gt; /home/db.bak</span>
<span class="line">步骤(1) crontab -e</span>
<span class="line">步骤(2) 0 2 * * * mysqldump -u root -proot testdb &gt; /home/db.bak</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">6. crond 相关指令</span>
<span class="line">conrtab –r：终止任务调度。</span>
<span class="line">crontab –l：列出当前有那些任务调度</span>
<span class="line">service crond restart：重启任务调度</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_11-2-at定时任务" tabindex="-1"><a class="header-anchor" href="#_11-2-at定时任务"><span>11.2. at定时任务</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.基本介绍</span>
<span class="line">(1)	at 命令是一次性定时计划任务，at 的守护进程 atd 会以后台模式运行，检查作业队列来运行；</span>
<span class="line">(2) 每个作业队列(任务队列)中都有作业(作业里是指令/脚本)；</span>
<span class="line">(3)	默认情况下，atd 守护进程每 60 秒检查作业队列；</span>
<span class="line">	有作业时，会检查作业运行时间，如果时间与当前时间匹配，则运行此作业；</span>
<span class="line">	运行完这个作业(任务)之后，这个作业就不会再被执行了；</span>
<span class="line">(4)	at 命令是一次性定时计划任务，执行完一个任务后不再执行此任务了；</span>
<span class="line">(5)	在使用 at 命令的时候，一定要保证 atd 进程的启动，可以使用相关指令来查看</span>
<span class="line">	ps -ef	| grep atd //可以检测 atd 是否在运行</span>
<span class="line">	ps -ef ---&gt; 查看所有的进程	</span>
<span class="line"></span>
<span class="line">总结：at命令就是对某个定时任务只执行一次</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071145735.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2. at 命令格式</span>
<span class="line">	at [选项] [时间]</span>
<span class="line">	然后输入两次：Ctrl + D	(结束 at 命令的输入)</span>
<span class="line"></span>
<span class="line">3. at 命令选项：</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071145473.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">4. at 指定时间的方法：</span>
<span class="line"></span>
<span class="line">(1)	接受在当天的 hh:mm（小时:分钟）式的时间指定。</span>
<span class="line">	假如该时间已过去，那么就放在第二天执行。 例如：04:00</span>
<span class="line">(2)	使用 midnight（深夜），noon（中午），teatime（饮茶时间，一般是下午 4 点）等比较模糊的词语来指定时间。</span>
<span class="line">(3)	采用 12 小时计时制，即在时间后面加上 AM（上午）或 PM（下午）来说明是上午还是下午。 </span>
<span class="line">	例如：12pm</span>
<span class="line">(4)	指定命令执行的具体日期，指定格式为 month day（月 日）或 mm/dd/yy（月/日/年）或 dd.mm.yy（日.月.年），指定的日期必须跟在指定时间的后面。 </span>
<span class="line">	例如：04:00 2021-03-1 (小的时间写前面，大的时间写后面)</span>
<span class="line">(5)	使用相对计时法。</span>
<span class="line">	指定格式为：now + count time-units</span>
<span class="line">	now 就是当前时间，time-units 是时间单位，这里能够是 minutes（分钟）、hours（小时）、days（天）、weeks（星期）。</span>
<span class="line">	count 是时间的数量，几天，几小时。 </span>
<span class="line">	例如：now + 5 minutes</span>
<span class="line">(6)	直接使用 today（今天）、tomorrow（明天）来指定完成命令的时间。</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">5.应用实例</span>
<span class="line">案例 1：2 天后的下午 5 点执行 /bin/ls /home</span>
<span class="line">	at 5pm + 2 days</span>
<span class="line">	/bin/ls /home</span>
<span class="line">	两次ctrl+D</span>
<span class="line">	</span>
<span class="line">案例 2：atq 命令来查看系统中没有执行的工作任务</span>
<span class="line">	直接输入atq 查询</span>
<span class="line"></span>
<span class="line">案例 3：明天17点钟，输出时间到指定文件内 比如 /root/date100.log</span>
<span class="line">	at 5pm tomorrow</span>
<span class="line">	date &gt; /root/date100.log</span>
<span class="line">	两次ctrl+D</span>
<span class="line">	</span>
<span class="line">案例 4：2分钟后，输出时间到指定文件内 比如 /root/date200.log</span>
<span class="line">	at now + 2 minutes</span>
<span class="line">	date &gt; /root/date200.log</span>
<span class="line">	两次ctrl+D</span>
<span class="line">	</span>
<span class="line">案例 5：删除已经设置的任务</span>
<span class="line">	atrm 任务编号</span>
<span class="line">	atrm 4 //表示将 job 队列，编号为 4 的 job 删除.</span>
<span class="line"></span>
<span class="line">	atq:</span>
<span class="line">	2	Thu Feb 24 09:53:00 2022 a root</span>
<span class="line">	1	Fri Feb 25 17:00:00 2022 a root</span>
<span class="line">	第一列就是编号</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">注意：也可以执行脚本</span>
<span class="line">比如：</span>
<span class="line">	at now +2 minutes</span>
<span class="line">	/root/my.sh  </span>
<span class="line">	但要有这个脚本，并且有执行权限x</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="第十二章-linux-磁盘分区、挂载" tabindex="-1"><a class="header-anchor" href="#第十二章-linux-磁盘分区、挂载"><span>第十二章：Linux 磁盘分区、挂载</span></a></h2><h3 id="_12-1-linux-分区" tabindex="-1"><a class="header-anchor" href="#_12-1-linux-分区"><span>12.1. Linux 分区</span></a></h3><h4 id="_12-1-1-原理介绍" tabindex="-1"><a class="header-anchor" href="#_12-1-1-原理介绍"><span>12.1.1.原理介绍</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">(1) Linux 无论有几个分区，分给哪一目录使用，它归根结底就只有一个根目录，一个独立且唯一的文件结构 </span>
<span class="line">	Linux 中每个分区都是用来组成整个文件系统的一部分。</span>
<span class="line"></span>
<span class="line">(2)	Linux 采用了一种叫“载入”的处理方法，它的整个文件系统中包含了一整套的文件和目录，且将一个分区和一个目录联系起来。</span>
<span class="line">	这时要载入的一个分区将使它的存储空间在一个目录下获得。</span>
<span class="line"></span>
<span class="line">(3)图解：</span>
<span class="line">硬盘上的一个分区 通过挂载mount机制 与文件系统中的某个目录联系起来</span>
<span class="line">即分区挂载到目录</span>
<span class="line">访问这个目录即访问这个分区</span>
<span class="line">可以通过指令查看挂载情况，下面会说。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071145499.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_12-1-2-硬盘说明" tabindex="-1"><a class="header-anchor" href="#_12-1-2-硬盘说明"><span>12.1.2.硬盘说明</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">(1)	Linux 硬盘主要分为：</span>
<span class="line">	 IDE 硬盘和 SCSI 硬盘</span>
<span class="line">	 目前基本上是 SCSI 硬盘</span>
<span class="line"></span>
<span class="line">(2)	对于 IDE 硬盘，驱动器标识符为“hdx~”</span>
<span class="line">	其中“hd”表明分区所在设备的类型，这里是指 IDE 硬盘</span>
<span class="line">	</span>
<span class="line">	“x”为盘号</span>
<span class="line">		a 为基本盘 第一个硬盘</span>
<span class="line">		b 为基本从属盘 第二个硬盘</span>
<span class="line">		c 为辅助主盘 第三个硬盘</span>
<span class="line">		d 为辅助从属盘 第四个硬盘</span>
<span class="line">		</span>
<span class="line">	“~”代表分区</span>
<span class="line">		前四个分区用数字 1 到 4 表示，它们是主分区或扩展分区，从 5 开始就是逻辑分区</span>
<span class="line">	</span>
<span class="line">	例：hda3 表示为第一个 IDE 硬盘上的第三个主分区或扩展分区</span>
<span class="line">	     hdb2 表示为第二个 IDE 硬盘上的第二个主分区或扩展分区</span>
<span class="line">	     </span>
<span class="line">(3)	对于 SCSI 硬盘则标识为“sdx~”</span>
<span class="line">	SCSI 硬盘是用“sd”来表示分区所在设备的类型的，其余则和 IDE 硬盘的表示方法一样</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_12-1-3-查看所有设备挂载情况" tabindex="-1"><a class="header-anchor" href="#_12-1-3-查看所有设备挂载情况"><span>12.1.3.查看所有设备挂载情况</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">命令 ：lsblk	或者 lsblk -f</span>
<span class="line"></span>
<span class="line">lsblk：list block devices </span>
<span class="line"></span>
<span class="line">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span>
<span class="line">sda      8:0    0   20G  0 disk </span>
<span class="line">├─sda1   8:1    0    1G  0 part /boot</span>
<span class="line">├─sda2   8:2    0    2G  0 part [SWAP]</span>
<span class="line">└─sda3   8:3    0   17G  0 part /</span>
<span class="line">sr0     11:0    1  4.3G  0 rom </span>
<span class="line"></span>
<span class="line">sda1分区挂载到/boot目录</span>
<span class="line">sda2分区挂载到swap目录</span>
<span class="line">sda3分区挂载到根目录</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">lsblk -f (更加详细的显示)</span>
<span class="line"></span>
<span class="line">NAME   FSTYPE  LABEL           UUID                                 MOUNTPOINT</span>
<span class="line">sda                                                                 </span>
<span class="line">├─sda1 ext4                    bd7b7249-b3fa-434f-acfd-5127a56c0673 /boot</span>
<span class="line">├─sda2 swap                    4381675a-652c-4ffa-9a9d-cb23d19be79b [SWAP]</span>
<span class="line">└─sda3 ext4                    531c2867-a7e9-4ae7-8f79-4453ceb76c5b /</span>
<span class="line">sr0    iso9660 CentOS 7 x86_64 2018-11-25-23-54-16-00    </span>
<span class="line"></span>
<span class="line">第一列可以看到设备/硬盘分区情况</span>
<span class="line">FSTYPE:文件系统类型</span>
<span class="line">UUID:格式化之后，会给每一个分区分配一个 唯一的 不重复的 40位 的 字符串</span>
<span class="line">MOUNTPOINT:挂载点</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_12-2-挂载的经典案例" tabindex="-1"><a class="header-anchor" href="#_12-2-挂载的经典案例"><span>12.2.挂载的经典案例</span></a></h3><h4 id="_12-2-1-说明" tabindex="-1"><a class="header-anchor" href="#_12-2-1-说明"><span>12.2.1.说明</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">下面我们以增加一块硬盘为例来熟悉一下磁盘的相关指令和深入理解磁盘分区、挂载、卸载的概念。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_12-2-2-如何增加一块硬盘" tabindex="-1"><a class="header-anchor" href="#_12-2-2-如何增加一块硬盘"><span>12.2.2.如何增加一块硬盘</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1)	虚拟机添加硬盘</span>
<span class="line">2)	分区</span>
<span class="line">3)	格式化</span>
<span class="line">4)	挂载</span>
<span class="line">5)	设置可以自动挂载</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_12-2-3-虚拟机增加硬盘步骤-1-虚拟机添加硬盘" tabindex="-1"><a class="header-anchor" href="#_12-2-3-虚拟机增加硬盘步骤-1-虚拟机添加硬盘"><span>12.2.3.虚拟机增加硬盘步骤 1-虚拟机添加硬盘</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">在【虚拟机】菜单中选择【设置】</span>
<span class="line">然后设备列表里添加硬盘</span>
<span class="line">然后一路【下一步】</span>
<span class="line">中间只有选择磁盘大小的地方需要修改，至到完成</span>
<span class="line"></span>
<span class="line">使用命令lsblk发现没有新增的硬盘？</span>
<span class="line">	需要重启系统（才能识别）</span>
<span class="line"></span>
<span class="line">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span>
<span class="line">sda      8:0    0   20G  0 disk </span>
<span class="line">├─sda1   8:1    0    1G  0 part /boot</span>
<span class="line">├─sda2   8:2    0    2G  0 part [SWAP]</span>
<span class="line">└─sda3   8:3    0   17G  0 part /</span>
<span class="line">sdb      8:16   0    1G  0 disk </span>
<span class="line">sr0     11:0    1  4.3G  0 rom  </span>
<span class="line">新增硬盘sdb，还未分区。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_12-2-4-虚拟机增加硬盘步骤-2-分区" tabindex="-1"><a class="header-anchor" href="#_12-2-4-虚拟机增加硬盘步骤-2-分区"><span>12.2.4 虚拟机增加硬盘步骤 2-分区</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">对sdb进行分区：</span>
<span class="line"></span>
<span class="line">分区命令：fdisk /dev/sdb   (dev目录下是一些设备)</span>
<span class="line">步骤：</span>
<span class="line">	开始分区后输入 n  (新增分区)</span>
<span class="line">	然后选择 p     	(分区类型为主分区)</span>
<span class="line">	两次回车</span>
<span class="line">	最后输入 w  (写入分区并退出)(若不保存并退出输入 q，即上面步骤出错了想重来就可以输入q)</span>
<span class="line"></span>
<span class="line">说明：</span>
<span class="line">	m	显示命令列表           </span>
<span class="line">	p	显示磁盘分区 (同 fdisk –l) </span>
<span class="line">	n	新增分区</span>
<span class="line">	d	删除分区</span>
<span class="line">	w	写入并退出</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">命令(输入 m 获取帮助)：m</span>
<span class="line">命令操作</span>
<span class="line">   a   toggle a bootable flag</span>
<span class="line">   b   edit bsd disklabel</span>
<span class="line">   c   toggle the dos compatibility flag</span>
<span class="line">   d   delete a partition</span>
<span class="line">   g   create a new empty GPT partition table</span>
<span class="line">   G   create an IRIX (SGI) partition table</span>
<span class="line">   l   list known partition types</span>
<span class="line">   m   print this menu</span>
<span class="line">   n   add a new partition</span>
<span class="line">   o   create a new empty DOS partition table</span>
<span class="line">   p   print the partition table</span>
<span class="line">   q   quit without saving changes</span>
<span class="line">   s   create a new empty Sun disklabel</span>
<span class="line">   t   change a partition&#39;s system id</span>
<span class="line">   u   change display/entry units</span>
<span class="line">   v   verify the partition table</span>
<span class="line">   w   write table to disk and exit</span>
<span class="line">   x   extra functionality (experts only)</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">选择分区类型：主分区/扩展分区</span>
<span class="line">命令(输入 m 获取帮助)：n</span>
<span class="line">Partition type:</span>
<span class="line">   p   primary (0 primary, 0 extended, 4 free)</span>
<span class="line">   e   extended</span>
<span class="line">Select (default p): p</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">分区号 (1-4，默认 1)：                  ---&gt;输入2，硬盘就有2个分区</span>
<span class="line">起始 扇区 (2048-2097151，默认为 2048)：</span>
<span class="line">将使用默认值 2048</span>
<span class="line">Last 扇区, +扇区 or +size{K,M,G} (2048-2097151，默认为 2097151)：</span>
<span class="line">将使用默认值 2097151</span>
<span class="line">分区 1 已设置为 Linux 类型，大小设为 1023 MiB</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">命令(输入 m 获取帮助)：w</span>
<span class="line">The partition table has been altered!</span>
<span class="line"></span>
<span class="line">Calling ioctl() to re-read partition table.</span>
<span class="line">正在同步磁盘。</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">lsblk</span>
<span class="line">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span>
<span class="line">sda      8:0    0   20G  0 disk </span>
<span class="line">├─sda1   8:1    0    1G  0 part /boot</span>
<span class="line">├─sda2   8:2    0    2G  0 part [SWAP]</span>
<span class="line">└─sda3   8:3    0   17G  0 part /</span>
<span class="line">sdb      8:16   0    1G  0 disk </span>
<span class="line">└─sdb1   8:17   0 1023M  0 part </span>
<span class="line">sr0     11:0    1  4.3G  0 rom  </span>
<span class="line">分区成功</span>
<span class="line">硬盘sdb中只有一个分区sdb1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_12-2-5-虚拟机增加硬盘步骤-3-格式化" tabindex="-1"><a class="header-anchor" href="#_12-2-5-虚拟机增加硬盘步骤-3-格式化"><span>12.2.5 虚拟机增加硬盘步骤 3-格式化</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">格式化磁盘</span>
<span class="line"></span>
<span class="line">为什么要格式化？</span>
<span class="line">	给这个分区指定它的文件类型</span>
<span class="line"></span>
<span class="line">[root@Edu01 ~]# lsblk -f</span>
<span class="line">NAME   FSTYPE  LABEL           UUID                                 MOUNTPOINT</span>
<span class="line">sda                                                                 </span>
<span class="line">├─sda1 ext4                    bd7b7249-b3fa-434f-acfd-5127a56c0673 /boot</span>
<span class="line">├─sda2 swap                    4381675a-652c-4ffa-9a9d-cb23d19be79b [SWAP]</span>
<span class="line">└─sda3 ext4                    531c2867-a7e9-4ae7-8f79-4453ceb76c5b /</span>
<span class="line">sdb                                                                 </span>
<span class="line">└─sdb1                                                              </span>
<span class="line">sr0    iso9660 CentOS 7 x86_64 2018-11-25-23-54-16-00    </span>
<span class="line"></span>
<span class="line">sdb1的UUID为空，说明还没有格式化。</span>
<span class="line"></span>
<span class="line">格式化命令:</span>
<span class="line">	mkfs -t	ext4 /dev/sdb1 		其中 ext4 是分区类型</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_12-2-6-虚拟机增加硬盘步骤-4-挂载" tabindex="-1"><a class="header-anchor" href="#_12-2-6-虚拟机增加硬盘步骤-4-挂载"><span>12.2.6.虚拟机增加硬盘步骤 4-挂载</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">挂载: 将一个分区与一个目录联系起来，</span>
<span class="line">	命令：mount 设备名称 挂载目录</span>
<span class="line"></span>
<span class="line">首先创建一个目录newdisk (目录位置随便)</span>
<span class="line">假如在根目录下创建：mkdir newdisk</span>
<span class="line">进行挂载：mount /dev/sdb1 /newdisk</span>
<span class="line"></span>
<span class="line">NAME   FSTYPE  LABEL           UUID                                 MOUNTPOINT</span>
<span class="line">sda                                                                 </span>
<span class="line">├─sda1 ext4                    bd7b7249-b3fa-434f-acfd-5127a56c0673 /boot</span>
<span class="line">├─sda2 swap                    4381675a-652c-4ffa-9a9d-cb23d19be79b [SWAP]</span>
<span class="line">└─sda3 ext4                    531c2867-a7e9-4ae7-8f79-4453ceb76c5b /</span>
<span class="line">sdb                                                                 </span>
<span class="line">└─sdb1 ext4                    d1856552-dee4-4fbc-9953-f650231ecaac /newdisk</span>
<span class="line">sr0    iso9660 CentOS 7 x86_64 2018-11-25-23-54-16-00  </span>
<span class="line">挂载点有了，挂载成功。</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">卸载(去除分区与目录的联系)：</span>
<span class="line">	命令：umount	设备名称 或者	挂载目录</span>
<span class="line">	例如：umount	/dev/sdb1 或者 umount /newdisk</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">注意: 用命令行挂载,重启后会失效。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_12-2-7-虚拟机增加硬盘步骤-5-设置可以自动挂载" tabindex="-1"><a class="header-anchor" href="#_12-2-7-虚拟机增加硬盘步骤-5-设置可以自动挂载"><span>12.2.7.虚拟机增加硬盘步骤 5-设置可以自动挂载</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">解决  用命令行挂载,重启后会失效 问题</span>
<span class="line"></span>
<span class="line">永久挂载: </span>
<span class="line">	通过修改/etc/fstab 实现挂载</span>
<span class="line">	添加完成后 执行 mount	–a 即刻生效 或者 重启系统reboot</span>
<span class="line"></span>
<span class="line">步骤：</span>
<span class="line">vim /etc/fstab</span>
<span class="line">增加一行：UUID=上面sdb1的UUID    /newdisk    ext4    defaults     0 0</span>
<span class="line">也可以是：/dev/sdb1    		  /newdisk    ext4    defaults     0 0</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">要挂载的设备或伪文件系统  挂载点  文件系统类型  挂载选项 转储频率 自检次序</span>
<span class="line">UUID=上面sdb1的UUID   /newdisk    ext4    defaults   0 	   0</span>
<span class="line"></span>
<span class="line">要挂载的设备或伪文件系统：</span>
<span class="line">	设备文件、LABEL(LABEL=&quot;&quot;)、UUID(UUID=&quot;&quot;)、伪文件系统名称(proc, sysfs)</span>
<span class="line"></span>
<span class="line">挂载点：指定的文件夹</span>
<span class="line"></span>
<span class="line">挂载选项：defaults</span>
<span class="line"></span>
<span class="line">转储频率：</span>
<span class="line">  0：不做备份</span>
<span class="line">  1：每天转储</span>
<span class="line">  2：每隔一天转储</span>
<span class="line"></span>
<span class="line">自检次序：</span>
<span class="line">  0：不自检</span>
<span class="line">  1：首先自检；一般只有rootfs才用1；</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_12-3-磁盘情况查询" tabindex="-1"><a class="header-anchor" href="#_12-3-磁盘情况查询"><span>12.3.磁盘情况查询</span></a></h3><h4 id="_12-3-1-查询系统整体磁盘使用情况" tabindex="-1"><a class="header-anchor" href="#_12-3-1-查询系统整体磁盘使用情况"><span>12.3.1.查询系统整体磁盘使用情况</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">基本语法:</span>
<span class="line">	df -h   (disk free)</span>
<span class="line"></span>
<span class="line">查询系统整体磁盘使用情况</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_12-3-2-查询指定目录的磁盘占用情况" tabindex="-1"><a class="header-anchor" href="#_12-3-2-查询指定目录的磁盘占用情况"><span>12.3.2.查询指定目录的磁盘占用情况</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">基本语法：</span>
<span class="line">	du -h  指定目录    (disk usage)</span>
<span class="line">功能：查询指定目录的磁盘占用情况，默认为当前目录</span>
<span class="line">	-s 指定目录占用大小汇总</span>
<span class="line">	-h 带计量单位</span>
<span class="line">	-a 含文件</span>
<span class="line">	--max-depth=1	子目录深度</span>
<span class="line">	-c 列出明细的同时，增加汇总值</span>
<span class="line"></span>
<span class="line">应用实例</span>
<span class="line">查询 /opt 目录的磁盘占用情况，深度为 1</span>
<span class="line">	du -hac --max-depth=1 /opt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_12-4-磁盘情况-工作实用指令" tabindex="-1"><a class="header-anchor" href="#_12-4-磁盘情况-工作实用指令"><span>12.4.磁盘情况-工作实用指令</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1. 统计/opt 文件夹下文件的个数</span>
<span class="line">	ls -l /opt | grep &quot;^-&quot; | wc -l</span>
<span class="line"></span>
<span class="line">	说明：</span>
<span class="line">		grep &quot;^-&quot; ---&gt;筛选出以-开头的，因为以-开头的都是文件</span>
<span class="line">		wc (word count) 统计数量</span>
<span class="line">			wc -l 统计行数 l即lines</span>
<span class="line">			统计grep筛选后的行数即文件个数</span>
<span class="line"></span>
<span class="line">2. 统计/opt 文件夹下目录的个数</span>
<span class="line">	ls -l /opt | grep &quot;^d&quot; | wc -l</span>
<span class="line"></span>
<span class="line">3. 统计/opt 文件夹下文件的个数，包括子文件夹里的</span>
<span class="line">	ls -lR /opt | grep &quot;^-&quot; | wc -l</span>
<span class="line">		-R 递归列出遇到的子目录</span>
<span class="line"></span>
<span class="line">4. 统计/opt 文件夹下目录的个数，包括子文件夹里的</span>
<span class="line">	ls -lR /opt | grep &quot;^d&quot; | wc -l</span>
<span class="line"></span>
<span class="line">5. 以树状显示目录结构 </span>
<span class="line"> 	指令：tree 目录 </span>
<span class="line"> 	默认情况下没有tree指令</span>
<span class="line"> 	如果没有 tree ,则使用 yum install tree 指令安装</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="第十三章-网络配置" tabindex="-1"><a class="header-anchor" href="#第十三章-网络配置"><span>第十三章：网络配置</span></a></h2><h3 id="_13-1-linux-网络配置原理图" tabindex="-1"><a class="header-anchor" href="#_13-1-linux-网络配置原理图"><span>13.1. Linux 网络配置原理图</span></a></h3><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071146701.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.通过ifconfig指令查看Linux虚拟机的ip地址</span>
<span class="line">	192.168.2.131</span>
<span class="line">2.然后在本机DOS命令窗口输入指令ipconfig，查看vmnet8的ip地址</span>
<span class="line">	192.168.2.1</span>
<span class="line">	上两个在同一网段，所以可以通信。</span>
<span class="line">	</span>
<span class="line">3.由第二步骤可以得到本机的无线网络适配器(无线网卡)的ip地址</span>
<span class="line">	192.168.101.8</span>
<span class="line"></span>
<span class="line">为什么Linux虚拟机可以连外网(比如打开百度)？</span>
<span class="line">	Linux虚拟机---&gt;本机vmnet8---&gt;本机无线网卡---&gt;教室局域网网关---&gt;外网	</span>
<span class="line"></span>
<span class="line">每次开机linux虚拟机的ip地址不一定相同</span>
<span class="line">linux虚拟机的ip地址可以设置</span>
<span class="line"></span>
<span class="line">以下：如何编辑虚拟机的网络和修改其ip地址？</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_13-2-查看网络ip和网关" tabindex="-1"><a class="header-anchor" href="#_13-2-查看网络ip和网关"><span>13.2.查看网络IP和网关</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">vmware---&gt;编辑---&gt;虚拟网络编辑器</span>
<span class="line">这样就可以查看和修改虚拟网络vmnet8的ip地址和网关</span>
<span class="line"></span>
<span class="line">通过本机DOS命令窗口，输入指令：ipconfig</span>
<span class="line">	查看vmnet8的网络配置</span>
<span class="line"></span>
<span class="line">在xshell或linux终端输入命令：ifconfig</span>
<span class="line">	查看 linux 的网络配置</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">ping命令 测试主机之间网络连通性</span>
<span class="line">	基本语法：</span>
<span class="line">		ping 目的主机 （功能描述：测试当前服务器是否可以连接目的主机）</span>
<span class="line"></span>
<span class="line">应用实例</span>
<span class="line">	测试当前服务器是否可以连接百度</span>
<span class="line">	ping www.baidu.com</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_13-3-linux-网络环境配置" tabindex="-1"><a class="header-anchor" href="#_13-3-linux-网络环境配置"><span>13.3. linux 网络环境配置</span></a></h3><h4 id="_13-3-1-第一种方法-自动获取ip" tabindex="-1"><a class="header-anchor" href="#_13-3-1-第一种方法-自动获取ip"><span>13.3.1.第一种方法(自动获取ip)：</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">登陆后，通过界面设置自动获取ip</span>
<span class="line">	应用程序---&gt;系统工---&gt;设置---&gt;网络---&gt;小齿轮---&gt;IPV4</span>
<span class="line">特点：linux 启动后会自动获取 IP，可以避免ip冲突</span>
<span class="line">缺点：每次自动获取的 ip 地址可能不一样，但是作为服务器ip地址不能变。</span>
<span class="line"></span>
<span class="line">工作时，一般将Linux的ip地址手动设定，不改变。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_13-3-2-第二种方法-手动设置ip" tabindex="-1"><a class="header-anchor" href="#_13-3-2-第二种方法-手动设置ip"><span>13.3.2.第二种方法(手动设置ip)</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">手动指定linux的ip地址，使其不变化。</span>
<span class="line"></span>
<span class="line">直接修改配置文件来指定 IP,并可以连接到外网(程序员推荐)</span>
<span class="line">关于网络的配置文件在：/etc/sysconfig/network-scripts/ifcfg-ens33</span>
<span class="line"></span>
<span class="line">要求：将ip地址配置为静态的(不变的)，比如: ip 地址为 192.168.200.130</span>
<span class="line"></span>
<span class="line">输入指令：vim /etc/sysconfig/network-scripts/ifcfg-ens33</span>
<span class="line">修改文件内容：</span>
<span class="line">	BOOTPROTO=&quot;static&quot;</span>
<span class="line">	加上：</span>
<span class="line">		IPADDR=192.168.200.130   (IP地址,自己设定的)</span>
<span class="line">		GATEWAY=192.168.200.2	 (网关,自己设定的)</span>
<span class="line">		DNS1=192.168.200.2		 (域名解析器,自己设定的)</span>
<span class="line"></span>
<span class="line">下一步：vmnet8和Linux在同一网段上，要能够通信，也要修改相应的vmnet8</span>
<span class="line">vmware---&gt;编辑---&gt;虚拟网络编辑器</span>
<span class="line">打开虚拟编辑器，点击vmnet8，修改下面的子网ip为：192.168.200.0</span>
<span class="line">然后点击NAT设置，将网关改为192.168.200.2</span>
<span class="line"></span>
<span class="line">应用确定</span>
<span class="line"></span>
<span class="line">输入指令：service network restart 或 reboot  使上述修改生效</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_13-4-设置linux系统的主机名和-hosts-映射" tabindex="-1"><a class="header-anchor" href="#_13-4-设置linux系统的主机名和-hosts-映射"><span>13.4.设置Linux系统的主机名和 hosts 映射</span></a></h3><h4 id="_13-4-1-设置主机名" tabindex="-1"><a class="header-anchor" href="#_13-4-1-设置主机名"><span>13.4.1.设置主机名</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">Linux系统的主机名相当于其ip地址，起一个主机名是因为ip地址不好记忆，不方便。</span>
<span class="line">也可以修改主机名。</span>
<span class="line"></span>
<span class="line">查看当前主机的主机名指令：hostname</span>
<span class="line"></span>
<span class="line">主机名放在/etc/hostname文件中，要修改主机名即修改文件内容：</span>
<span class="line">	输入指令：</span>
<span class="line">		vim /etc/hostname</span>
<span class="line">		修改内容</span>
<span class="line">		:wq</span>
<span class="line">		重启系统</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_13-4-2-设置-hosts-映射" tabindex="-1"><a class="header-anchor" href="#_13-4-2-设置-hosts-映射"><span>13.4.2.设置 hosts 映射</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">在Windows中，如何通过 主机名 找到(比如 ping) 某个 linux 系统?</span>
<span class="line"></span>
<span class="line">	修改ip地址与主机名的映射关系：</span>
<span class="line">		在windows C:\\Windows\\System32\\drivers\\etc\\hosts 文件中</span>
<span class="line">		指定Linux系统的ip地址与主机名的映射关系</span>
<span class="line">			格式：linux系统ip地址 linux系统主机名</span>
<span class="line">			如指定为: 192.168.200.130 hspedu100 (这行代码添加到文件中就行了)</span>
<span class="line">		</span>
<span class="line">		ping hspedu100 ----&gt;就会去该文件中找相应的ip地址</span>
<span class="line">	</span>
<span class="line">	</span>
<span class="line">那么，如果也想在Linux系统中，使用主机名 来 ping 某个Windows系统，怎么做？</span>
<span class="line">	在 linux 系统的 /etc/hosts 文件中 指定</span>
<span class="line">	如指定为: 192.168.200.1 ThinkPad-PC</span>
<span class="line">	这样就可以 ping ThinkPad-PC</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_13-5-主机名解析过程分析-hosts、dns" tabindex="-1"><a class="header-anchor" href="#_13-5-主机名解析过程分析-hosts、dns"><span>13.5.主机名解析过程分析(hosts、DNS)</span></a></h3><h4 id="_13-5-1-hosts" tabindex="-1"><a class="header-anchor" href="#_13-5-1-hosts"><span>13.5.1. hosts</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">hosts是一个文本文件，用来记录 IP 和 Hostname(主机名)的映射关系</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_13-5-2-dns" tabindex="-1"><a class="header-anchor" href="#_13-5-2-dns"><span>13.5.2. DNS</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">DNS  Domain Name System 域名系统</span>
<span class="line">是互联网上作为域名和 IP 地址相互映射的一个分布式数据库</span>
<span class="line"></span>
<span class="line">为什么可以通过主机名访问？</span>
<span class="line">	通过DNS域名解析系统，将主机名解析为ip地址，实际上还是用的ip地址。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_13-5-3-应用实例" tabindex="-1"><a class="header-anchor" href="#_13-5-3-应用实例"><span>13.5.3.应用实例</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">用户在浏览器输入了www.baidu.com</span>
<span class="line"></span>
<span class="line">1.浏览器先检查浏览器缓存中有没有该域名解析 IP 地址，有就先调用这个 IP 完成解析；</span>
<span class="line">	如果没有，就检查 DNS 解析器缓存，如果有直接返回 IP 完成解析。</span>
<span class="line">	这两个缓存，可以理解为 本地解析器缓存</span>
<span class="line"></span>
<span class="line">DNS 解析器缓存：</span>
<span class="line">一般来说，当电脑第一次成功访问某一网站后，在一定时间内，浏览器或操作系统会缓存他的 IP 地址（DNS 解析记录）</span>
<span class="line">	如在 cmd 窗口中输入</span>
<span class="line">	ipconfig /displaydns	//DNS 域名解析缓存</span>
<span class="line">	ipconfig /flushdns	//手动清理 dns 缓存</span>
<span class="line"></span>
<span class="line">2. 如果本地解析器缓存没有找到对应映射，检查系统中 hosts 文件中有没有配置对应的域名 IP 映射，如果有，则完成解析并返回。</span>
<span class="line"></span>
<span class="line">3. 如果本地 DNS 解析器缓存 和 hosts 文件 中均没有找到对应的 IP，则到域名服务器找</span>
<span class="line">4. 还找不到，就没有了。</span>
<span class="line"></span>
<span class="line">示意图:</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071146638.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="第十四章-进程管理-重点" tabindex="-1"><a class="header-anchor" href="#第十四章-进程管理-重点"><span>第十四章：进程管理(重点)</span></a></h2><h3 id="_14-1-基本介绍" tabindex="-1"><a class="header-anchor" href="#_14-1-基本介绍"><span>14.1.基本介绍</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">(1)在 LINUX 中，每个执行的程序都称为一个进程。每一个进程都分配一个 ID 号(pid,进程号)。</span>
<span class="line">程序执行之后加载到内存中成为进程。程序是静态的，进程是动态的。</span>
<span class="line"></span>
<span class="line">(2)每个进程都可能以两种方式存在：</span>
<span class="line">	前台与后台</span>
<span class="line">	前台进程：是用户目前的屏幕上可以进行操作的。</span>
<span class="line">	后台进程：是实际在操作的，但屏幕上无法看到，通常使用后台方式执行。</span>
<span class="line"></span>
<span class="line">(3)一般系统的服务都是以后台进程的方式存在，而且都会常驻在系统中，直到关机才结束。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_14-2-ps命令-显示系统正在执行的进程" tabindex="-1"><a class="header-anchor" href="#_14-2-ps命令-显示系统正在执行的进程"><span>14.2. ps命令：显示系统正在执行的进程</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.基本介绍：</span>
<span class="line">	ps命令是用来查看目前系统中，有哪些进程正在执行，以及它们执行的状况。</span>
<span class="line">	可以不加任何参数。</span>
<span class="line"></span>
<span class="line">语法：</span>
<span class="line">	ps [选项]    Process Status</span>
<span class="line">	选项：</span>
<span class="line">		-a		显示当前终端的所有进程信息</span>
<span class="line">		-u		以用户的格式显示进程信息</span>
<span class="line">		-x		显示后台程序运行的参数</span>
<span class="line"></span>
<span class="line">一般三个选项一起用：</span>
<span class="line">	ps -aux</span>
<span class="line">	</span>
<span class="line">	显示出如下内容：</span>
<span class="line">		USER 			 执行进程用户名称  </span>
<span class="line">		PID 		     进程号</span>
<span class="line">		%CPU          	 进程占用CPU百分比</span>
<span class="line">		%MEM    	 	 进程占用物理内存的百分比</span>
<span class="line">		VSZ     		 进程占用的虚拟内存大小（单位：KB）</span>
<span class="line">		RSS 		 	 进程占用的物理内存大小（单位：KB）</span>
<span class="line">		TTY     		 终端名称(有时缩写)</span>
<span class="line">		STAT             进程状态：</span>
<span class="line">							 S-睡眠</span>
<span class="line">							 s-表示该进程是会话的先导进程</span>
<span class="line">							 N-表示进程拥有比普通优先级更低的优先级</span>
<span class="line">							 R-正在运行</span>
<span class="line">							 D-短期等待</span>
<span class="line">							 Z-僵死进程</span>
<span class="line">							 T-被跟踪或者被停止等等</span>
<span class="line">		START            进程执行的开始时间</span>
<span class="line">		TIME             CPU 时间，即进程使用 CPU 的总时间</span>
<span class="line">		COMMAND     	 启动进程所用的命令和参数，如果过长会被截断显示</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">上述命令将所有进程显示出来，若只想查找某一个进程：</span>
<span class="line">	指令：ps –aux|grep xxx  </span>
<span class="line">		比如查找 sshd 进程：ps -aux | grep sshd</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">应用实例：</span>
<span class="line">	要求：以全格式显示当前所有的进程，查看进程的父进程。 </span>
<span class="line"></span>
<span class="line">父进程：一个进程可以生成多个子进程，该进程称为父进程。</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">查看 sshd 的父进程信息：</span>
<span class="line">	知道一个父进程的pid就可以知道它的信息。</span>
<span class="line">	</span>
<span class="line">ps -ef 是以全格式显示当前所有的进程。-e 显示所有进程。-f 全格式。</span>
<span class="line"></span>
<span class="line">ps -ef 指令显示内容如下： </span>
<span class="line">	UID         用户ID</span>
<span class="line">	PID   		进程ID</span>
<span class="line">	PPID  		父进程ID             </span>
<span class="line">	C 			CPU 用于计算执行优先级的因子。</span>
<span class="line">					数值越大，表明进程是 CPU 密集型运算，执行优先级会降低；</span>
<span class="line">					数值越小，表明进程是 I/O 密集型运算，执行优先级会提高</span>
<span class="line">	STIME    	进程启动的时间</span>
<span class="line">	TTY         完整的终端名称</span>
<span class="line">	TIME        CPU 使用时间</span>
<span class="line">	CMD    		启动进程所用的命令和参数</span>
<span class="line"></span>
<span class="line">输入：ps -ef | grep sshd</span>
<span class="line">得到第三列为1，即父进程ID=1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_14-3-kill-和-killall指令-终止进程" tabindex="-1"><a class="header-anchor" href="#_14-3-kill-和-killall指令-终止进程"><span>14.3. kill 和 killall指令：终止进程</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.介绍:</span>
<span class="line">若是某个进程执行一半需要停止时，或是已经消耗了很大的系统资源时，此时可以考虑停止该进程。</span>
<span class="line">使用 kill 命令来完成此项任务。</span>
<span class="line"></span>
<span class="line">2.基本语法：</span>
<span class="line">kill [选项] 进程号	（功能描述：通过进程号杀死/终止进程）</span>
<span class="line">killall 进程名称	    （功能描述：通过进程名称杀死进程，也支持通配符，这在系统因负载过大而变得很慢时很有用）</span>
<span class="line">					 使用killall，会将该进程的所有子进程也都删除/终止。</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">3.常用选项：</span>
<span class="line">	-9   表示强制终止进程</span>
<span class="line">		 (系统觉得某个程序重要，可能会屏蔽你的kill指令，这时使用选项-9强制终止进程)</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">4.案例：</span>
<span class="line">案例 1：踢掉某个非法登录用户</span>
<span class="line">kill 进程号 </span>
<span class="line">比如 kill 11421</span>
<span class="line"></span>
<span class="line">假如使用tom登录，然后在图形界面打开终端写代码</span>
<span class="line">假设认为tom是个非法用户，要踢掉它</span>
<span class="line">先在图形界面写代码：ps -aux | grep sshd</span>
<span class="line">sshd 是记载远程连接服务的配置文件</span>
<span class="line">上述指令显示出了，远程登录的进程信息，从中看到了tom登录的进程的进程号11421</span>
<span class="line">所以 kill 11421  这样tom就下线了！</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">案例 2：终止远程登录服务 sshd, 在适当时候再次重启 sshd 服务</span>
<span class="line">sshd ---&gt; secure shell</span>
<span class="line"></span>
<span class="line">首先查看 sshd 对应的进程号：</span>
<span class="line">	使用命令：ps -aux | grep sshd</span>
<span class="line">	有 /user/sbin/sshd 的那个进程就是 sshd 服务进程 进程号10748</span>
<span class="line">	终止 sshd 之后，就无法在xshell远程登陆了！</span>
<span class="line">	</span>
<span class="line">重启 sshd 服务指令：</span>
<span class="line">	/bin/systemctl start 服务名称</span>
<span class="line">	/bin/systemctl start sshd.service</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">案例 3：终止多个 gedit (文本编辑器)</span>
<span class="line">在Linux桌面，主文件夹中，打开多个文本，然后使用killall 可以同时关闭所有打开的文本</span>
<span class="line">killall	gedit</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">案例 4：强制杀掉一个终端</span>
<span class="line">	在Linux系统桌面打开两个终端，bash即代表终端进程</span>
<span class="line">	在一个终端中输入指令强制关闭另一个终端</span>
<span class="line">	首先：查看终端进程的进程号：ps -aux | grep bash</span>
<span class="line">	得到对应的进程号，输入：kill -9  对应的进程号</span>
<span class="line"></span>
<span class="line">	也可以终端自己终止自己</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_14-4-查看进程树-pstree" tabindex="-1"><a class="header-anchor" href="#_14-4-查看进程树-pstree"><span>14.4.查看进程树 pstree</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.基本语法：pstree [选项] </span>
<span class="line">功能：可以更加直观的来看进程信息(树的形式)</span>
<span class="line"></span>
<span class="line">2.常用选项：</span>
<span class="line">-p :显示进程的 PID (父进程ID)</span>
<span class="line">-u :显示进程的所属用户</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">3.应用实例：</span>
<span class="line">案例 1：用树状的形式显示进程的pid(进程号)</span>
<span class="line">pstree -p</span>
<span class="line"></span>
<span class="line">案例 2：用树状的形式显示进程的用户</span>
<span class="line">pstree -u</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_14-5-服务-service-管理" tabindex="-1"><a class="header-anchor" href="#_14-5-服务-service-管理"><span>14.5.服务(service)管理</span></a></h3><h4 id="_14-5-1-介绍" tabindex="-1"><a class="header-anchor" href="#_14-5-1-介绍"><span>14.5.1.介绍</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">服务(service) 本质就是进程，但是是运行在后台的，</span>
<span class="line">通常都会监听某个端口，等待其它程序的请求，比如(mysqld , sshd防火墙等)，</span>
<span class="line">因此我们又称为守护进程，是 Linux 中非常重要的知识点。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_14-5-2-service-管理指令" tabindex="-1"><a class="header-anchor" href="#_14-5-2-service-管理指令"><span>14.5.2. service 管理指令</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">(1)	service	服务名 [start | stop | restart | reload | status]</span>
<span class="line">start 	开启服务</span>
<span class="line">stop 	终止服务</span>
<span class="line">restart 重启服务</span>
<span class="line">reload 	重载服务</span>
<span class="line">status 	查看服务的状态</span>
<span class="line"></span>
<span class="line">(2)	在 CentOS7.0 后很多服务不再使用 service指令管理,而是使用 systemctl (后面专门讲)</span>
<span class="line"></span>
<span class="line">(3)	还有一些在 /etc/init.d 下的服务仍使用 service 指令管理</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">案例：</span>
<span class="line">请使用 service 指令，查看，关闭，启动 network</span>
<span class="line">[注意：在虚拟系统打开终端演示，因为网络连接会关闭]</span>
<span class="line">指令:</span>
<span class="line">	service network status </span>
<span class="line">	service network stop </span>
<span class="line">	service network start</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_14-5-3-查看服务名方式" tabindex="-1"><a class="header-anchor" href="#_14-5-3-查看服务名方式"><span>14.5.3.查看服务名方式</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">方式 1：直接输入 setup 即可看到所有服务</span>
<span class="line">其中前面带 * 的服务会随着Linux系统的启动而自动启动。</span>
<span class="line"></span>
<span class="line">方式 2:	ls -l /etc/init.d</span>
<span class="line">只能看到部分服务：还有一些在 /etc/init.d 下的服务仍使用 service 指令管理</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_14-5-4-服务的运行级别-runlevel" tabindex="-1"><a class="header-anchor" href="#_14-5-4-服务的运行级别-runlevel"><span>14.5.4.服务的运行级别(runlevel)</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">Linux 系统有 7 种运行级别(runlevel)：常用的是级别 3 和 5</span>
<span class="line"></span>
<span class="line">运行级别 0：系统停机状态，系统默认运行级别不能设为 0，否则不能正常启动</span>
<span class="line">运行级别 1：单用户工作状态，root 权限，用于系统维护，禁止远程登陆</span>
<span class="line">运行级别 2：多用户状态(没有 NFS)，不支持网络</span>
<span class="line">运行级别 3：完全的多用户状态(有 NFS)，无界面，登陆后进入控制台命令行模式</span>
<span class="line">运行级别 4：系统未使用，保留</span>
<span class="line">运行级别 5：X11 控制台，登陆后进入图形 GUI 模式</span>
<span class="line">运行级别 6：系统正常关闭并重启，默认运行级别不能设为 6，否则不能正常启动</span>
<span class="line"></span>
<span class="line">授课时使用5，工作时大多使用3。</span>
<span class="line"></span>
<span class="line">开机的流程说明：</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><figure><img src="https://i-blog.csdnimg.cn/blog_migrate/11f894eb87efd6211795fefc4a30598a.bmp#pic_center" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_14-5-5-centos7-后运行级别说明" tabindex="-1"><a class="header-anchor" href="#_14-5-5-centos7-后运行级别说明"><span>14.5.5. CentOS7 后运行级别说明</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">在 /etc/initab </span>
<span class="line">进行了简化，如下:</span>
<span class="line">multi-user.target: analogous to runlevel 3 </span>
<span class="line">graphical.target: analogous to runlevel 5 </span>
<span class="line"></span>
<span class="line">查看当前运行级别：systemctl get-default</span>
<span class="line">ctl ---&gt; control</span>
<span class="line"></span>
<span class="line">更改运行级别：systemctl set-default multi-user.target/graphical.target</span>
<span class="line">		    然后重启 reboot</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_14-5-6-chkconfig-指令" tabindex="-1"><a class="header-anchor" href="#_14-5-6-chkconfig-指令"><span>14.5.6. chkconfig 指令</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">通过 chkconfig 命令可以给服务在 各个运行级别 设置开启自启动/关闭自启动</span>
<span class="line"></span>
<span class="line">chkconfig 指令管理的服务在 /etc/init.d  查看</span>
<span class="line"></span>
<span class="line">注意: Centos7.0 后，很多服务使用 systemctl 管理 (后面马上讲)</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">chkconfig 基本语法：</span>
<span class="line">(1)查看服务和服务在各个级别是开启/关闭自启动  (有限，只能查看chkconfig管理下的服务)</span>
<span class="line">chkconfig --list [| grep	xxx]    (若查找某一个服务使用grep过滤)</span>
<span class="line"> </span>
<span class="line">(2)chkconfig 服务名 --list</span>
<span class="line"></span>
<span class="line">(3)chkconfig --level 5 服务名 on   给该服务在5运行级别开启自启动</span>
<span class="line">chkconfig --level 5 服务名 off     给该服务在5运行级别关闭自启动</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">案例演示: 对network服务进行各种操作,把 network 在 3 运行级别 关闭自启动</span>
<span class="line">chkconfig --level 3 network off </span>
<span class="line"></span>
<span class="line">注意：chkconfig 重新设置服务后自启动或关闭，需要重启机器 reboot 生效.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_14-5-7-systemctl-管理指令" tabindex="-1"><a class="header-anchor" href="#_14-5-7-systemctl-管理指令"><span>14.5.7. systemctl 管理指令</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">基本语法：systemctl [start | stop | restart | status] 服务名</span>
<span class="line"></span>
<span class="line">systemctl 指令管理的服务在 /usr/lib/systemd/system 查看</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_14-5-9-systemctl-设置服务的自启动状态" tabindex="-1"><a class="header-anchor" href="#_14-5-9-systemctl-设置服务的自启动状态"><span>14.5.9. systemctl 设置服务的自启动状态</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">systemctl list-unit-files [ | grep 服务名] (查看服务开机启动状态, grep 可以进行过滤) </span>
<span class="line">systemctl enable 服务名 		(设置服务开机自启动)</span>
<span class="line">systemctl disable 服务名 	(关闭服务开机自启动)</span>
<span class="line">systemctl is-enabled 服务名  (查询某个服务是否是自启动的)</span>
<span class="line"></span>
<span class="line">centos7之后运行级别只有3和5，所以以上指令对3和5运行级别同时适用。</span>
<span class="line"></span>
<span class="line">应用案例：</span>
<span class="line">查看当前防火墙的状况，关闭防火墙和重启防火墙 firewalld.service </span>
<span class="line">	查看当前防火墙情况：systemctl status firewalld</span>
<span class="line">	关闭防火墙：systemctl stop firewalld</span>
<span class="line">	重启防火墙：systemctl start firewalld</span>
<span class="line">	.service写不写都行</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">注意：关闭或者启用防火墙后，立即生效。</span>
<span class="line">但是 这种方式只是临时生效，当重启系统后，还是回归以前对服务的设置。</span>
<span class="line"></span>
<span class="line">如果希望设置某个服务自启动或关闭永久生效</span>
<span class="line">	要使用 systemctl	[enable|disable] 服务名</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_14-5-10-firewall-指令-打开或者关闭指定端口" tabindex="-1"><a class="header-anchor" href="#_14-5-10-firewall-指令-打开或者关闭指定端口"><span>14.5.10. firewall 指令：打开或者关闭指定端口</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">在真正的生产环境，往往需要将防火墙打开。</span>
<span class="line">但问题来了，如果我们把防火墙打开，那么外部请求数据包就不能跟服务器监听端口通讯。</span>
<span class="line">这时，需要打开指定的端口。比如 80、22、8080 等。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071146856.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">(1)	打开端口: firewall-cmd --permanent --add-port=端口号/协议</span>
<span class="line"></span>
<span class="line">通过 netstat -anp | more 指令查看端口号的协议 (more 分页显示)</span>
<span class="line">该指令输出的信息中：</span>
<span class="line">	Local Address下是 ip地址:端口号</span>
<span class="line">	Proto 是协议   (protocol 协议)</span>
<span class="line"></span>
<span class="line">(2)	关闭端口: firewall-cmd --permanent --remove-port=端口号/协议</span>
<span class="line"></span>
<span class="line">注意：无论是打开端口还是关闭端口，要重新载入才能生效</span>
<span class="line">重新载入：firewall-cmd --reload</span>
<span class="line"></span>
<span class="line">(3) 查询端口是否开放: firewall-cmd --query-port=端口/协议</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">应用案例：</span>
<span class="line">(1)	启用防火墙，测试 111 端口是否能 telnet (远程登录) 不行</span>
<span class="line">	在本地主机DOS命令窗口输入：telnet Linux虚拟机ip地址:端口号</span>
<span class="line">	测试本地主机能否访问虚拟机的111端口</span>
<span class="line">	telnet 192.168.200.130 111</span>
<span class="line"></span>
<span class="line">	防火墙打开+端口关闭---&gt;不可以访问端口</span>
<span class="line"></span>
<span class="line">(2)	开放 111 端口</span>
<span class="line">	firewall-cmd --permanent --add-port=111/tcp ;</span>
<span class="line">	需要 firewall-cmd --reload</span>
<span class="line"></span>
<span class="line">	防火墙打开+端口打开---&gt;可以访问端口</span>
<span class="line">	</span>
<span class="line">(3)	再次关闭 111 端口</span>
<span class="line">	firewall-cmd --permanent --remove-port=111/tcp </span>
<span class="line">	需要 firewall-cmd --reload</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_14-6-top指令-动态监控进程" tabindex="-1"><a class="header-anchor" href="#_14-6-top指令-动态监控进程"><span>14.6. top指令：动态监控进程</span></a></h3><h4 id="_14-6-1-介绍" tabindex="-1"><a class="header-anchor" href="#_14-6-1-介绍"><span>14.6.1.介绍</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">top 与 ps 命令很相似。</span>
<span class="line">它们都用来显示正在执行的进程。</span>
<span class="line">top 与 ps 最大的不同之处在于: top 在执行一段时间可以更新正在运行的的进程。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_14-6-2-基本语法" tabindex="-1"><a class="header-anchor" href="#_14-6-2-基本语法"><span>14.6.2.基本语法</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">top [选项]</span>
<span class="line"></span>
<span class="line">选项说明：</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071146588.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">输入top指令后：每一条都是一个进程</span>
<span class="line">	显示：</span>
<span class="line">	第一行</span>
<span class="line">		第一个时间      当前时间</span>
<span class="line">		第二个时间      系统运行时间</span>
<span class="line">		2 users	       有几个用户</span>
<span class="line">		load average   负载值(三个值相加除以3&gt;0.7 说明系统负载过大，要提高性能)</span>
<span class="line">	第二行</span>
<span class="line">		Tasks 			系统任务数</span>
<span class="line">		1 running 		1个正在运行进程</span>
<span class="line">		184 sleeping 	184个休眠进程</span>
<span class="line">		0 stopped 		0个终止进程</span>
<span class="line">		0 zombie 		0个僵死进程   (要清除僵死进程，因为僵死进程无用且占内存空间)</span>
<span class="line">	第三行 占用的CPU百分比</span>
<span class="line">		us 用户占用的CPU</span>
<span class="line">		sy 系统占用的CPU</span>
<span class="line">		id 空闲</span>
<span class="line">	第四行 Mem 内存占用情况</span>
<span class="line">		total 	总共内存</span>
<span class="line">		free 	空闲内存</span>
<span class="line">		user 	已使用内存</span>
<span class="line">	第五行 Swap 分区</span>
<span class="line">		total 	总共大小</span>
<span class="line">		free 	未使用大小</span>
<span class="line">		used 	已用大小</span>
<span class="line">		avail Mem 可获取的内存大小</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_14-6-3-交互操作说明" tabindex="-1"><a class="header-anchor" href="#_14-6-3-交互操作说明"><span>14.6.3.交互操作说明</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">输入命令top</span>
<span class="line">然后输入以下命令，得以下功能对进程进行排序</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071146973.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_14-6-4-应用实例" tabindex="-1"><a class="header-anchor" href="#_14-6-4-应用实例"><span>14.6.4.应用实例</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">案例 1：监视特定用户, 比如监控 tom 用户</span>
<span class="line">输入top</span>
<span class="line">回车</span>
<span class="line">输入u</span>
<span class="line">回车</span>
<span class="line">输入要监控用户名 (该用户要登录才能看到他的进程信息)</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">案例 2：终止指定的进程, 比如我们要结束 tom 登录</span>
<span class="line">输入top</span>
<span class="line">回车</span>
<span class="line">输入k</span>
<span class="line">回车</span>
<span class="line">输入要结束的进程 ID 号 （bash那个进程的PID）</span>
<span class="line">回车</span>
<span class="line">输入信号量 9 强制删除</span>
<span class="line">tom掉线</span>
<span class="line"></span>
<span class="line">案例 3：指定系统状态更新的时间(每隔 10 秒自动更新),默认是 3 秒</span>
<span class="line">top -d 10</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_14-7-netstat指令-监控网络状态" tabindex="-1"><a class="header-anchor" href="#_14-7-netstat指令-监控网络状态"><span>14.7. netstat指令：监控网络状态</span></a></h3><h4 id="_14-7-1-查看系统网络情况netstat" tabindex="-1"><a class="header-anchor" href="#_14-7-1-查看系统网络情况netstat"><span>14.7.1.查看系统网络情况netstat</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">基本语法：</span>
<span class="line">	netstat [选项]</span>
<span class="line"></span>
<span class="line">选项说明：</span>
<span class="line">	-an	按一定顺序排列输出</span>
<span class="line">	-p	显示哪个进程在调用</span>
<span class="line"></span>
<span class="line">输入netstat -an | more (more 分页展示)</span>
<span class="line">显示：</span>
<span class="line">	Proto 					协议</span>
<span class="line">	Recv-Q					接收信息队列</span>
<span class="line">	Send-Q 					发送信息队列</span>
<span class="line">	Local Address      		本地地址 Linux地址 </span>
<span class="line">	Foreign Address         外部地址    </span>
<span class="line">	State 					LISTEN 监听  ESTABLISHED 已建立连接 TIME_WAIT 超时等待</span>
<span class="line"></span>
<span class="line">TIME_WAIT 超时等待 </span>
<span class="line">	---&gt;某个连接断了之后(如用户退出登录)，连接不会立刻消失，而是State变为TIME_WAIT</span>
<span class="line">	系统认为可能是网络状态不好，过一段时间仍无法连接，则连接消失。 </span>
<span class="line"></span>
<span class="line"></span>
<span class="line">Proto 	Recv-Q 	Send-Q 		Local Address           Foreign Address         State </span>
<span class="line">tcp        0     36 		192.168.200.130:22      192.168.200.1:14498     ESTABLISHED</span>
<span class="line">要建立连接双方都要有一个端口</span>
<span class="line">22端口在Linux</span>
<span class="line">14498端口在Windows</span>
<span class="line">如下图：</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071146987.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">案例：查看服务名为 sshd 的服务的信息。</span>
<span class="line">netstat -anp | grep sshd</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_14-7-2-检测主机连接命令ping" tabindex="-1"><a class="header-anchor" href="#_14-7-2-检测主机连接命令ping"><span>14.7.2.检测主机连接命令ping</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">是一种网络检测工具，它主要是用检测远程主机是否正常，或是两部主机间的网线或网卡故障。</span>
<span class="line">如: ping 对方的ip地址</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第十五章-rpm-与-yum" tabindex="-1"><a class="header-anchor" href="#第十五章-rpm-与-yum"><span>第十五章： RPM 与 YUM</span></a></h2><h3 id="_15-1-rpm" tabindex="-1"><a class="header-anchor" href="#_15-1-rpm"><span>15.1. RPM</span></a></h3><h4 id="_15-1-1-介绍" tabindex="-1"><a class="header-anchor" href="#_15-1-1-介绍"><span>15.1.1.介绍</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">RPM 是 Red-Hat Package Manager（红帽软件包管理器）的缩写</span>
<span class="line">这一文件格式名称虽然打上了RedHat的标志，但是其原始设计理念是开放式的，</span>
<span class="line">包括OpenLinux、S.u.S.E.以及Turbo Linux等Linux的分发版本都有采用，可以算是公认的行业标准了。</span>
<span class="line"></span>
<span class="line">是一种用于互联网下载包的打包及安装工具，它包含在某些Linux分发版中。它生成具有.RPM扩展名的文件。</span>
<span class="line"></span>
<span class="line">类似于 windows 的 setup.exe</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_15-1-2-rpm-的简单查询指令" tabindex="-1"><a class="header-anchor" href="#_15-1-2-rpm-的简单查询指令"><span>15.1.2. rpm 的简单查询指令</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">查询已安装的 rpm软件包 列表：</span>
<span class="line">rpm –qa|grep xx </span>
<span class="line">查询结果返回一个软件包的包名</span>
<span class="line"></span>
<span class="line">举例：查看当前系统是否安装了 firefox </span>
<span class="line">指令: rpm -qa | grep firefox</span>
<span class="line">查询结果：firefox-60.2.2-1.el7.centos.x86_64</span>
<span class="line">结果说明：</span>
<span class="line">	软件名：firefox</span>
<span class="line">	版本号：60.2.2-1</span>
<span class="line">	适用操作系统: el7.centos.x86_64 (表示 centos7.x 的 64 位系统)</span>
<span class="line">	如果是 i686、i386 表示 32 位系统，noarch 表示通用(32/64位系统都适用)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_15-1-3-rpm-的其它查询指令" tabindex="-1"><a class="header-anchor" href="#_15-1-3-rpm-的其它查询指令"><span>15.1.3. rpm 的其它查询指令</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">rpm -qa 			(查询所安装的所有 rpm 软件包)</span>
<span class="line"></span>
<span class="line">rpm -qa | more  	(分页显示more)</span>
<span class="line"></span>
<span class="line">rpm -qa | grep X    (过滤,比如 rpm -qa | grep firefox )</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">rpm -q  软件包名      (查询某个软件包是否安装)</span>
<span class="line">案例：rpm -q firefox</span>
<span class="line"></span>
<span class="line">rpm -qi 软件包名   	 (查询软件包的详细信息)</span>
<span class="line">案例: rpm -qi firefox</span>
<span class="line"></span>
<span class="line">rpm -ql 软件包名 	 (查询软件包中的文件和该软件包在哪个文件下)</span>
<span class="line">案例： rpm -ql firefox</span>
<span class="line"></span>
<span class="line">rpm -qf 文件全路径名 	 (查询某个文件所属在哪个软件包)</span>
<span class="line">案例：rpm -qf /etc/passwd rpm </span>
<span class="line">案例：-qf /root/install.log</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_15-1-4-删除-rpm-软件包" tabindex="-1"><a class="header-anchor" href="#_15-1-4-删除-rpm-软件包"><span>15.1.4.删除 rpm 软件包</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">基本语法：rpm -e RPM软件包的名称	//-e erase擦去</span>
<span class="line">案例：删除 firefox 软件包</span>
<span class="line">rpm -e firefox</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">注意：</span>
<span class="line">(1)如果其它软件包依赖于您要删除的软件包，删除时则会产生错误信息。</span>
<span class="line">如：	</span>
<span class="line">rpm -e foo</span>
<span class="line">removing these packages would break dependencies:foo is needed by bar-1.0-1</span>
<span class="line">foo软件包被 bar-1.0-1需要，删除foo对barr-1.0-1有影响</span>
<span class="line"></span>
<span class="line">(2)如果我们就是要删除 foo 这个 rpm 包，可以增加参数 --nodeps ,就可以强制删除</span>
<span class="line">   但是一般不推荐这样做，因为依赖于该软件包的程序可能无法运行</span>
<span class="line">如：rpm -e --nodeps foo            (nodeps 不检查依赖关系 no dependencies)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_15-1-5-安装-rpm-软件包" tabindex="-1"><a class="header-anchor" href="#_15-1-5-安装-rpm-软件包"><span>15.1.5.安装 rpm 软件包</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">基本语法：rpm -ivh RPM软件包全路径名称</span>
<span class="line"></span>
<span class="line">rpm软件包其实是一个软件的安装包</span>
<span class="line">点击Linux系统桌面的光盘，里面有一个Packages文件夹，这个文件夹里有很多rpm软件安装包</span>
<span class="line"></span>
<span class="line">在/run/media/root/CentOS\\ 7\\ x86_64/Packages/ 目录下</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">选项：</span>
<span class="line">	i=install 安装</span>
<span class="line">	v=verbose 提示</span>
<span class="line">	h=hash	  进度条</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">应用实例：</span>
<span class="line">演示卸载和安装 firefox 浏览器</span>
<span class="line">rpm -e firefox </span>
<span class="line">rpm -ivh /run/media/root/CentOS\\ 7\\ x86_64/Packages/firefox-60.2.2-1.el7.centos.x86_64.rpm</span>
<span class="line"></span>
<span class="line">也可以在Packages中找到firefox安装包，复制到某一个目录下，这样写路径简单</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_15-2-yum" tabindex="-1"><a class="header-anchor" href="#_15-2-yum"><span>15.2. yum</span></a></h3><h4 id="_15-2-1-介绍" tabindex="-1"><a class="header-anchor" href="#_15-2-1-介绍"><span>15.2.1.介绍</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Yum（全称为 Yellow dog Updater, Modified）是一个 Shell 前端软件包管理器。</span>
<span class="line">基于 RPM 包管理，能够从指定的服务器自动下载 RPM 包并且安装，</span>
<span class="line">可以自动处理依赖性关系，并且一次安装所有依赖的软件包。</span>
<span class="line"></span>
<span class="line">使用 yum list|grep 软件名 向yum服务器查询有没有该软件</span>
<span class="line">有的话，使用 yum install 软件名 下载安装该软件</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_15-2-2-yum-的基本指令" tabindex="-1"><a class="header-anchor" href="#_15-2-2-yum-的基本指令"><span>15.2.2. yum 的基本指令</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">查询 yum 服务器是否有 需要安装的软件：</span>
<span class="line">yum list|grep 软件名</span>
<span class="line"></span>
<span class="line">安装指定的软件：</span>
<span class="line">yum install 软件名</span>
<span class="line"></span>
<span class="line">案例：请使用 yum 的方式来安装 firefox </span>
<span class="line">rpm -e firefox</span>
<span class="line">yum list | grep firefox </span>
<span class="line">yum install firefox</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_15-3-总结" tabindex="-1"><a class="header-anchor" href="#_15-3-总结"><span>15.3.总结</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">rpm 是从本地安装包下载</span>
<span class="line">yum 是从yum服务器下载安装软件</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第十七章-shell编程" tabindex="-1"><a class="header-anchor" href="#第十七章-shell编程"><span>第十七章：Shell编程</span></a></h2><h3 id="_17-1-为什么要学习shell-编程" tabindex="-1"><a class="header-anchor" href="#_17-1-为什么要学习shell-编程"><span>17.1.为什么要学习Shell 编程</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">(1)	Linux 运维工程师在进行服务器集群管理时，需要编写 Shell 程序来进行服务器管理。</span>
<span class="line">(2)	对于 JavaEE 和 Python 程序员来说，工作的需要，你的老大会要求你编写一些 Shell 脚本进行程序或者是服务器的维护，比如编写一个定时备份数据库的脚本。</span>
<span class="line">(3)	对于大数据程序员来说，需要编写 Shell 程序来管理集群</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_17-2-shell-是什么" tabindex="-1"><a class="header-anchor" href="#_17-2-shell-是什么"><span>17.2. Shell 是什么</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">Shell 是一个命令行解释器，它为用户提供了一个向 Linux 内核发送请求以便运行程序的界面系统级程序，用户可以用 Shell 来启动、挂起、停止甚至是编写一些程序。</span>
<span class="line"></span>
<span class="line">在计算机科学中，Shell俗称壳（用来区别于核）</span>
<span class="line">是指“为使用者提供操作界面”的软件（command interpreter，命令解析器）。</span>
<span class="line">它类似于DOS下的COMMAND.COM和后来的cmd.exe。</span>
<span class="line">它接收用户命令，然后调用相应的应用程序。</span>
<span class="line"></span>
<span class="line">中文名	壳</span>
<span class="line">外文名	shell</span>
<span class="line">性质		命令解析器</span>
<span class="line">用途		接收用户命令</span>
<span class="line"></span>
<span class="line">Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务。是用户使用 Linux 的桥梁.</span>
<span class="line"></span>
<span class="line">用户写了一个指令，该指令不能直接发给Linux内核去执行，而是由shell帮我们去执行，执行完之后再通过shell返回给我们结果。</span>
<span class="line">在Linux中不止一种shell，我们常用的是bash。</span>
<span class="line">可以直接发一个指令给shell，也可以将指令写在一个文件/脚本(.sh shell脚本)里。</span>
<span class="line">shell编程就是在shell脚本中写指令。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071146086.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_17-3-shell-脚本" tabindex="-1"><a class="header-anchor" href="#_17-3-shell-脚本"><span>17.3. Shell 脚本</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.脚本格式要求：</span>
<span class="line">	脚本以 #!/bin/bash 开头 ---&gt;确定shell的类型</span>
<span class="line">    脚本需要有可执行权限</span>
<span class="line">    shell脚本文件以.sh结尾，也可以不以.sh结尾</span>
<span class="line"></span>
<span class="line">2.编写第一个Shell 脚本</span>
<span class="line">需求说明：创建一个 Shell 脚本，输出 hello world! </span>
<span class="line">创建一个目录：mkdir /root/shcode</span>
<span class="line">cd /root/shcode</span>
<span class="line">vim hello.sh</span>
<span class="line">写入：</span>
<span class="line">	#!/bin/bash</span>
<span class="line">	echo &quot;hello,world!&quot;</span>
<span class="line"></span>
<span class="line">3.shell脚本的常用执行方式</span>
<span class="line">方式 1：</span>
<span class="line">	首先要给shell脚本加x执行权限：chomod u+x hello.sh</span>
<span class="line">	再输入该脚本的相对路径或绝对路径来执行该脚本</span>
<span class="line">    比如：</span>
<span class="line">	 	使用相对路径：	./hello.sh </span>
<span class="line">	 	使用绝对路径：	/root/shcode/hello.sh</span>
<span class="line"></span>
<span class="line">方式 2：</span>
<span class="line">	不用赋予脚本+x 权限，直接执行即可。(使用以下指令，即使没有执行权限也可以执行)</span>
<span class="line">	使用指令： sh  shell脚本/shell脚本的绝对路径</span>
<span class="line">	比如	sh hello.sh </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_17-4-shell-的变量" tabindex="-1"><a class="header-anchor" href="#_17-4-shell-的变量"><span>17.4. Shell 的变量</span></a></h3><h4 id="_17-4-1-shell-变量介绍" tabindex="-1"><a class="header-anchor" href="#_17-4-1-shell-变量介绍"><span>17.4.1. Shell 变量介绍</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">(1)	Linux Shell 中的变量分为:系统变量和用户自定义变量。</span>
<span class="line">系统变量：系统自带的变量</span>
<span class="line"></span>
<span class="line">(2)	系统变量比如：$HOME、$PWD、$SHELL、$USER 等等</span>
<span class="line">echo $HOME	---&gt;显示当前用户的家目录</span>
<span class="line"></span>
<span class="line">(3)	可以通过 set 指令显示出shell中的所有系统变量</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_17-4-2-shell-自定义变量" tabindex="-1"><a class="header-anchor" href="#_17-4-2-shell-自定义变量"><span>17.4.2. shell 自定义变量</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">基本语法：</span>
<span class="line">(1)	定义变量：变量名=值  ---&gt;不加空格</span>
<span class="line">(2)	撤销变量：unset 变量名</span>
<span class="line">(3)	声明静态变量：readonly 变量 (改变量不能 unset撤销)</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">案例 1：定义变量 A</span>
<span class="line">案例 2：撤销变量 A</span>
<span class="line">案例 3：声明静态的变量 B=2，不能 unset</span>
<span class="line"></span>
<span class="line">cd /root/shcode</span>
<span class="line">vim vr.sh</span>
<span class="line">输入： </span>
<span class="line">	#!/bin/bash</span>
<span class="line">	</span>
<span class="line">	#案例 1：定义变量 A=100  (#为注释符)</span>
<span class="line">	A=100</span>
<span class="line">	#输出变量需要加上$ ($---&gt;引用变量)</span>
<span class="line">	echo $A</span>
<span class="line">	</span>
<span class="line">	#上述输出结果是100，想要输出结果为A=100，这样写(A=以普通文本形式输出，$A引用变量的值)</span>
<span class="line">	echo A=$A 或者 echo &quot;A=$A&quot; </span>
<span class="line">		</span>
<span class="line">		</span>
<span class="line">	#案例 2：撤销变量 A </span>
<span class="line">	unset A</span>
<span class="line">	echo &quot;A=$A&quot;    (---&gt;输出 A= )</span>
<span class="line"></span>
<span class="line">	</span>
<span class="line">	#案例 3：声明静态的变量 B=2，不能 unset </span>
<span class="line">	readonly B=2</span>
<span class="line">	echo &quot;B=$B&quot; </span>
<span class="line">	</span>
<span class="line">保存：wq</span>
<span class="line">最后输入执行命令：sh vr.sh</span>
<span class="line"></span>
<span class="line">--------------------------------------------------------------------</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">shell 变量名的定义规则：</span>
<span class="line">(1)	变量名称可以由字母、数字和下划线组成，但是不能以数字开头。5A=200(×)</span>
<span class="line">(2)	等号两侧不能有空格</span>
<span class="line">(3)	变量名称一般习惯为大写，这是一个规范，我们遵守即可</span>
<span class="line"></span>
<span class="line">--------------------------------------------------------------------</span>
<span class="line">将命令的返回值赋给变量：</span>
<span class="line">(1)	A=\`date\`反引号，运行里面的命令，并把结果返回给变量 A </span>
<span class="line">(2)	A=$(date) 等价于反引号</span>
<span class="line"></span>
<span class="line">案例：</span>
<span class="line">#将指令返回的结果赋给变量</span>
<span class="line">	C=\`date\` </span>
<span class="line">	D=$(date)</span>
<span class="line">	echo &quot;C=$C&quot; </span>
<span class="line">	echo &quot;D=$D&quot;</span>
<span class="line">	</span>
<span class="line">	#使用环境变量 TOMCAT_HOME</span>
<span class="line">	echo &quot;tomcat_home=$TOMCAT_HOME&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_17-5-设置环境变量-全局变量" tabindex="-1"><a class="header-anchor" href="#_17-5-设置环境变量-全局变量"><span>17.5.设置环境变量(全局变量)</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">可以将变量提升为全局环境变量，供多个shell程序共同使用。</span>
<span class="line"></span>
<span class="line">基本语法：</span>
<span class="line">(1)	export 	变量名=变量值 	</span>
<span class="line">（功能描述：将 shell 变量输出为环境变量/全局变量）</span>
<span class="line"></span>
<span class="line">(2)	source 	配置文件		    </span>
<span class="line">（功能描述：在某文件中定义环境变量之后，要对该文件进行刷新才能使其生效，即让修改后的配置信息立即生效）</span>
<span class="line"></span>
<span class="line">(3)	echo 	$变量名			</span>
<span class="line">（功能描述：查询环境变量的值）</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">快速入门：</span>
<span class="line">(1)	在/etc/profile 文件中定义 TOMCAT_HOME 环境变量</span>
<span class="line">TOMCAT_HOME ---&gt;意思是tomcat的家目录是什么</span>
<span class="line">(2)	查看环境变量 TOMCAT_HOME 的值</span>
<span class="line">vim /etc/profile</span>
<span class="line">	写入：export TOMCAT_HOME=/opt/tomcat</span>
<span class="line">	保存退出</span>
<span class="line">source /etc/profile</span>
<span class="line">echo $TOMCAT_HOME ---输出 /opt/tomcat</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">(3)	在另外一个 shell 程序中使用 TOMCAT_HOME</span>
<span class="line">在另一个shell程序中写入：</span>
<span class="line">	echo &quot;tomcat_home=$TOMCAT_HOME&quot;</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">注意：在输出 TOMCAT_HOME 环境变量前，需要让其生效source /etc/profile</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">shell 脚本的</span>
<span class="line">	单行注释：#</span>
<span class="line">	多行注释：   :&lt;&lt;!   独占一行	</span>
<span class="line">				内容 </span>
<span class="line">			    ! 	   独占一行</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_17-6-位置参数变量" tabindex="-1"><a class="header-anchor" href="#_17-6-位置参数变量"><span>17.6.位置参数变量</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.介绍</span>
<span class="line">当我们执行一个 shell 脚本时，如果希望获取到命令行的参数信息，就可以使用到位置参数变量</span>
<span class="line">比如： ./myshell.sh 100 200 这个就是一个执行 shell 的命令行，可以在 myshell 脚本中获取到参数信息</span>
<span class="line"></span>
<span class="line">./myshell.sh ---&gt;执行myshell脚本命令</span>
<span class="line">100 200 都是该命令行的参数</span>
<span class="line">使用位置参数变量可以在myshell脚本中获得参数</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">2.基本语法</span>
<span class="line">$n （功能描述：n 为数字，$0 代表命令本身(如./myshell.sh)，$1-$9 代表第一到第九个参数(如：$1 就是100 $2 就是200)，十以上的参数需要用大括号包含，如\${10}）</span>
<span class="line">$* （功能描述：这个变量代表命令行中所有的参数，$*把所有的参数看成一个整体）</span>
<span class="line">$@ （功能描述：这个变量也代表命令行中所有的参数，不过$@把每个参数区分对待）</span>
<span class="line">$# （功能描述：这个变量代表命令行中所有参数的个数）</span>
<span class="line"></span>
<span class="line">案例：编写一个 shell 脚本 myshell.sh ，在脚本中获取到命令行的各个参数信息。</span>
<span class="line">vim myshell.sh</span>
<span class="line">	写入:</span>
<span class="line">		#!/bin/bash</span>
<span class="line">		echo &quot;命令本身=$0 第一个参数=$1 第二个参数=$2&quot;</span>
<span class="line">		echo &quot;所有的参数=$*&quot;</span>
<span class="line">		echo &quot;$@&quot;</span>
<span class="line">		echo &quot;参数个数=$#&quot;</span>
<span class="line">		保存退出</span>
<span class="line">sh myshell.sh 100 200</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_17-7-预定义变量" tabindex="-1"><a class="header-anchor" href="#_17-7-预定义变量"><span>17.7.预定义变量</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.基本介绍：</span>
<span class="line">预定义变量是 shell 设计者事先已经定义好的变量，可以直接在 shell 脚本中使用</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">2.基本语法：</span>
<span class="line">(1)	$$ （功能描述：当前进程的进程号（PID））</span>
<span class="line">(2)	$! （功能描述：后台运行的最后一个进程的进程号（PID））</span>
<span class="line">(3)	$？（功能描述：最后一次执行的命令的返回状态。如果这个变量的值为 0，证明上一个命令正确执行；如果这个变量的值为非 0（具体是哪个数，由命令自己来决定），则证明上一个命令执行不正确了。）</span>
<span class="line"></span>
<span class="line">3.应用实例：</span>
<span class="line">在一个 shell 脚本中简单使用一下预定义变量</span>
<span class="line"></span>
<span class="line">vim preVar.sh</span>
<span class="line">	写入：</span>
<span class="line">	#!/bin/bash</span>
<span class="line">	echo &quot;当前执行的进程 id=$$&quot;</span>
<span class="line">	</span>
<span class="line">	#以后台的方式运行一个脚本(在脚本后加一个$)，并获取他的进程号</span>
<span class="line">	/root/shcode/myshell.sh &amp;</span>
<span class="line">	</span>
<span class="line">	echo &quot;最后一个后台方式运行的进程 id=$!&quot; </span>
<span class="line"></span>
<span class="line">	echo &quot;执行的结果是=$?&quot;</span>
<span class="line">	保存并退出</span>
<span class="line">sh preVar.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_17-8-运算符" tabindex="-1"><a class="header-anchor" href="#_17-8-运算符"><span>17.8.运算符</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.基本介绍：</span>
<span class="line">学习如何在 shell 中进行各种运算操作。</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">2.基本语法：</span>
<span class="line">(1)	三种写法：</span>
<span class="line">	$((运算式))</span>
<span class="line">	$[运算式]</span>
<span class="line">	expr m + n 	(expression 表达式)</span>
<span class="line">	 </span>
<span class="line">(2)	注意 expr 运算符间要有空格</span>
<span class="line">	如果希望将 expr 的结果赋给某个变量，使用 \`\` 或者 $( )</span>
<span class="line"></span>
<span class="line">(3)	expr m - n</span>
<span class="line"></span>
<span class="line">(4)	expr \\*, /, %	乘，除，取余</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">3.应用实例 oper.sh</span>
<span class="line">案例 1：计算（2+3）X4 的值</span>
<span class="line">案例 2：请求出命令行的两个参数[整数]的和 20 50</span>
<span class="line"></span>
<span class="line">vim oper.sh</span>
<span class="line">	写入:</span>
<span class="line">	#!/bin/bash</span>
<span class="line">	#案例 1：计算（2+3）X4 的值</span>
<span class="line">	#使用第一种方式</span>
<span class="line">	RES1=$(((2+3)*4))        ---&gt;用一个变量RES1接收</span>
<span class="line">	echo &quot;res1=$RES1&quot;</span>
<span class="line">	保存并退出</span>
<span class="line">sh oper.sh</span>
<span class="line"></span>
<span class="line">vim oper.sh</span>
<span class="line">	写入:</span>
<span class="line">	#!/bin/bash</span>
<span class="line">	#使用第二种方式, 推荐使用</span>
<span class="line">	RES2=$[(2+3)*4]</span>
<span class="line">	echo &quot;res2=$RES2&quot;</span>
<span class="line">	保存并退出</span>
<span class="line">sh oper.sh	</span>
<span class="line"></span>
<span class="line">vim oper.sh</span>
<span class="line">	写入:</span>
<span class="line">	#!/bin/bash	</span>
<span class="line">	#使用第三种方式 expr </span>
<span class="line">	TEMP=\`expr 2 + 3\`       </span>
<span class="line">	RES4=\`expr $TEMP \\* 4\` </span>
<span class="line">	echo &quot;temp=$TEMP&quot;</span>
<span class="line">	echo &quot;res4=$RES4&quot;</span>
<span class="line">	保存并退出</span>
<span class="line">sh oper.sh</span>
<span class="line"></span>
<span class="line">vim oper.sh</span>
<span class="line">	写入:</span>
<span class="line">	#!/bin/bash	</span>
<span class="line">	#案例 2：请求出命令行的两个参数[整数]的和 20 50 </span>
<span class="line">	SUM=$[$1+$2]</span>
<span class="line">	echo &quot;sum=$SUM&quot;</span>
<span class="line">	保存并退出</span>
<span class="line">sh oper.sh 20 50</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_17-9-条件判断" tabindex="-1"><a class="header-anchor" href="#_17-9-条件判断"><span>17.9.条件判断</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.基本语法：</span>
<span class="line">[ condition ] （注意 condition 前后要有空格）</span>
<span class="line">#非空返回 true，可使用$?验证（0 为 true，&gt;1 为 false）</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">2.应用实例：</span>
<span class="line">[ hspEdu ]		返回 true </span>
<span class="line">[ ]				返回 false</span>
<span class="line">[ condition ] &amp;&amp; echo OK || echo notok	条件满足，执行后面的语句</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">3.判断语句：</span>
<span class="line">	常用判断条件：</span>
<span class="line">	(1) = 字符串比较</span>
<span class="line">	(2)	两个整数的比较</span>
<span class="line">		-lt 小于     less than</span>
<span class="line">		-le 小于等于  less equal</span>
<span class="line">		-eq 等于      equal</span>
<span class="line">		-gt 大于      greater</span>
<span class="line">		-ge 大于等于   greater equal</span>
<span class="line">		-ne 不等于     not equal</span>
<span class="line">	(3)	按照文件权限进行判断</span>
<span class="line">		-r 有读的权限</span>
<span class="line">		-w 有写的权限</span>
<span class="line">		-x 有执行的权限</span>
<span class="line">	(4)	按照文件类型进行判断</span>
<span class="line">		-f 文件存在并且是一个常规的文件</span>
<span class="line">		-e 文件存在</span>
<span class="line">		-d 文件存在并是一个目录</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">4.应用实例：</span>
<span class="line">案例 1：&quot;ok&quot;是否等于&quot;ok&quot;</span>
<span class="line">判断语句：使用 =</span>
<span class="line">案例 2：23 是否大于等于 22</span>
<span class="line">判断语句：使用 -ge</span>
<span class="line">案例 3：/root/shcode/aaa.txt 目录中的文件是否存在</span>
<span class="line">判断语句： 使用 -f</span>
<span class="line"></span>
<span class="line">代码如下:</span>
<span class="line">vim ifdemo.sh</span>
<span class="line">	#!/bin/bash</span>
<span class="line">	#案例 1：&quot;ok&quot;是否等于&quot;ok&quot;</span>
<span class="line">	if [ &quot;ok&quot; = &quot;ok&quot;  ]</span>
<span class="line">	then</span>
<span class="line">	        echo &quot;equal&quot;</span>
<span class="line">	fi                    -----&gt; if语句 以if开头 以fi结尾</span>
<span class="line">	</span>
<span class="line">	#案例 2：23 是否大于等于 22</span>
<span class="line">	#判断语句：使用 -ge</span>
<span class="line">	if [ 23 -ge 22 ]</span>
<span class="line">	then</span>
<span class="line">	        echo &quot;大于&quot;</span>
<span class="line">	fi</span>
<span class="line">	</span>
<span class="line">	#案例 3：/root/shcode/aaa.txt 目录中的文件是否存在</span>
<span class="line">	#判断语句： 使用 -f</span>
<span class="line">	if [ -f  /root/shcode/aaa.txt ]</span>
<span class="line">	then</span>
<span class="line">	        echo &quot;文件存在&quot;</span>
<span class="line">	fi</span>
<span class="line">	</span>
<span class="line">	#看几个案例</span>
<span class="line">	if [ ]</span>
<span class="line">	then</span>
<span class="line">	        echo &quot;存在&quot;</span>
<span class="line">	fi</span>
<span class="line">	</span>
<span class="line">	if [ hspEdu01 ]</span>
<span class="line">	then</span>
<span class="line">	        echo &quot;hello hspEdu01&quot;</span>
<span class="line">	fi</span>
<span class="line">sh ifdemo.sh</span>
<span class="line"></span>
<span class="line">输出结果：</span>
<span class="line">	equal</span>
<span class="line">	大于</span>
<span class="line">	hello hspEdu01</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_17-10-流程控制" tabindex="-1"><a class="header-anchor" href="#_17-10-流程控制"><span>17.10.流程控制</span></a></h3><h4 id="_17-10-1-if-语句" tabindex="-1"><a class="header-anchor" href="#_17-10-1-if-语句"><span>17.10.1. if 语句</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.基本语法：</span>
<span class="line">if [ 条件判断式 ] </span>
<span class="line">then</span>
<span class="line">	代码</span>
<span class="line">fi</span>
<span class="line"></span>
<span class="line">或者 多分支</span>
<span class="line"></span>
<span class="line">if [ 条件判断式 ] </span>
<span class="line">then</span>
<span class="line">	代码</span>
<span class="line">elif [条件判断式] </span>
<span class="line">then</span>
<span class="line">	代码</span>
<span class="line">fi</span>
<span class="line"></span>
<span class="line">2.注意事项：[ 条件判断式 ]，中括号和条件判断式之间必须有空格</span>
<span class="line"></span>
<span class="line">3.应用实例 ifCase.sh</span>
<span class="line">案例：请编写一个 shell 程序，如果输入的参数，大于等于 60，则输出 &quot;及格了&quot;，如果小于 60,则输出 &quot;不及格&quot;</span>
<span class="line">	if [ $1 -ge 60 ]</span>
<span class="line">	then</span>
<span class="line">	        echo &quot;及格了&quot;</span>
<span class="line">	else</span>
<span class="line">	        echo &quot;不及格&quot;</span>
<span class="line">	fi</span>
<span class="line"></span>
<span class="line">	或者</span>
<span class="line"></span>
<span class="line">	if [ $1 -ge 60 ]</span>
<span class="line">	then</span>
<span class="line">	        echo &quot;及格了&quot;</span>
<span class="line">	elif[ $1 -lt 60]</span>
<span class="line">	then</span>
<span class="line">	        echo &quot;不及格&quot;</span>
<span class="line">	fi</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_17-10-2-case-语句" tabindex="-1"><a class="header-anchor" href="#_17-10-2-case-语句"><span>17.10.2. case 语句</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.基本语法：</span>
<span class="line"></span>
<span class="line">case $变量名 in</span>
<span class="line">&quot;值 1&quot;)</span>
<span class="line">如果变量的值等于值 1，则执行程序 1</span>
<span class="line">;;</span>
<span class="line">&quot;值 2&quot;)</span>
<span class="line">如果变量的值等于值 2，则执行程序 2</span>
<span class="line">;;</span>
<span class="line">…省略其他分支…</span>
<span class="line"></span>
<span class="line">*)</span>
<span class="line">如果变量的值都不是以上的值，则执行此程序</span>
<span class="line">;;</span>
<span class="line">esac</span>
<span class="line"></span>
<span class="line">应用实例 testCase.sh</span>
<span class="line">案例1：当命令行参数是1时，输出 &quot;周一&quot;, 是2时，就输出&quot;周二&quot;，其它情况输出&quot;other&quot;</span>
<span class="line">vim testCase.sh</span>
<span class="line">	写入：</span>
<span class="line">	#!/bin/bash</span>
<span class="line">	#案例1：当命令行参数是1时，输出 &quot;周一&quot;, 是2时，就输出&quot;周二&quot;，其它情况输出&quot;other&quot;</span>
<span class="line">	case $1 in</span>
<span class="line">	&quot;1&quot;)</span>
<span class="line">	echo &quot;周一&quot;</span>
<span class="line">	;;</span>
<span class="line">	&quot;2&quot;)</span>
<span class="line">	echo &quot;周二&quot;</span>
<span class="line">	;;</span>
<span class="line">	*)</span>
<span class="line">	echo &quot;other...&quot;</span>
<span class="line">	;;</span>
<span class="line">	esac</span>
<span class="line">	保存并退出</span>
<span class="line">	</span>
<span class="line">sh testCase.sh 1</span>
<span class="line">周一</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_17-10-3-for-循环" tabindex="-1"><a class="header-anchor" href="#_17-10-3-for-循环"><span>17.10.3. for 循环</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">基本语法：</span>
<span class="line"></span>
<span class="line">第一种方式：</span>
<span class="line"></span>
<span class="line">for 变量 in  值 1  值 2  值 3… </span>
<span class="line">do</span>
<span class="line">程序/代码</span>
<span class="line">done</span>
<span class="line"></span>
<span class="line">应用实例 testFor1.sh</span>
<span class="line">案例：打印命令行输入的参数 [这里可以看出$*  和 $@ 的区别]</span>
<span class="line">	#!/bin/bash</span>
<span class="line">	#案例：打印命令行输入的参数 [这里可以看出$*  和 $@ 的区别]</span>
<span class="line">	#注意：$* 是把输入的参数当作一个整体，所以只会输出一句话</span>
<span class="line">	for i in &quot;$*&quot;</span>
<span class="line">	do</span>
<span class="line">	        echo &quot;num is $*&quot;</span>
<span class="line">	done</span>
<span class="line">	</span>
<span class="line">	#使用 $@ 来获取输入的参数，注意：也是把输入的参数看作一个整体，但这是分别对待；所以有几个参数就输出几句</span>
<span class="line">	echo &quot;======================================&quot;</span>
<span class="line">	for j in &quot;$@&quot;</span>
<span class="line">	do</span>
<span class="line">	        echo &quot;num is $@&quot;</span>
<span class="line">	done</span>
<span class="line"></span>
<span class="line">sh testFor1.sh 100 200 300</span>
<span class="line">num is 100 200 300</span>
<span class="line">======================================</span>
<span class="line">num is 100 200 300</span>
<span class="line">num is 100 200 300</span>
<span class="line">num is 100 200 300</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">第二种方式：</span>
<span class="line"></span>
<span class="line">for (( 初始值;循环控制条件;变量变化 ))</span>
<span class="line">do</span>
<span class="line">程序/代码</span>
<span class="line">done</span>
<span class="line"></span>
<span class="line">应用实例 testFor2.sh</span>
<span class="line">案例：从 1 加到 100 的值输出显示</span>
<span class="line">	#!/bin/bash</span>
<span class="line">	#案例：从 1 加到 100 的值输出显示</span>
<span class="line">	#定义一个变量SUM</span>
<span class="line">	SUM=0</span>
<span class="line">	for(( i=1; i&lt;=100; i++  ))</span>
<span class="line">	do</span>
<span class="line">	        SUM=$[$SUM+$i]</span>
<span class="line">	done</span>
<span class="line">	echo &quot;总和SUM=$SUM&quot;</span>
<span class="line"></span>
<span class="line">sh testFor2.sh </span>
<span class="line">总和SUM=5050</span>
<span class="line"></span>
<span class="line">如果1加到x x由自己输入</span>
<span class="line">	SUM=0</span>
<span class="line">	for(( i=1; i&lt;=$1; i++  ))</span>
<span class="line">	do</span>
<span class="line">	        SUM=$[$SUM+$i]</span>
<span class="line">	done</span>
<span class="line">	echo &quot;总和SUM=$SUM&quot;</span>
<span class="line"></span>
<span class="line">sh textFor2.sh 1000</span>
<span class="line">总和SUM=500500</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_17-10-4-while-循环" tabindex="-1"><a class="header-anchor" href="#_17-10-4-while-循环"><span>17.10.4. while 循环</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">基本语法：</span>
<span class="line">while [ 条件判断式 ]</span>
<span class="line">do</span>
<span class="line">程序/代码</span>
<span class="line">done</span>
<span class="line"></span>
<span class="line">注意：while 和 [有空格，条件判断式和[  ]也有空格</span>
<span class="line"></span>
<span class="line">应用实例：testWhile.sh</span>
<span class="line">案例：从命令行输入一个数 n，统计从 1+..+ n  的值是多少？</span>
<span class="line">	#!/bin/bash</span>
<span class="line">	SUM=0</span>
<span class="line">	i=0</span>
<span class="line">	while [ $i -le $1 ] </span>
<span class="line">	do</span>
<span class="line">	SUM=$[$SUM+$i]</span>
<span class="line">	#i 自增</span>
<span class="line">	i=$[$i+1]</span>
<span class="line">	done</span>
<span class="line">	echo &quot;执行结果=$SUM&quot;</span>
<span class="line"></span>
<span class="line">sh testWhile.sh 100</span>
<span class="line">执行结果=5050</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_17-11-read-读取控制台输入" tabindex="-1"><a class="header-anchor" href="#_17-11-read-读取控制台输入"><span>17.11. read 读取控制台输入</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.基本语法：</span>
<span class="line">read(选项)(参数)</span>
<span class="line">选项：</span>
<span class="line">	-p：指定读取值时的提示符；</span>
<span class="line">	-t：指定读取值时等待的时间（秒），如果没有在指定的时间内输入，就不再等待了</span>
<span class="line">参数：</span>
<span class="line">	变量：指定读取值的变量名</span>
<span class="line"></span>
<span class="line">2.应用实例 testRead.sh</span>
<span class="line">案例 1：读取控制台输入一个 NUM1 值</span>
<span class="line">案例 2：读取控制台输入一个 NUM2 值，在 10 秒内输入。代码:</span>
<span class="line"></span>
<span class="line">	#!/bin/bash</span>
<span class="line">	#案例 1：读取控制台输入一个 NUM1 值</span>
<span class="line">	read -p &quot;请输入一个数 NUM1=&quot; NUM1 </span>
<span class="line">	echo &quot;你输入的 NUM1=$NUM1&quot;</span>
<span class="line">	</span>
<span class="line">	#案例 2：读取控制台输入一个 NUM2 值，在 10 秒内输入。</span>
<span class="line">	read -t 10 -p &quot;请输入一个数 NUM2=&quot; NUM2 </span>
<span class="line">	echo &quot;你输入的 NUM2=$NUM2&quot;</span>
<span class="line"></span>
<span class="line">sh testRead.sh</span>
<span class="line">请输入一个数 NUM1=100</span>
<span class="line">你输入的 NUM1=100</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_17-12-函数" tabindex="-1"><a class="header-anchor" href="#_17-12-函数"><span>17.12.函数</span></a></h3><h4 id="_17-12-1-函数介绍" tabindex="-1"><a class="header-anchor" href="#_17-12-1-函数介绍"><span>17.12.1.函数介绍</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">shell 编程和其它编程语言一样，有系统函数，也可以自定义函数。系统函数中，我们这里就介绍两个。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_17-12-2-系统函数" tabindex="-1"><a class="header-anchor" href="#_17-12-2-系统函数"><span>17.12.2.系统函数</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.basename 基本语法</span>
<span class="line">功能：返回完整路径最后 / 的部分，常用于获取文件名</span>
<span class="line">basename [pathname] [suffix]</span>
<span class="line">basename [string] [suffix]	</span>
<span class="line"></span>
<span class="line">功能描述：basename 命令会删掉所有的前缀包括最后一个（‘/’）字符，然后将字符串显示出来。</span>
<span class="line">选项：suffix 为后缀，如果 suffix 被指定了，basename 会将 pathname 或 string 中的 suffix 去掉。</span>
<span class="line"></span>
<span class="line">案例 1：请返回 /home/aaa/test.txt 的 &quot;test.txt&quot; 部分</span>
<span class="line">basename /home/aaa/test.txt</span>
<span class="line">返回test.txt</span>
<span class="line"></span>
<span class="line">如果输入：basename /home/aaa/test.txt .txt</span>
<span class="line">返回test</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">2.dirname 基本语法</span>
<span class="line">功能：返回完整路径最后 / 的前面的部分，常用于返回路径部分</span>
<span class="line">dirname 文件绝对路径 </span>
<span class="line"></span>
<span class="line">功能描述：从给定的包含绝对路径的文件名中去除文件名（非目录的部分），然后返回剩下的路径（目录的部分）</span>
<span class="line"></span>
<span class="line">案例 1：请返回 /home/aaa/test.txt 的 /home/aaa </span>
<span class="line">dirname /home/aaa/test.txt</span>
<span class="line">返回/home/aaa</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_17-12-3-自定义函数" tabindex="-1"><a class="header-anchor" href="#_17-12-3-自定义函数"><span>17.12.3.自定义函数</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">基本语法：</span>
<span class="line">[ function ] funname[()]</span>
<span class="line">{</span>
<span class="line">	Action; </span>
<span class="line">	[return int;]</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">调用直接写函数名：funname	[值]</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">案例 1：计算输入两个参数的和(动态的获取) testFun.sh</span>
<span class="line">	#!/bin/bash</span>
<span class="line">	#案例 1：计算输入两个参数的和(动态的获取)</span>
<span class="line">	</span>
<span class="line">	#定义函数 getSum </span>
<span class="line">	function getSum() {</span>
<span class="line">		SUM=$[$n1+$n2] </span>
<span class="line">		echo &quot;和是=$SUM&quot;</span>
<span class="line">	}</span>
<span class="line"></span>
<span class="line">	#输入两个值</span>
<span class="line">	read -p &quot;请输入一个数 n1=&quot; n1 </span>
<span class="line">	read -p &quot;请输入一个数 n2=&quot; n2</span>
<span class="line">	</span>
<span class="line">	#调用自定义函数</span>
<span class="line">	getSum $n1 $n2</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">sh testFun.sh </span>
<span class="line">请输入一个数 n1=10</span>
<span class="line">请输入一个数 n2=90</span>
<span class="line">和是=100</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_17-13-shell-编程综合案例" tabindex="-1"><a class="header-anchor" href="#_17-13-shell-编程综合案例"><span>17.13. Shell 编程综合案例</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1.需求分析:</span>
<span class="line">(1)	每天凌晨 2:30 备份 数据库 hspedu 到 /data/backup/db</span>
<span class="line">(2)	备份开始和备份结束能够给出相应的提示信息</span>
<span class="line">(3)	备份后的文件要求以备份时间为文件名，并打包成 .tar.gz 的形式，比如：2021-03-12_230201.tar.gz</span>
<span class="line">(4)	在备份的同时，检查是否有 10 天前备份的数据库文件，如果有就将其删除。</span>
<span class="line">(5)	画一个思路分析图</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071146188.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">2.代码 </span>
<span class="line">切换到/usr/sbin/目录下(该目录为root用户执行权限，使用root执行)</span>
<span class="line">vim mysql_db.backup.sh</span>
<span class="line">写入：</span>
<span class="line">	#备份目录</span>
<span class="line">	BACKUP=/data/backup/db</span>
<span class="line">	</span>
<span class="line">	#当前时间</span>
<span class="line">	DATETIME=$(date +%Y-%m-%d_%H%M%S)</span>
<span class="line">	echo $DATETIME</span>
<span class="line">	</span>
<span class="line">	#数据库的地址</span>
<span class="line">	HOST=localhost</span>
<span class="line">	</span>
<span class="line">	#数据库用户名</span>
<span class="line">	DB_USER=root</span>
<span class="line">	</span>
<span class="line">	#数据库密码</span>
<span class="line">	DB_PW=hspedu100</span>
<span class="line">	</span>
<span class="line">	#备份的数据库名</span>
<span class="line">	DATABASE=hspedu</span>
<span class="line"></span>
<span class="line">	#创建备份目录, 如果不存在，就创建（这个应该可以用if语句写）</span>
<span class="line">	[ ! -d &quot;\${BACKUP}/\${DATETIME}&quot; ] &amp;&amp; mkdir -p &quot;\${BACKUP}/\${DATETIME}&quot;</span>
<span class="line"></span>
<span class="line">	#备份数据库</span>
<span class="line">	mysqldump	-u\${DB_USER}	-p\${DB_PW}	--host=\${HOST}	-q	-R	--databases	\${DATABASE}	| gzip &gt; \${BACKUP}/\${DATETIME}/$DATETIME.sql.gz</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">	#将文件处理成 tar.gz </span>
<span class="line">	cd \${BACKUP}</span>
<span class="line">	tar -zcvf $DATETIME.tar.gz \${DATETIME}</span>
<span class="line">	</span>
<span class="line">	#删除对应的备份目录</span>
<span class="line">	rm -rf \${BACKUP}/\${DATETIME}</span>
<span class="line"></span>
<span class="line">	#删除 10 天前的备份文件</span>
<span class="line">	#查找BACKUP目录下10天前的备份文件 备份文件名字为 *.tar.gz 如果有删除</span>
<span class="line">	find \${BACKUP} -atime +10 -name &quot;*.tar.gz&quot; -exec rm -rf {} \\;</span>
<span class="line">	echo &quot;备份数据库\${DATABASE} 成功~&quot;</span>
<span class="line"></span>
<span class="line">	保存并退出</span>
<span class="line">	</span>
<span class="line">sh /user/sbin/mysql_db.backup.sh</span>
<span class="line"></span>
<span class="line">{} ---&gt;应该可以不用写</span>
<span class="line"></span>
<span class="line">定时：</span>
<span class="line">	crontab -e</span>
<span class="line">	30 2 * * * /user/sbin/mysql_db.backup.sh</span>
<span class="line">	保存并退出</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="第二十一章-日志管理" tabindex="-1"><a class="header-anchor" href="#第二十一章-日志管理"><span>第二十一章：日志管理</span></a></h2><h3 id="_21-1-基本介绍" tabindex="-1"><a class="header-anchor" href="#_21-1-基本介绍"><span>21.1.基本介绍</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">(1)日志文件是重要的系统信息文件，其中记录了许多重要的系统事件，包括用户的登录信息、系统的启动信息、系统的安全信息、邮件相关信息、各种服务相关信息等。</span>
<span class="line">(2)日志对于安全来说也很重要，它记录了系统每天发生的各种事情，通过日志来检查错误发生的原因，或者受到攻击时攻击者留下的痕迹。</span>
<span class="line">(3)可以这样理解 日志是用来记录重大事件的工具</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_21-2-系统常用的日志" tabindex="-1"><a class="header-anchor" href="#_21-2-系统常用的日志"><span>21.2.系统常用的日志</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">系统日志文件的保存位置：/var/log/ 目录下</span>
<span class="line"></span>
<span class="line">应用案例：</span>
<span class="line">使用 root 用户通过 xshell6 登陆，第一次使用错误的密码，第二次使用正确的密码登录成功看看在日志文件/var/log/secure 里有没有记录相关信息</span>
<span class="line"></span>
<span class="line">系统常用日志：</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071146344.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_21-3-日志管理服务-rsyslogd" tabindex="-1"><a class="header-anchor" href="#_21-3-日志管理服务-rsyslogd"><span>21.3.日志管理服务 rsyslogd</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">CentOS7.6 日志服务是 rsyslogd   (rocket-fast system for log)</span>
<span class="line">CentOS6.x 日志服务是 syslogd </span>
<span class="line">rsyslogd 功能更强大</span>
<span class="line">rsyslogd 的使用、日志文件的格式，和 syslogd 服务是兼容的</span>
<span class="line"></span>
<span class="line">rsyslogd是一个后台程序(服务)，来管理/记录/操作相关日志。</span>
<span class="line">将日志记录到对应的文件中。</span>
<span class="line"></span>
<span class="line">/etc/rsyslog.conf配置文件中记录了要管理哪些日志和将这些日志记录到哪个文件中。</span>
<span class="line"></span>
<span class="line">原理示意图：</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071146574.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.在进行日志管理时，要保证rsyslogd服务是启动的！</span>
<span class="line"></span>
<span class="line">(1)查询 Linux 中的 rsyslogd 服务是否启动</span>
<span class="line">ps aux | grep &quot;rsyslog&quot; </span>
<span class="line"></span>
<span class="line">ps aux | grep &quot;rsyslog&quot; | grep -v &quot;grep&quot;</span>
<span class="line">| grep -v &quot;grep&quot; ---&gt; 筛选出ps aux | grep &quot;rsyslog&quot; 结果中不是grep的</span>
<span class="line"></span>
<span class="line">(2)查询 rsyslogd 服务的自启动状态(是否是自启动状态enable)</span>
<span class="line">systemctl list-unit-files | grep rsyslog</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">2.配置文件：/etc/rsyslog.conf</span>
<span class="line">该配置文件中记录了：日志和日志存放在哪个文件</span>
<span class="line"></span>
<span class="line">关于日志：*.*</span>
<span class="line">其中第一个*代表日志类型，第二个*代表日志级别</span>
<span class="line"></span>
<span class="line">(1)日志类型分为：</span>
<span class="line">auth					##pam 产生的日志</span>
<span class="line">authpriv				##ssh、ftp 等登录信息的验证信息</span>
<span class="line">corn					##时间任务相关</span>
<span class="line">kern					##内核</span>
<span class="line">lpr						##打印</span>
<span class="line">mail					##邮件</span>
<span class="line">mark(syslog)-rsyslog	##服务内部的信息，时间标识</span>
<span class="line">news					##新闻组</span>
<span class="line">user					##用户程序产生的相关信息</span>
<span class="line">uucp					##unix to nuix copy主机之间相关的通信</span>
<span class="line">local 1-7				##自定义的日志设备</span>
<span class="line"></span>
<span class="line">(2)日志级别分为：</span>
<span class="line">debug		##有调试信息的，日志通信最多</span>
<span class="line">info		##一般信息日志，最常用</span>
<span class="line">notice		##最具有重要性的普通条件的信息</span>
<span class="line">warning		##警告级别</span>
<span class="line">err			##错误级别，阻止某个功能或者模块不能正常工作的信息</span>
<span class="line">crit		##严重级别，阻止整个系统或者整个软件不能正常工作的信息</span>
<span class="line">alert		##需要立刻修改的信息</span>
<span class="line">emerg		##内核崩溃等重要信息</span>
<span class="line">none		##什么都不记录	</span>
<span class="line">注意：从上到下，级别从低到高，记录信息越来越少</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">3.由日志服务 rsyslogd 记录的日志文件，</span>
<span class="line">日志文件的内容：每一行都代表一个事件，每一行有以下四个内容：</span>
<span class="line">1)	事件产生的时间</span>
<span class="line">2)	产生事件的服务器的主机名</span>
<span class="line">3)	产生事件的服务名或程序名</span>
<span class="line">4)	事件的具体信息</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">4.日志如何查看实例</span>
<span class="line">查看一下 /var/log/secure 日志，这个日志中记录的是用户验证和授权方面的信息 来分析如何查看</span>
<span class="line"></span>
<span class="line">5.日志管理服务应用实例（增加自定义的日志）</span>
<span class="line">在/etc/rsyslog.conf 中添加一个日志文件/var/log/hsp.log,当有事件发送时(比如 sshd 服务相关事件)，该文件会接收到信息并保存. </span>
<span class="line">给小伙伴演示 重启，登录 的情况，看看是否有日志保存</span>
<span class="line"></span>
<span class="line">vim /etc/rsyslog.conf </span>
<span class="line">写入：</span>
<span class="line">	*.*  		/var/log/hsp.log</span>
<span class="line">	保存退出</span>
<span class="line">&gt; /var/log/hsp.log  (创建日志文件)</span>
<span class="line">然后重启，重启事件会被记录到/var/log/hsp.log中</span>
<span class="line">cat hsp.log | grep sshd 	就可以查到信息(sshd远程连接)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_21-4-日志轮替" tabindex="-1"><a class="header-anchor" href="#_21-4-日志轮替"><span>21.4.日志轮替</span></a></h3><h4 id="_21-4-1-基本介绍" tabindex="-1"><a class="header-anchor" href="#_21-4-1-基本介绍"><span>21.4.1.基本介绍</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">日志轮替(logrotate)就是把旧的日志文件移动并改名，同时建立新的空日志文件，当旧日志文件超出保存的范围之后，就会进行删除</span>
<span class="line">清除日志中旧的信息</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_21-4-2-日志轮替文件命名" tabindex="-1"><a class="header-anchor" href="#_21-4-2-日志轮替文件命名"><span>21.4.2.日志轮替文件命名</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">(1)	centos7 使用 logrotate 进行日志轮替管理</span>
<span class="line">要想改变日志轮替文件名字，通过 /etc/logrotate.conf 配置文件中“dateext” 参数</span>
<span class="line"></span>
<span class="line">(2)	如果配置文件中有“dateext”参数，那么日志会用日期来作为日志文件的后缀，例如 “secure-20201010”。</span>
<span class="line">这样日志文件名不会重叠，也就不需要日志文件的改名，只需要指定保存日志个数，删除多余的日志文件即可。</span>
<span class="line"></span>
<span class="line">(3)	如果配置文件中没有“dateext”参数，日志文件就需要进行改名了。</span>
<span class="line">当第一次进行日志轮替时，当前的“secure”日志会自动改名为“secure.1”，然后新建“secure”日志， 用来保存新的日志。</span>
<span class="line">当第二次进行日志轮替时，“secure.1” 会自动改名为“secure.2”， 当前的“secure”日志会自动改名为“secure.1”，然后也会新建“secure”日志，用来保存新的日志，以此类推。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_21-4-3-logrotate-配置文件" tabindex="-1"><a class="header-anchor" href="#_21-4-3-logrotate-配置文件"><span>21.4.3. logrotate 配置文件</span></a></h4><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">/etc/logrotate.conf 为 logrotate 的全局配置文件(写了日志文件轮替规则)</span>
<span class="line"></span>
<span class="line">/etc/logrotate.conf中的轮替规则适用于所有日志文件(除了单独指定轮替规则的日志文件)</span>
<span class="line">可以在/etc/logrotate.conf对某些日志文件单独指定轮替规则</span>
<span class="line">也可以把对某些日志文件单独指定的轮替规则写在/etc/logrotate.d目录下，然后在/etc/logrotate.conf 中include调用</span>
<span class="line"></span>
<span class="line">/etc/logrotate.conf文件内容：</span>
<span class="line">	# rotate log files weekly---&gt;每周对日志文件进行一次轮替</span>
<span class="line">	weekly</span>
<span class="line">	</span>
<span class="line">	# keep 4 weeks worth of backlogs---&gt;共保存 4 份日志文件，当建立新的日志文件时，旧的将会被删除</span>
<span class="line">	rotate 4</span>
<span class="line">	</span>
<span class="line">	# create new (empty) log files after rotating old ones---&gt;创建新的空的日志文件，在日志轮替后</span>
<span class="line">	create</span>
<span class="line">	</span>
<span class="line">	# use date as a suffix of the rotated file---&gt;使用日期作为日志轮替文件的后缀</span>
<span class="line">	dateext</span>
<span class="line">	</span>
<span class="line">	# uncomment this if you want your log files compressed---&gt;日志文件是否压缩。如果取消注释，则日志会在转储的同时进行压缩</span>
<span class="line">	#compress</span>
<span class="line">	</span>
<span class="line">	#RPM packages drop log rotation information into this directory </span>
<span class="line">	include /etc/logrotate.d---&gt;可以把一些单独的轮替规则写在/etc/logrotate.d下(在本文件中include调用一下就行)，也可以写在本文件中(如下面写的)</span>
<span class="line">	</span>
<span class="line">	#下面是单独设置，优先级更高。</span>
<span class="line">	# no packages own wtmp and btmp -- we&#39;ll rotate them here</span>
<span class="line">	/var/log/wtmp {</span>
<span class="line">		monthly					 # 每月对日志文件进行一次轮替</span>
<span class="line">		create 0664 root utmp 	 # 建立的新日志文件，权限是 0664  ，所有者是 root ，所属组是 utmp 组</span>
<span class="line">		minsize 1M				 # 日志文件最小轮替大小是 1MB 。也就是日志一定要超过 1MB 才会轮替，否则就算时间达到一个月，也不进行日志转储</span>
<span class="line">		rotate 1 				 # 仅保留一个日志备份。也就是只有 wtmp  和 wtmp.1  日志保留而已</span>
<span class="line">	}</span>
<span class="line">	</span>
<span class="line">	/var/log/btmp {</span>
<span class="line">		missingok 				 # 如果日志不存在，则忽略该日志的警告信息</span>
<span class="line">		monthly</span>
<span class="line">		create 0600 root utmp rotate 1</span>
<span class="line">	}</span>
<span class="line">	</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">	单独指定某个日志文件的轮替规则的参数说明：</span>
<span class="line">		daily					日志的轮替周期是每天</span>
<span class="line">		weekly					日志的轮替周期是每周</span>
<span class="line">		monthly					日志的轮替周期是每月</span>
<span class="line">		rotate 数字				保留的日志文件的个数。0 指没有备份</span>
<span class="line">		compress				日志轮替时，旧的日志进行压缩</span>
<span class="line">		create mode owner group	建立新日志，同时指定新日志的权限与所有者和所属组。</span>
<span class="line">		mail address			当日志轮替时，输出内容通过邮件发送到指定的邮件地址。</span>
<span class="line">		missingok				如果日志不存在，则忽略该日志的警告信息</span>
<span class="line">		notifempty				如果日志为空文件，则不进行日志轮替</span>
<span class="line">		minsize 大小				日志轮替的最小值。也就是日志一定要达到这个最小值才会轮替，否则就算时间达到也不轮替</span>
<span class="line">		size 大小				日志只有大于指定大小才进行日志轮替，而不是按照时间轮替。</span>
<span class="line">		dateext					使用日期作为日志轮替文件的后缀。</span>
<span class="line">		sharedscripts			在此关键字之后的脚本只执行一次。</span>
<span class="line">		prerotate/endscript		在日志轮替之前执行脚本命令。</span>
<span class="line">		postrotate/endscript	在日志轮替之后执行脚本命令。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_21-4-4-把自己的日志加入日志轮替" tabindex="-1"><a class="header-anchor" href="#_21-4-4-把自己的日志加入日志轮替"><span>21.4.4.把自己的日志加入日志轮替</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">1)	第一种方法：</span>
<span class="line">		直接在/etc/logrotate.conf 配置文件中写入该日志的轮替策略</span>
<span class="line">2)	第二种方法：</span>
<span class="line">		在/etc/logrotate.d/目录中新建立该日志的轮替文件，在该轮替文件中写入正确的轮替策略，因为该目录中的文件都会被“include”到主配置文件中，所以也可以把日志加入轮替。</span>
<span class="line"></span>
<span class="line">3)	推荐使用第二种方法，因为系统中需要轮替的日志非常多，如果全都直接写 入/etc/logrotate.conf 配置文件，那么这个文件的可管理性就会非常差，不利于此文件的维护。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_21-4-5-应用实例" tabindex="-1"><a class="header-anchor" href="#_21-4-5-应用实例"><span>21.4.5.应用实例</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">案例：在/etc/logrotate.conf 进行配置, 或者直接在 /etc/logrotate.d/ 下创建文件 hsplog  </span>
<span class="line">编写如下内容,	具体轮替的效果 可以参考 /var/log  下的 boot.log 情况.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411071146131.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">在 /etc/logrotate.d/ 下创建文件 hsplog  </span>
<span class="line">vim  hsplog  </span>
<span class="line">写入：</span>
<span class="line">	/var/log/hsp.log</span>
<span class="line">	{</span>
<span class="line">		missingok</span>
<span class="line">		daily</span>
<span class="line">		copytruncate</span>
<span class="line">		rotate 1</span>
<span class="line">		notifempty</span>
<span class="line">	}</span>
<span class="line">	保存退出</span>
<span class="line"></span>
<span class="line">这样就好了，因为/etc/logrotate.conf 中有：include /etc/logrotate.d</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_21-5-日志轮替机制原理" tabindex="-1"><a class="header-anchor" href="#_21-5-日志轮替机制原理"><span>21.5.日志轮替机制原理</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">日志轮替之所以可以在指定的时间备份日志，是依赖系统定时任务。</span>
<span class="line">在 /etc/cron.daily/目录，就会发现这个目录中是有 logrotate 文件(可执行)，</span>
<span class="line">logrotate 通过这个文件依赖定时任务执行的。</span>
<span class="line"></span>
<span class="line">crond定时后台程序会定时执行cron.daily内的文件</span>
<span class="line">logrotate 文件在cron.daily下</span>
<span class="line">所以也会定时执行文件中的轮替规则</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">写日志是rsyslogd</span>
<span class="line">日志轮替是logrotate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_21-6-查看内存日志" tabindex="-1"><a class="header-anchor" href="#_21-6-查看内存日志"><span>21.6.查看内存日志</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">有一些日志是写到内存里的，还没有写到文件里，因为这些日志是实时变化的</span>
<span class="line">重启之后内存日志会被清空</span>
<span class="line"></span>
<span class="line">查看内存日志指令：journalctl</span>
<span class="line">journalctl				查看全部</span>
<span class="line">journalctl -n 3			查看最新 3 条</span>
<span class="line">journalctl --since 19:00	--until 19:10:10	查看起始时间到结束时间的日志可加日期</span>
<span class="line">journalctl -p err		报错日志</span>
<span class="line">journalctl -o verbose	日志详细内容</span>
<span class="line">journalctl _PID=1245 _COMM=sshd	查看包含这些参数的日志（在详细日志查看） 或者 journalctl |	grep sshd</span>
<span class="line"> </span>
<span class="line"></span>
<span class="line">注意: journalctl	查看的是内存日志, 重启清空</span>
<span class="line"></span>
<span class="line">演示案例:</span>
<span class="line">使用 journalctl | grep sshd	来看看用户登录清空, 重启系统，再次查询，看看日志有什么变化没有</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="第二十二章-定制自己的-linux-系统" tabindex="-1"><a class="header-anchor" href="#第二十二章-定制自己的-linux-系统"><span>第二十二章：定制自己的 Linux 系统</span></a></h2><h3 id="_22-1-基本介绍" tabindex="-1"><a class="header-anchor" href="#_22-1-基本介绍"><span>22.1.基本介绍</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">通过裁剪现有 Linux 系统(CentOS7.6)，创建属于自己的 min Linux 小系统</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_22-2-基本原理" tabindex="-1"><a class="header-anchor" href="#_22-2-基本原理"><span>22.2.基本原理</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">启动流程介绍：</span>
<span class="line">制作 Linux 小系统之前，再了解一下 Linux 的启动流程：</span>
<span class="line">1、首先 Linux 要通过自检，检查硬件设备有没有故障</span>
<span class="line">2、如果有多块启动盘的话，需要在 BIOS 中选择启动磁盘</span>
<span class="line">3、启动 MBR 中的 bootloader 引导程序</span>
<span class="line">4、加载内核文件</span>
<span class="line">5、执行所有进程的父进程、老祖宗 systemd</span>
<span class="line">6、欢迎界面</span>
<span class="line"></span>
<span class="line">在 Linux 的启动流程中，加载内核文件时关键文件：</span>
<span class="line">1）kernel 文件:	vmlinuz-3.10.0-957.el7.x86_64</span>
<span class="line">2）initrd 文件:  initramfs-3.10.0-957.el7.x86_64.img</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_22-3-制作-min-linux-思路分析" tabindex="-1"><a class="header-anchor" href="#_22-3-制作-min-linux-思路分析"><span>22.3.制作 min linux 思路分析</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.在现有的 Linux 系统(centos7.6)上加一块硬盘/dev/sdb</span>
<span class="line">  在硬盘上分两个分区，一个是/boot，一个是/，并将其格式化。</span>
<span class="line">  需要明确的是，现在加的这个硬盘在现有的 Linux 系统中是/dev/sdb，但是，当我们把东西全部设置好时，要把这个硬盘拔除，放在新系统上，此时，就是/dev/sda</span>
<span class="line"></span>
<span class="line">2.在/dev/sdb 硬盘上，将其打造成独立的 Linux 系统，里面的所有文件是需要拷贝进去的</span>
<span class="line"></span>
<span class="line">3.作为能独立运行的 Linux 系统，内核是一定不能少，要把内核kernel 文件和 initramfs 文件也一起拷到/dev/sdb 上</span>
<span class="line"></span>
<span class="line">4.以上步骤完成，我们的自制 Linux 就完成，创建一个新的 linux 虚拟机，将其硬盘指向我们创建的硬盘，启动即可</span>
<span class="line"></span>
<span class="line">5.示意图</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_22-4-操作步骤" tabindex="-1"><a class="header-anchor" href="#_22-4-操作步骤"><span>22.4.操作步骤</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">操作步骤</span>
<span class="line">具体看文档+老师演示</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第二十四章-备份与恢复" tabindex="-1"><a class="header-anchor" href="#第二十四章-备份与恢复"><span>第二十四章：备份与恢复</span></a></h2><h3 id="_24-1-基本介绍" tabindex="-1"><a class="header-anchor" href="#_24-1-基本介绍"><span>24.1.基本介绍</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">虚拟机可以做快照。</span>
<span class="line">实体机无法做快照，如果系统出现异常或者数据损坏，后果严重，要重做系统，还会造成数据丢失。</span>
<span class="line">所以我们可以使用备份和恢复技术</span>
<span class="line"></span>
<span class="line">linux 的备份和恢复很简单，有两种方式：</span>
<span class="line">(1)	把需要的文件(或者分区)用 TAR 打包就行，下次需要恢复的时候，再解压开覆盖即可</span>
<span class="line">(2)	使用 dump 和 restore 命令</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_24-2-安装-dump-和-restore" tabindex="-1"><a class="header-anchor" href="#_24-2-安装-dump-和-restore"><span>24.2.安装 dump 和 restore</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">如果 linux 上没有 dump  和 restore 指令，要先安装</span>
<span class="line">yum -y install dump </span>
<span class="line">yum -y install restore</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_24-3-使用-dump-完成备份" tabindex="-1"><a class="header-anchor" href="#_24-3-使用-dump-完成备份"><span>24.3.使用 dump 完成备份</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.基本介绍：</span>
<span class="line">dump 支持分卷和增量备份（所谓增量备份是指备份 上次备份后，修改/增加过的文件，也称差异备份）</span>
<span class="line"></span>
<span class="line">2.语法说明：</span>
<span class="line">dump [-cu] [-123456789]	[-f &lt;备份后文件名&gt;] [-T &lt;日期&gt;] [要备份的目录或文件系统] </span>
<span class="line">dump [] -wW</span>
<span class="line"></span>
<span class="line">选项说明：</span>
<span class="line">	-c 					创建新的归档文件，并将由一个或多个文件参数所指定的内容写入归档文件的开头。</span>
<span class="line">	-0123456789 		备份的层级。0 为最完整备份，会备份所有文件。若指定 0 以上的层级，则备份至上一次备份以来修改或新增的文件，到 9 后，可以再次轮替.</span>
<span class="line">	-f &lt;备份后文件名&gt; 	指定备份后文件名</span>
<span class="line">	-j					调用 bzlib 库压缩备份文件，也就是将备份后的文件压缩成 bz2 格式，让文件更小</span>
<span class="line">	-T &lt;日期&gt; 			指定开始备份的时间与日期</span>
<span class="line">	-u 					备份完毕后，在/etc/dumpdares 中记录备份的文件系统，层级，日期与时间等。</span>
<span class="line">	-t  				指定文件名，若该文件已存在备份文件中，则列出名称</span>
<span class="line">	-W 					显示需要备份的文件及其最后一次备份的层级，时间，日期。</span>
<span class="line">	-w 					与-W 类似，但仅显示需要备份的文件。</span>
<span class="line"></span>
<span class="line">进行增量备份/备份层级要加-u，因为-u可以记录层级</span>
<span class="line"></span>
<span class="line">3.案例</span>
<span class="line">案例 1：将/boot 分区所有内容备份到/opt/boot.bak0.bz2 文件中，备份层级为“0”</span>
<span class="line">dump -0uj -f /opt/boot.bak0.bz2	/boot</span>
<span class="line">/boot 要备份的分区</span>
<span class="line"></span>
<span class="line">案例 2：在/boot 目录下增加新文件，备份层级为“1”(只备份上次使用层次“0”备份后发生过改变的数据), 注意比较看看这次生成的备份文件 boot1.bak  有多大</span>
<span class="line">dump -1uj -f /opt/boot.bak1.bz2 /boot</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">注意：通过 dump 命令在配合 crontab 可以实现无人值守备份</span>
<span class="line">写一个脚本</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">4. 显示需要备份的文件及其最后一次备份的层级，时间，日期</span>
<span class="line">dump -W</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">5.查看备份时间文件</span>
<span class="line">cat /etc/dumpdates</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">6.dump 备份文件或者目录</span>
<span class="line">前面我们在备份分区时，是可以支持增量备份的，</span>
<span class="line">如果备份文件或者目录，不再支持增量备份, 即只能使用 0 级别备份(-u不能写)</span>
<span class="line"></span>
<span class="line">案例：使用 dump 备份 /etc 整个目录</span>
<span class="line">dump -0j -f /opt/etc.bak.bz2 /etc/ </span>
<span class="line"></span>
<span class="line">#下面这条语句会报错，提示 DUMP: Only level 0 dumps are allowed on a subdirectory </span>
<span class="line">dump -1j -f /opt/etc.bak.bz2 /etc/</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">注意：如果要备份重要的文件，比如数据区，建议将文件上传到其它服务器保存，不要将鸡蛋放在同一个篮子。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_24-4-使用-restore-完成恢复" tabindex="-1"><a class="header-anchor" href="#_24-4-使用-restore-完成恢复"><span>24.4.使用 restore 完成恢复</span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" data-title="text" style="--vp-collapsed-lines:10;"><pre><code><span class="line">1.基本介绍：</span>
<span class="line">restore 命令用来恢复已备份的文件，可以从 dump 生成的备份文件中恢复原文件</span>
<span class="line"></span>
<span class="line">2.基本语法：</span>
<span class="line">restore	[模式选项] [选项]</span>
<span class="line"></span>
<span class="line">模式选项说明：不能混用，在一次命令中，只能指定一种。</span>
<span class="line">	-C	使用对比模式，将备份的文件与已存在的文件相互对比，看看是否存在差异</span>
<span class="line">	-i	使用交互模式，在进行还原操作时，restore 指令将依序询问用户</span>
<span class="line">	-r	进行还原模式 （一般用这个）</span>
<span class="line">	-t 	查看模式，看备份文件有哪些文件</span>
<span class="line">	</span>
<span class="line">选项</span>
<span class="line">-f &lt;备份设备&gt; 	从指定的文件中读取备份数据，进行还原操作</span>
<span class="line"></span>
<span class="line">3.案例：</span>
<span class="line">案例 1：restore 命令比较模式，比较备份文件和原文件的区别测试</span>
<span class="line">mv /boot/hello.java /boot/hello100.java</span>
<span class="line">restore -C -f boot.bak1.bz2	//注意和 最新的文件比较</span>
<span class="line"></span>
<span class="line">mv /boot/hello100.java /boot/hello.java </span>
<span class="line">restore -C -f boot.bak1.bz2</span>
<span class="line"> </span>
<span class="line">案例 2：restore 命令查看模式，看备份文件有哪些数据/文件</span>
<span class="line">restore -t -f boot.bak0.bz2</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">案例 3：restore 命令还原模式</span>
<span class="line">注意细节：如果你有增量备份，需要把增量备份文件也进行恢复，有几个增量备份文件，就要恢复几个，按顺序来恢复即可。</span>
<span class="line">mkdir /opt/boottmp </span>
<span class="line">cd /opt/boottmp</span>
<span class="line">restore -r -f /opt/boot.bak0.bz2 //恢复到第 1 次完全备份状态</span>
<span class="line">restore -r -f /opt/boot.bak1.bz2 //恢复到第 2 次增量备份状态</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">案例 4：restore 命令恢复备份的文件，或者整个目录的文件</span>
<span class="line">基本语法： restore -r -f 备份好的文件</span>
<span class="line"></span>
<span class="line">[root@hspedu100 opt]# mkdir etctmp </span>
<span class="line">[root@hspedu100 opt]# cd etctmp/</span>
<span class="line">[root@hspedu100 etctmp]# restore -r -f /opt/etc.bak0.bz2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div>`,375)]))}const v=n(e,[["render",d],["__file","Linux学习笔记-B站韩顺平.html.vue"]]),r=JSON.parse('{"path":"/codenotes/back/devtool/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-B%E7%AB%99%E9%9F%A9%E9%A1%BA%E5%B9%B3.html","title":"Linux","lang":"zh-CN","frontmatter":{"title":"Linux","icon":"/icon/linux.svg","category":["计算机"],"tag":["linux"],"sticky":false,"star":false,"article":false,"timeline":false,"date":"2024-11-07T00:00:00.000Z","headerDepth":2,"description":"第一章：内容介绍 1.1.本套 Linux 课程内容 1.2.Linux 使用在那些地方 1.3.Linux 的应用领域 第二章：Linux 入门 2.1.Linux 介绍 2.2.Linux 和 Unix 的关系 2.2.1.unix 是怎么来的 2.2.2.Linux 是怎么来的 2.2.3.Linux 和 Unix 关系图 第三章：VM 和 Li...","head":[["meta",{"property":"og:url","content":"https://hwchen.top/codenotes/back/devtool/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-B%E7%AB%99%E9%9F%A9%E9%A1%BA%E5%B9%B3.html"}],["meta",{"property":"og:site_name","content":"Ahzy"}],["meta",{"property":"og:title","content":"Linux"}],["meta",{"property":"og:description","content":"第一章：内容介绍 1.1.本套 Linux 课程内容 1.2.Linux 使用在那些地方 1.3.Linux 的应用领域 第二章：Linux 入门 2.1.Linux 介绍 2.2.Linux 和 Unix 的关系 2.2.1.unix 是怎么来的 2.2.2.Linux 是怎么来的 2.2.3.Linux 和 Unix 关系图 第三章：VM 和 Li..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://gitee.com/private_crh/notes/raw/master/typora/202411071140193.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"linux"}],["meta",{"property":"article:published_time","content":"2024-11-07T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Linux\\",\\"description\\":\\"第一章：内容介绍 1.1.本套 Linux 课程内容 1.2.Linux 使用在那些地方 1.3.Linux 的应用领域 第二章：Linux 入门 2.1.Linux 介绍 2.2.Linux 和 Unix 的关系 2.2.1.unix 是怎么来的 2.2.2.Linux 是怎么来的 2.2.3.Linux 和 Unix 关系图 第三章：VM 和 Li...\\"}"]]},"headers":[{"level":2,"title":"第一章：内容介绍","slug":"第一章-内容介绍","link":"#第一章-内容介绍","children":[{"level":3,"title":"1.1.本套 Linux 课程内容","slug":"_1-1-本套-linux-课程内容","link":"#_1-1-本套-linux-课程内容","children":[]},{"level":3,"title":"1.2.Linux 使用在那些地方","slug":"_1-2-linux-使用在那些地方","link":"#_1-2-linux-使用在那些地方","children":[]},{"level":3,"title":"1.3.Linux 的应用领域","slug":"_1-3-linux-的应用领域","link":"#_1-3-linux-的应用领域","children":[]}]},{"level":2,"title":"第二章：Linux 入门","slug":"第二章-linux-入门","link":"#第二章-linux-入门","children":[{"level":3,"title":"2.1.Linux 介绍","slug":"_2-1-linux-介绍","link":"#_2-1-linux-介绍","children":[]},{"level":3,"title":"2.2.Linux 和 Unix 的关系","slug":"_2-2-linux-和-unix-的关系","link":"#_2-2-linux-和-unix-的关系","children":[{"level":4,"title":"2.2.1.unix 是怎么来的","slug":"_2-2-1-unix-是怎么来的","link":"#_2-2-1-unix-是怎么来的","children":[]},{"level":4,"title":"2.2.2.Linux 是怎么来的","slug":"_2-2-2-linux-是怎么来的","link":"#_2-2-2-linux-是怎么来的","children":[]},{"level":4,"title":"2.2.3.Linux 和 Unix 关系图","slug":"_2-2-3-linux-和-unix-关系图","link":"#_2-2-3-linux-和-unix-关系图","children":[]}]}]},{"level":2,"title":"第三章：VM 和 Linux 的安装","slug":"第三章-vm-和-linux-的安装","link":"#第三章-vm-和-linux-的安装","children":[{"level":3,"title":"3.1.安装 vm 和 Centos","slug":"_3-1-安装-vm-和-centos","link":"#_3-1-安装-vm-和-centos","children":[]},{"level":3,"title":"3.2.网络连接的三种模式","slug":"_3-2-网络连接的三种模式","link":"#_3-2-网络连接的三种模式","children":[]},{"level":3,"title":"3.3.虚拟机的克隆","slug":"_3-3-虚拟机的克隆","link":"#_3-3-虚拟机的克隆","children":[]},{"level":3,"title":"3.4.虚拟机的快照","slug":"_3-4-虚拟机的快照","link":"#_3-4-虚拟机的快照","children":[]},{"level":3,"title":"3.5.虚拟机的迁移和删除","slug":"_3-5-虚拟机的迁移和删除","link":"#_3-5-虚拟机的迁移和删除","children":[]},{"level":3,"title":"3.6.安装vmtools","slug":"_3-6-安装vmtools","link":"#_3-6-安装vmtools","children":[]},{"level":3,"title":"3.7.设置共享文件夹","slug":"_3-7-设置共享文件夹","link":"#_3-7-设置共享文件夹","children":[]}]},{"level":2,"title":"第四章：目录结构","slug":"第四章-目录结构","link":"#第四章-目录结构","children":[{"level":3,"title":"4.1.目录结构基本介绍","slug":"_4-1-目录结构基本介绍","link":"#_4-1-目录结构基本介绍","children":[]},{"level":3,"title":"4.2.具体的目录结构(不要背，了解就好)","slug":"_4-2-具体的目录结构-不要背-了解就好","link":"#_4-2-具体的目录结构-不要背-了解就好","children":[]}]},{"level":2,"title":"第五章：远程登录到 Linux 服务器","slug":"第五章-远程登录到-linux-服务器","link":"#第五章-远程登录到-linux-服务器","children":[{"level":3,"title":"5.1.为什么需要远程登录 Linux","slug":"_5-1-为什么需要远程登录-linux","link":"#_5-1-为什么需要远程登录-linux","children":[]},{"level":3,"title":"5.2.下载Xshell6和Xftp6","slug":"_5-2-下载xshell6和xftp6","link":"#_5-2-下载xshell6和xftp6","children":[]}]},{"level":2,"title":"第六章：Vi 和 Vim 编辑器","slug":"第六章-vi-和-vim-编辑器","link":"#第六章-vi-和-vim-编辑器","children":[{"level":3,"title":"6.1. vi 和 vim 的基本介绍","slug":"_6-1-vi-和-vim-的基本介绍","link":"#_6-1-vi-和-vim-的基本介绍","children":[]},{"level":3,"title":"6.2. vi 和 vim 常用的三种模式","slug":"_6-2-vi-和-vim-常用的三种模式","link":"#_6-2-vi-和-vim-常用的三种模式","children":[]},{"level":3,"title":"6.3. vi 和 vim 基本使用","slug":"_6-3-vi-和-vim-基本使用","link":"#_6-3-vi-和-vim-基本使用","children":[]},{"level":3,"title":"6.4. 各种模式的相互切换","slug":"_6-4-各种模式的相互切换","link":"#_6-4-各种模式的相互切换","children":[]},{"level":3,"title":"6.5. vi 和 vim 快捷键","slug":"_6-5-vi-和-vim-快捷键","link":"#_6-5-vi-和-vim-快捷键","children":[]}]},{"level":2,"title":"第七章：开机、重启和用户登录注销","slug":"第七章-开机、重启和用户登录注销","link":"#第七章-开机、重启和用户登录注销","children":[{"level":3,"title":"7.1.关机和重启命令","slug":"_7-1-关机和重启命令","link":"#_7-1-关机和重启命令","children":[]},{"level":3,"title":"7.2.用户登录和注销","slug":"_7-2-用户登录和注销","link":"#_7-2-用户登录和注销","children":[]}]},{"level":2,"title":"第八章：用户管理","slug":"第八章-用户管理","link":"#第八章-用户管理","children":[{"level":3,"title":"8.1.基本介绍","slug":"_8-1-基本介绍","link":"#_8-1-基本介绍","children":[]},{"level":3,"title":"8.2.添加用户","slug":"_8-2-添加用户","link":"#_8-2-添加用户","children":[]},{"level":3,"title":"8.3.指定/修改密码","slug":"_8-3-指定-修改密码","link":"#_8-3-指定-修改密码","children":[]},{"level":3,"title":"8.4.删除用户","slug":"_8-4-删除用户","link":"#_8-4-删除用户","children":[]},{"level":3,"title":"8.5.查询用户信息","slug":"_8-5-查询用户信息","link":"#_8-5-查询用户信息","children":[]},{"level":3,"title":"8.6.切换用户","slug":"_8-6-切换用户","link":"#_8-6-切换用户","children":[]},{"level":3,"title":"8.7.查看当前用户/登录用户","slug":"_8-7-查看当前用户-登录用户","link":"#_8-7-查看当前用户-登录用户","children":[]},{"level":3,"title":"8.8.用户组","slug":"_8-8-用户组","link":"#_8-8-用户组","children":[]},{"level":3,"title":"8.9.用户和组的相关文件","slug":"_8-9-用户和组的相关文件","link":"#_8-9-用户和组的相关文件","children":[]}]},{"level":2,"title":"第九章：实用指令","slug":"第九章-实用指令","link":"#第九章-实用指令","children":[{"level":3,"title":"9.1.指定运行级别","slug":"_9-1-指定运行级别","link":"#_9-1-指定运行级别","children":[]},{"level":3,"title":"9.2.找回 root 密码","slug":"_9-2-找回-root-密码","link":"#_9-2-找回-root-密码","children":[]},{"level":3,"title":"9.3.帮助指令","slug":"_9-3-帮助指令","link":"#_9-3-帮助指令","children":[]},{"level":3,"title":"9.4.关于文件目录的指令","slug":"_9-4-关于文件目录的指令","link":"#_9-4-关于文件目录的指令","children":[]},{"level":3,"title":"9.5.关于时间日期的指令","slug":"_9-5-关于时间日期的指令","link":"#_9-5-关于时间日期的指令","children":[]},{"level":3,"title":"9.6.关于搜索查找有关的指令","slug":"_9-6-关于搜索查找有关的指令","link":"#_9-6-关于搜索查找有关的指令","children":[]},{"level":3,"title":"9.7.关于压缩和解压的指令","slug":"_9-7-关于压缩和解压的指令","link":"#_9-7-关于压缩和解压的指令","children":[]}]},{"level":2,"title":"第十章：组管理和权限管理","slug":"第十章-组管理和权限管理","link":"#第十章-组管理和权限管理","children":[{"level":3,"title":"10.1. Linux 组基本介绍","slug":"_10-1-linux-组基本介绍","link":"#_10-1-linux-组基本介绍","children":[]},{"level":3,"title":"10.2.文件/目录的所有者","slug":"_10-2-文件-目录的所有者","link":"#_10-2-文件-目录的所有者","children":[]},{"level":3,"title":"10.3.组的创建","slug":"_10-3-组的创建","link":"#_10-3-组的创建","children":[]},{"level":3,"title":"10.4.文件/目录的所在组","slug":"_10-4-文件-目录的所在组","link":"#_10-4-文件-目录的所在组","children":[]},{"level":3,"title":"10.5.其它组","slug":"_10-5-其它组","link":"#_10-5-其它组","children":[]},{"level":3,"title":"10.6.改变用户所在的组","slug":"_10-6-改变用户所在的组","link":"#_10-6-改变用户所在的组","children":[]},{"level":3,"title":"10.7.权限基本介绍","slug":"_10-7-权限基本介绍","link":"#_10-7-权限基本介绍","children":[]},{"level":3,"title":"10.8.rwx权限详解","slug":"_10-8-rwx权限详解","link":"#_10-8-rwx权限详解","children":[]},{"level":3,"title":"10.9.文件/目录权限实际案例","slug":"_10-9-文件-目录权限实际案例","link":"#_10-9-文件-目录权限实际案例","children":[]},{"level":3,"title":"10.10.修改权限-chmod","slug":"_10-10-修改权限-chmod","link":"#_10-10-修改权限-chmod","children":[]},{"level":3,"title":"10.11.修改文件/目录的所有者-chown","slug":"_10-11-修改文件-目录的所有者-chown","link":"#_10-11-修改文件-目录的所有者-chown","children":[]},{"level":3,"title":"10.12.修改文件/目录的所在组-chgrp","slug":"_10-12-修改文件-目录的所在组-chgrp","link":"#_10-12-修改文件-目录的所在组-chgrp","children":[]},{"level":3,"title":"10.13.最佳实践-警察和土匪游戏","slug":"_10-13-最佳实践-警察和土匪游戏","link":"#_10-13-最佳实践-警察和土匪游戏","children":[]},{"level":3,"title":"10.14.课后练习1","slug":"_10-14-课后练习1","link":"#_10-14-课后练习1","children":[]},{"level":3,"title":"10.15.课后练习2","slug":"_10-15-课后练习2","link":"#_10-15-课后练习2","children":[]}]},{"level":2,"title":"第十一章：定时任务调度","slug":"第十一章-定时任务调度","link":"#第十一章-定时任务调度","children":[{"level":3,"title":"11.1. crond任务调度","slug":"_11-1-crond任务调度","link":"#_11-1-crond任务调度","children":[]},{"level":3,"title":"11.2. at定时任务","slug":"_11-2-at定时任务","link":"#_11-2-at定时任务","children":[]}]},{"level":2,"title":"第十二章：Linux 磁盘分区、挂载","slug":"第十二章-linux-磁盘分区、挂载","link":"#第十二章-linux-磁盘分区、挂载","children":[{"level":3,"title":"12.1. Linux 分区","slug":"_12-1-linux-分区","link":"#_12-1-linux-分区","children":[{"level":4,"title":"12.1.1.原理介绍","slug":"_12-1-1-原理介绍","link":"#_12-1-1-原理介绍","children":[]},{"level":4,"title":"12.1.2.硬盘说明","slug":"_12-1-2-硬盘说明","link":"#_12-1-2-硬盘说明","children":[]},{"level":4,"title":"12.1.3.查看所有设备挂载情况","slug":"_12-1-3-查看所有设备挂载情况","link":"#_12-1-3-查看所有设备挂载情况","children":[]}]},{"level":3,"title":"12.2.挂载的经典案例","slug":"_12-2-挂载的经典案例","link":"#_12-2-挂载的经典案例","children":[{"level":4,"title":"12.2.1.说明","slug":"_12-2-1-说明","link":"#_12-2-1-说明","children":[]},{"level":4,"title":"12.2.2.如何增加一块硬盘","slug":"_12-2-2-如何增加一块硬盘","link":"#_12-2-2-如何增加一块硬盘","children":[]},{"level":4,"title":"12.2.3.虚拟机增加硬盘步骤 1-虚拟机添加硬盘","slug":"_12-2-3-虚拟机增加硬盘步骤-1-虚拟机添加硬盘","link":"#_12-2-3-虚拟机增加硬盘步骤-1-虚拟机添加硬盘","children":[]},{"level":4,"title":"12.2.4 虚拟机增加硬盘步骤 2-分区","slug":"_12-2-4-虚拟机增加硬盘步骤-2-分区","link":"#_12-2-4-虚拟机增加硬盘步骤-2-分区","children":[]},{"level":4,"title":"12.2.5 虚拟机增加硬盘步骤 3-格式化","slug":"_12-2-5-虚拟机增加硬盘步骤-3-格式化","link":"#_12-2-5-虚拟机增加硬盘步骤-3-格式化","children":[]},{"level":4,"title":"12.2.6.虚拟机增加硬盘步骤 4-挂载","slug":"_12-2-6-虚拟机增加硬盘步骤-4-挂载","link":"#_12-2-6-虚拟机增加硬盘步骤-4-挂载","children":[]},{"level":4,"title":"12.2.7.虚拟机增加硬盘步骤 5-设置可以自动挂载","slug":"_12-2-7-虚拟机增加硬盘步骤-5-设置可以自动挂载","link":"#_12-2-7-虚拟机增加硬盘步骤-5-设置可以自动挂载","children":[]}]},{"level":3,"title":"12.3.磁盘情况查询","slug":"_12-3-磁盘情况查询","link":"#_12-3-磁盘情况查询","children":[{"level":4,"title":"12.3.1.查询系统整体磁盘使用情况","slug":"_12-3-1-查询系统整体磁盘使用情况","link":"#_12-3-1-查询系统整体磁盘使用情况","children":[]},{"level":4,"title":"12.3.2.查询指定目录的磁盘占用情况","slug":"_12-3-2-查询指定目录的磁盘占用情况","link":"#_12-3-2-查询指定目录的磁盘占用情况","children":[]}]},{"level":3,"title":"12.4.磁盘情况-工作实用指令","slug":"_12-4-磁盘情况-工作实用指令","link":"#_12-4-磁盘情况-工作实用指令","children":[]}]},{"level":2,"title":"第十三章：网络配置","slug":"第十三章-网络配置","link":"#第十三章-网络配置","children":[{"level":3,"title":"13.1. Linux 网络配置原理图","slug":"_13-1-linux-网络配置原理图","link":"#_13-1-linux-网络配置原理图","children":[]},{"level":3,"title":"13.2.查看网络IP和网关","slug":"_13-2-查看网络ip和网关","link":"#_13-2-查看网络ip和网关","children":[]},{"level":3,"title":"13.3. linux 网络环境配置","slug":"_13-3-linux-网络环境配置","link":"#_13-3-linux-网络环境配置","children":[{"level":4,"title":"13.3.1.第一种方法(自动获取ip)：","slug":"_13-3-1-第一种方法-自动获取ip","link":"#_13-3-1-第一种方法-自动获取ip","children":[]},{"level":4,"title":"13.3.2.第二种方法(手动设置ip)","slug":"_13-3-2-第二种方法-手动设置ip","link":"#_13-3-2-第二种方法-手动设置ip","children":[]}]},{"level":3,"title":"13.4.设置Linux系统的主机名和 hosts 映射","slug":"_13-4-设置linux系统的主机名和-hosts-映射","link":"#_13-4-设置linux系统的主机名和-hosts-映射","children":[{"level":4,"title":"13.4.1.设置主机名","slug":"_13-4-1-设置主机名","link":"#_13-4-1-设置主机名","children":[]},{"level":4,"title":"13.4.2.设置 hosts 映射","slug":"_13-4-2-设置-hosts-映射","link":"#_13-4-2-设置-hosts-映射","children":[]}]},{"level":3,"title":"13.5.主机名解析过程分析(hosts、DNS)","slug":"_13-5-主机名解析过程分析-hosts、dns","link":"#_13-5-主机名解析过程分析-hosts、dns","children":[{"level":4,"title":"13.5.1. hosts","slug":"_13-5-1-hosts","link":"#_13-5-1-hosts","children":[]},{"level":4,"title":"13.5.2. DNS","slug":"_13-5-2-dns","link":"#_13-5-2-dns","children":[]},{"level":4,"title":"13.5.3.应用实例","slug":"_13-5-3-应用实例","link":"#_13-5-3-应用实例","children":[]}]}]},{"level":2,"title":"第十四章：进程管理(重点)","slug":"第十四章-进程管理-重点","link":"#第十四章-进程管理-重点","children":[{"level":3,"title":"14.1.基本介绍","slug":"_14-1-基本介绍","link":"#_14-1-基本介绍","children":[]},{"level":3,"title":"14.2. ps命令：显示系统正在执行的进程","slug":"_14-2-ps命令-显示系统正在执行的进程","link":"#_14-2-ps命令-显示系统正在执行的进程","children":[]},{"level":3,"title":"14.3. kill 和 killall指令：终止进程","slug":"_14-3-kill-和-killall指令-终止进程","link":"#_14-3-kill-和-killall指令-终止进程","children":[]},{"level":3,"title":"14.4.查看进程树 pstree","slug":"_14-4-查看进程树-pstree","link":"#_14-4-查看进程树-pstree","children":[]},{"level":3,"title":"14.5.服务(service)管理","slug":"_14-5-服务-service-管理","link":"#_14-5-服务-service-管理","children":[{"level":4,"title":"14.5.1.介绍","slug":"_14-5-1-介绍","link":"#_14-5-1-介绍","children":[]},{"level":4,"title":"14.5.2. service 管理指令","slug":"_14-5-2-service-管理指令","link":"#_14-5-2-service-管理指令","children":[]},{"level":4,"title":"14.5.3.查看服务名方式","slug":"_14-5-3-查看服务名方式","link":"#_14-5-3-查看服务名方式","children":[]},{"level":4,"title":"14.5.4.服务的运行级别(runlevel)","slug":"_14-5-4-服务的运行级别-runlevel","link":"#_14-5-4-服务的运行级别-runlevel","children":[]},{"level":4,"title":"14.5.5. CentOS7 后运行级别说明","slug":"_14-5-5-centos7-后运行级别说明","link":"#_14-5-5-centos7-后运行级别说明","children":[]},{"level":4,"title":"14.5.6. chkconfig 指令","slug":"_14-5-6-chkconfig-指令","link":"#_14-5-6-chkconfig-指令","children":[]},{"level":4,"title":"14.5.7. systemctl 管理指令","slug":"_14-5-7-systemctl-管理指令","link":"#_14-5-7-systemctl-管理指令","children":[]},{"level":4,"title":"14.5.9. systemctl 设置服务的自启动状态","slug":"_14-5-9-systemctl-设置服务的自启动状态","link":"#_14-5-9-systemctl-设置服务的自启动状态","children":[]},{"level":4,"title":"14.5.10. firewall 指令：打开或者关闭指定端口","slug":"_14-5-10-firewall-指令-打开或者关闭指定端口","link":"#_14-5-10-firewall-指令-打开或者关闭指定端口","children":[]}]},{"level":3,"title":"14.6. top指令：动态监控进程","slug":"_14-6-top指令-动态监控进程","link":"#_14-6-top指令-动态监控进程","children":[{"level":4,"title":"14.6.1.介绍","slug":"_14-6-1-介绍","link":"#_14-6-1-介绍","children":[]},{"level":4,"title":"14.6.2.基本语法","slug":"_14-6-2-基本语法","link":"#_14-6-2-基本语法","children":[]},{"level":4,"title":"14.6.3.交互操作说明","slug":"_14-6-3-交互操作说明","link":"#_14-6-3-交互操作说明","children":[]},{"level":4,"title":"14.6.4.应用实例","slug":"_14-6-4-应用实例","link":"#_14-6-4-应用实例","children":[]}]},{"level":3,"title":"14.7. netstat指令：监控网络状态","slug":"_14-7-netstat指令-监控网络状态","link":"#_14-7-netstat指令-监控网络状态","children":[{"level":4,"title":"14.7.1.查看系统网络情况netstat","slug":"_14-7-1-查看系统网络情况netstat","link":"#_14-7-1-查看系统网络情况netstat","children":[]},{"level":4,"title":"14.7.2.检测主机连接命令ping","slug":"_14-7-2-检测主机连接命令ping","link":"#_14-7-2-检测主机连接命令ping","children":[]}]}]},{"level":2,"title":"第十五章： RPM 与 YUM","slug":"第十五章-rpm-与-yum","link":"#第十五章-rpm-与-yum","children":[{"level":3,"title":"15.1. RPM","slug":"_15-1-rpm","link":"#_15-1-rpm","children":[{"level":4,"title":"15.1.1.介绍","slug":"_15-1-1-介绍","link":"#_15-1-1-介绍","children":[]},{"level":4,"title":"15.1.2. rpm 的简单查询指令","slug":"_15-1-2-rpm-的简单查询指令","link":"#_15-1-2-rpm-的简单查询指令","children":[]},{"level":4,"title":"15.1.3. rpm 的其它查询指令","slug":"_15-1-3-rpm-的其它查询指令","link":"#_15-1-3-rpm-的其它查询指令","children":[]},{"level":4,"title":"15.1.4.删除 rpm 软件包","slug":"_15-1-4-删除-rpm-软件包","link":"#_15-1-4-删除-rpm-软件包","children":[]},{"level":4,"title":"15.1.5.安装 rpm 软件包","slug":"_15-1-5-安装-rpm-软件包","link":"#_15-1-5-安装-rpm-软件包","children":[]}]},{"level":3,"title":"15.2. yum","slug":"_15-2-yum","link":"#_15-2-yum","children":[{"level":4,"title":"15.2.1.介绍","slug":"_15-2-1-介绍","link":"#_15-2-1-介绍","children":[]},{"level":4,"title":"15.2.2. yum 的基本指令","slug":"_15-2-2-yum-的基本指令","link":"#_15-2-2-yum-的基本指令","children":[]}]},{"level":3,"title":"15.3.总结","slug":"_15-3-总结","link":"#_15-3-总结","children":[]}]},{"level":2,"title":"第十七章：Shell编程","slug":"第十七章-shell编程","link":"#第十七章-shell编程","children":[{"level":3,"title":"17.1.为什么要学习Shell 编程","slug":"_17-1-为什么要学习shell-编程","link":"#_17-1-为什么要学习shell-编程","children":[]},{"level":3,"title":"17.2. Shell 是什么","slug":"_17-2-shell-是什么","link":"#_17-2-shell-是什么","children":[]},{"level":3,"title":"17.3. Shell 脚本","slug":"_17-3-shell-脚本","link":"#_17-3-shell-脚本","children":[]},{"level":3,"title":"17.4. Shell 的变量","slug":"_17-4-shell-的变量","link":"#_17-4-shell-的变量","children":[{"level":4,"title":"17.4.1. Shell 变量介绍","slug":"_17-4-1-shell-变量介绍","link":"#_17-4-1-shell-变量介绍","children":[]},{"level":4,"title":"17.4.2. shell 自定义变量","slug":"_17-4-2-shell-自定义变量","link":"#_17-4-2-shell-自定义变量","children":[]},{"level":4,"title":"17.5.设置环境变量(全局变量)","slug":"_17-5-设置环境变量-全局变量","link":"#_17-5-设置环境变量-全局变量","children":[]}]},{"level":3,"title":"17.6.位置参数变量","slug":"_17-6-位置参数变量","link":"#_17-6-位置参数变量","children":[]},{"level":3,"title":"17.7.预定义变量","slug":"_17-7-预定义变量","link":"#_17-7-预定义变量","children":[{"level":4,"title":"17.8.运算符","slug":"_17-8-运算符","link":"#_17-8-运算符","children":[]}]},{"level":3,"title":"17.9.条件判断","slug":"_17-9-条件判断","link":"#_17-9-条件判断","children":[]},{"level":3,"title":"17.10.流程控制","slug":"_17-10-流程控制","link":"#_17-10-流程控制","children":[{"level":4,"title":"17.10.1. if 语句","slug":"_17-10-1-if-语句","link":"#_17-10-1-if-语句","children":[]},{"level":4,"title":"17.10.2. case 语句","slug":"_17-10-2-case-语句","link":"#_17-10-2-case-语句","children":[]},{"level":4,"title":"17.10.3. for 循环","slug":"_17-10-3-for-循环","link":"#_17-10-3-for-循环","children":[]},{"level":4,"title":"17.10.4. while 循环","slug":"_17-10-4-while-循环","link":"#_17-10-4-while-循环","children":[]}]},{"level":3,"title":"17.11. read 读取控制台输入","slug":"_17-11-read-读取控制台输入","link":"#_17-11-read-读取控制台输入","children":[]},{"level":3,"title":"17.12.函数","slug":"_17-12-函数","link":"#_17-12-函数","children":[{"level":4,"title":"17.12.1.函数介绍","slug":"_17-12-1-函数介绍","link":"#_17-12-1-函数介绍","children":[]},{"level":4,"title":"17.12.2.系统函数","slug":"_17-12-2-系统函数","link":"#_17-12-2-系统函数","children":[]},{"level":4,"title":"17.12.3.自定义函数","slug":"_17-12-3-自定义函数","link":"#_17-12-3-自定义函数","children":[]}]},{"level":3,"title":"17.13. Shell 编程综合案例","slug":"_17-13-shell-编程综合案例","link":"#_17-13-shell-编程综合案例","children":[]}]},{"level":2,"title":"第二十一章：日志管理","slug":"第二十一章-日志管理","link":"#第二十一章-日志管理","children":[{"level":3,"title":"21.1.基本介绍","slug":"_21-1-基本介绍","link":"#_21-1-基本介绍","children":[]},{"level":3,"title":"21.2.系统常用的日志","slug":"_21-2-系统常用的日志","link":"#_21-2-系统常用的日志","children":[]},{"level":3,"title":"21.3.日志管理服务 rsyslogd","slug":"_21-3-日志管理服务-rsyslogd","link":"#_21-3-日志管理服务-rsyslogd","children":[]},{"level":3,"title":"21.4.日志轮替","slug":"_21-4-日志轮替","link":"#_21-4-日志轮替","children":[{"level":4,"title":"21.4.1.基本介绍","slug":"_21-4-1-基本介绍","link":"#_21-4-1-基本介绍","children":[]},{"level":4,"title":"21.4.2.日志轮替文件命名","slug":"_21-4-2-日志轮替文件命名","link":"#_21-4-2-日志轮替文件命名","children":[]},{"level":4,"title":"21.4.3. logrotate 配置文件","slug":"_21-4-3-logrotate-配置文件","link":"#_21-4-3-logrotate-配置文件","children":[]},{"level":4,"title":"21.4.4.把自己的日志加入日志轮替","slug":"_21-4-4-把自己的日志加入日志轮替","link":"#_21-4-4-把自己的日志加入日志轮替","children":[]},{"level":4,"title":"21.4.5.应用实例","slug":"_21-4-5-应用实例","link":"#_21-4-5-应用实例","children":[]}]},{"level":3,"title":"21.5.日志轮替机制原理","slug":"_21-5-日志轮替机制原理","link":"#_21-5-日志轮替机制原理","children":[]},{"level":3,"title":"21.6.查看内存日志","slug":"_21-6-查看内存日志","link":"#_21-6-查看内存日志","children":[]}]},{"level":2,"title":"第二十二章：定制自己的 Linux 系统","slug":"第二十二章-定制自己的-linux-系统","link":"#第二十二章-定制自己的-linux-系统","children":[{"level":3,"title":"22.1.基本介绍","slug":"_22-1-基本介绍","link":"#_22-1-基本介绍","children":[]},{"level":3,"title":"22.2.基本原理","slug":"_22-2-基本原理","link":"#_22-2-基本原理","children":[]},{"level":3,"title":"22.3.制作 min linux 思路分析","slug":"_22-3-制作-min-linux-思路分析","link":"#_22-3-制作-min-linux-思路分析","children":[]},{"level":3,"title":"22.4.操作步骤","slug":"_22-4-操作步骤","link":"#_22-4-操作步骤","children":[]}]},{"level":2,"title":"第二十四章：备份与恢复","slug":"第二十四章-备份与恢复","link":"#第二十四章-备份与恢复","children":[{"level":3,"title":"24.1.基本介绍","slug":"_24-1-基本介绍","link":"#_24-1-基本介绍","children":[]},{"level":3,"title":"24.2.安装 dump 和 restore","slug":"_24-2-安装-dump-和-restore","link":"#_24-2-安装-dump-和-restore","children":[]},{"level":3,"title":"24.3.使用 dump 完成备份","slug":"_24-3-使用-dump-完成备份","link":"#_24-3-使用-dump-完成备份","children":[]},{"level":3,"title":"24.4.使用 restore 完成恢复","slug":"_24-4-使用-restore-完成恢复","link":"#_24-4-使用-restore-完成恢复","children":[]}]}],"git":{},"readingTime":{"minutes":102.87,"words":30860},"filePathRelative":"codenotes/back/devtool/Linux学习笔记-B站韩顺平.md","localizedDate":"2024年11月7日","excerpt":"<h2>第一章：内容介绍</h2>\\n<h3>1.1.本套 Linux 课程内容</h3>\\n<p><img src=\\"https://gitee.com/private_crh/notes/raw/master/typora/202411071140193.png\\" alt=\\"\\" loading=\\"lazy\\"><br>\\n<img src=\\"https://gitee.com/private_crh/notes/raw/master/typora/202411071143371.png\\" alt=\\"\\" loading=\\"lazy\\"></p>\\n<h3>1.2.Linux 使用在那些地方</h3>\\n<figure><img src=\\"https://gitee.com/private_crh/notes/raw/master/typora/202411071143166.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>","autoDesc":true}');export{v as comp,r as data};
