import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as t,o as r}from"./app-eWV4nnR8.js";const a={};function l(p,i){return r(),n("div",null,i[0]||(i[0]=[t('<h1 id="_1、spring能做什么" tabindex="-1"><a class="header-anchor" href="#_1、spring能做什么"><span>1、Spring能做什么</span></a></h1><h2 id="_1-1、spring的能力" tabindex="-1"><a class="header-anchor" href="#_1-1、spring的能力"><span>1.1、Spring的能力</span></a></h2><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411070002564.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_1-2、spring的生态" tabindex="-1"><a class="header-anchor" href="#_1-2、spring的生态"><span>1.2、Spring的生态</span></a></h2><p>https://spring.io/projects/spring-boot</p><p>覆盖了：</p><p>web开发</p><p>数据访问</p><p>安全控制</p><p>分布式</p><p>消息服务</p><p>移动开发</p><p>批处理</p><p>......</p><h2 id="_1-3、spring5重大升级" tabindex="-1"><a class="header-anchor" href="#_1-3、spring5重大升级"><span>1.3、Spring5重大升级</span></a></h2><h3 id="_1-3-1、响应式编程" tabindex="-1"><a class="header-anchor" href="#_1-3-1、响应式编程"><span>1.3.1、响应式编程</span></a></h3><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411070002490.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_1-3-2、内部源码设计" tabindex="-1"><a class="header-anchor" href="#_1-3-2、内部源码设计"><span>1.3.2、内部源码设计</span></a></h3><p>基于Java8的一些新特性，如：接口默认实现。重新设计源码架构。</p><h1 id="_2、为什么用springboot" tabindex="-1"><a class="header-anchor" href="#_2、为什么用springboot"><span>2、为什么用SpringBoot</span></a></h1><p>Spring Boot makes it easy to create stand-alone, production-grade Spring based Applications that you can &quot;just run&quot;.</p><p>能快速创建出生产级别的Spring应用</p><h2 id="_2-1、springboot优点" tabindex="-1"><a class="header-anchor" href="#_2-1、springboot优点"><span>2.1、SpringBoot优点</span></a></h2><ul><li><p>Create stand-alone Spring applications</p></li><li><ul><li>创建独立Spring应用</li></ul></li><li><p>Embed Tomcat, Jetty or Undertow directly (no need to deploy WAR files)</p></li><li><ul><li>内嵌web服务器</li></ul></li><li><p>Provide opinionated &#39;starter&#39; dependencies to simplify your build configuration</p></li><li><ul><li>自动starter依赖，简化构建配置</li></ul></li><li><p>Automatically configure Spring and 3rd party libraries whenever possible</p></li><li><ul><li>自动配置Spring以及第三方功能</li></ul></li><li><p>Provide production-ready features such as metrics, health checks, and externalized configuration</p></li><li><ul><li>提供生产级别的监控、健康检查及外部化配置</li></ul></li><li><p>Absolutely no code generation and no requirement for XML configuration</p></li><li><ul><li>无代码生成、无需编写XML</li></ul></li></ul><p>SpringBoot是整合Spring技术栈的一站式框架</p><p>SpringBoot是简化Spring技术栈的快速开发脚手架</p><h2 id="_2-2、springboot缺点" tabindex="-1"><a class="header-anchor" href="#_2-2、springboot缺点"><span>2.2、SpringBoot缺点</span></a></h2><ul><li>人称版本帝，迭代快，需要时刻关注变化</li><li>封装太深，内部原理复杂，不容易精通</li></ul><h1 id="_3、时代背景" tabindex="-1"><a class="header-anchor" href="#_3、时代背景"><span>3、时代背景</span></a></h1><h2 id="_3-1、微服务" tabindex="-1"><a class="header-anchor" href="#_3-1、微服务"><span>3.1、微服务</span></a></h2><p><a href="https://martinfowler.com/articles/microservices.html" target="_blank" rel="noopener noreferrer">James Lewis and Martin Fowler (2014)</a> 提出微服务完整概念。https://martinfowler.com/microservices/</p><p>In short, the <strong>microservice architectural style</strong> is an approach to developing a single application as a <strong>suite of small services</strong>, each <strong>running in its own process</strong> and communicating with <strong>lightweight</strong> mechanisms, often an <strong>HTTP</strong> resource API. These services are <strong>built around business capabilities</strong> and <strong>independently deployable</strong> by fully <strong>automated deployment</strong> machinery. There is a <strong>bare minimum of centralized management</strong> of these services, which may be <strong>written in different programming languages</strong> and use different data storage technologies.-- <a href="https://martinfowler.com/articles/microservices.html" target="_blank" rel="noopener noreferrer">James Lewis and Martin Fowler (2014)</a></p><ul><li>微服务是一种架构风格</li><li>一个应用拆分为一组小型服务</li><li>每个服务运行在自己的进程内，也就是可独立部署和升级</li><li>服务之间使用轻量级HTTP交互</li><li>服务围绕业务功能拆分</li><li>可以由全自动部署机制独立部署</li><li>去中心化，服务自治。服务可以使用不同的语言、不同的存储技术</li></ul><h2 id="_3-2、分布式" tabindex="-1"><a class="header-anchor" href="#_3-2、分布式"><span>3.2、分布式</span></a></h2><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411070002640.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="分布式的困难" tabindex="-1"><a class="header-anchor" href="#分布式的困难"><span>分布式的困难</span></a></h3><ul><li>远程调用</li><li>服务发现</li><li>负载均衡</li><li>服务容错</li><li>配置管理</li><li>服务监控</li><li>链路追踪</li><li>日志管理</li><li>任务调度</li><li>......</li></ul><h3 id="分布式的解决" tabindex="-1"><a class="header-anchor" href="#分布式的解决"><span>分布式的解决</span></a></h3><ul><li>SpringBoot + SpringCloud</li></ul><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411070003195.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_3-3、云原生" tabindex="-1"><a class="header-anchor" href="#_3-3、云原生"><span>3.3、云原生</span></a></h2><p>原生应用如何上云。 Cloud Native</p><h3 id="上云的困难" tabindex="-1"><a class="header-anchor" href="#上云的困难"><span>上云的困难</span></a></h3><ul><li>服务自愈</li><li>弹性伸缩</li><li>服务隔离</li><li>自动化部署</li><li>灰度发布</li><li>流量治理</li><li>......</li></ul><h3 id="上云的解决" tabindex="-1"><a class="header-anchor" href="#上云的解决"><span>上云的解决</span></a></h3><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411070004461.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h1 id="_4、如何学习springboot" tabindex="-1"><a class="header-anchor" href="#_4、如何学习springboot"><span>4、如何学习SpringBoot</span></a></h1><h2 id="_4-1、官网文档架构" tabindex="-1"><a class="header-anchor" href="#_4-1、官网文档架构"><span>4.1、官网文档架构</span></a></h2><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411070004927.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411070002537.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>查看版本新特性；</p><p>https://github.com/spring-projects/spring-boot/wiki#release-notes</p><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411070002481.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',53)]))}const g=e(a,[["render",l],["__file","1spring与springboot.html.vue"]]),c=JSON.parse('{"path":"/codenotes/back/spring/springboot/1spring%E4%B8%8Espringboot.html","title":"绪论","lang":"zh-CN","frontmatter":{"title":"绪论","category":["计算机"],"tag":["springboot"],"sticky":false,"star":false,"article":false,"timeline":false,"isOriginal":true,"description":"1、Spring能做什么 1.1、Spring的能力 1.2、Spring的生态 https://spring.io/projects/spring-boot 覆盖了： web开发 数据访问 安全控制 分布式 消息服务 移动开发 批处理 ...... 1.3、Spring5重大升级 1.3.1、响应式编程 1.3.2、内部源码设计 基于Java8的一些...","head":[["meta",{"property":"og:url","content":"https://hwchen.top/codenotes/back/spring/springboot/1spring%E4%B8%8Espringboot.html"}],["meta",{"property":"og:site_name","content":"Ahzy"}],["meta",{"property":"og:title","content":"绪论"}],["meta",{"property":"og:description","content":"1、Spring能做什么 1.1、Spring的能力 1.2、Spring的生态 https://spring.io/projects/spring-boot 覆盖了： web开发 数据访问 安全控制 分布式 消息服务 移动开发 批处理 ...... 1.3、Spring5重大升级 1.3.1、响应式编程 1.3.2、内部源码设计 基于Java8的一些..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://gitee.com/private_crh/notes/raw/master/typora/202411070002564.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"springboot"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"绪论\\",\\"description\\":\\"1、Spring能做什么 1.1、Spring的能力 1.2、Spring的生态 https://spring.io/projects/spring-boot 覆盖了： web开发 数据访问 安全控制 分布式 消息服务 移动开发 批处理 ...... 1.3、Spring5重大升级 1.3.1、响应式编程 1.3.2、内部源码设计 基于Java8的一些...\\"}"]]},"headers":[{"level":1,"title":"1、Spring能做什么","slug":"_1、spring能做什么","link":"#_1、spring能做什么","children":[{"level":2,"title":"1.1、Spring的能力","slug":"_1-1、spring的能力","link":"#_1-1、spring的能力","children":[]},{"level":2,"title":"1.2、Spring的生态","slug":"_1-2、spring的生态","link":"#_1-2、spring的生态","children":[]},{"level":2,"title":"1.3、Spring5重大升级","slug":"_1-3、spring5重大升级","link":"#_1-3、spring5重大升级","children":[{"level":3,"title":"1.3.1、响应式编程","slug":"_1-3-1、响应式编程","link":"#_1-3-1、响应式编程","children":[]},{"level":3,"title":"1.3.2、内部源码设计","slug":"_1-3-2、内部源码设计","link":"#_1-3-2、内部源码设计","children":[]}]}]},{"level":1,"title":"2、为什么用SpringBoot","slug":"_2、为什么用springboot","link":"#_2、为什么用springboot","children":[{"level":2,"title":"2.1、SpringBoot优点","slug":"_2-1、springboot优点","link":"#_2-1、springboot优点","children":[]},{"level":2,"title":"2.2、SpringBoot缺点","slug":"_2-2、springboot缺点","link":"#_2-2、springboot缺点","children":[]}]},{"level":1,"title":"3、时代背景","slug":"_3、时代背景","link":"#_3、时代背景","children":[{"level":2,"title":"3.1、微服务","slug":"_3-1、微服务","link":"#_3-1、微服务","children":[]},{"level":2,"title":"3.2、分布式","slug":"_3-2、分布式","link":"#_3-2、分布式","children":[{"level":3,"title":"分布式的困难","slug":"分布式的困难","link":"#分布式的困难","children":[]},{"level":3,"title":"分布式的解决","slug":"分布式的解决","link":"#分布式的解决","children":[]}]},{"level":2,"title":"3.3、云原生","slug":"_3-3、云原生","link":"#_3-3、云原生","children":[{"level":3,"title":"上云的困难","slug":"上云的困难","link":"#上云的困难","children":[]},{"level":3,"title":"上云的解决","slug":"上云的解决","link":"#上云的解决","children":[]}]}]},{"level":1,"title":"4、如何学习SpringBoot","slug":"_4、如何学习springboot","link":"#_4、如何学习springboot","children":[{"level":2,"title":"4.1、官网文档架构","slug":"_4-1、官网文档架构","link":"#_4-1、官网文档架构","children":[]}]}],"git":{},"readingTime":{"minutes":2.58,"words":774},"filePathRelative":"codenotes/back/spring/springboot/1spring与springboot.md","excerpt":"\\n<h2>1.1、Spring的能力</h2>\\n<figure><img src=\\"https://gitee.com/private_crh/notes/raw/master/typora/202411070002564.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<h2>1.2、Spring的生态</h2>\\n<p>https://spring.io/projects/spring-boot</p>\\n<p>覆盖了：</p>\\n<p>web开发</p>\\n<p>数据访问</p>\\n<p>安全控制</p>","autoDesc":true}');export{g as comp,c as data};
