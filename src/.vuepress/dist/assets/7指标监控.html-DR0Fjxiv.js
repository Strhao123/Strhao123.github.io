import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as t,o as e}from"./app-eWV4nnR8.js";const p={};function l(o,n){return e(),a("div",null,n[0]||(n[0]=[t(`<h1 id="_1、springboot-actuator" tabindex="-1"><a class="header-anchor" href="#_1、springboot-actuator"><span>1、SpringBoot Actuator</span></a></h1><h2 id="_1、简介" tabindex="-1"><a class="header-anchor" href="#_1、简介"><span>1、简介</span></a></h2><p>未来每一个微服务在云上部署以后，我们都需要对其进行监控、追踪、审计、控制等。SpringBoot就抽取了Actuator场景，使得我们每个微服务快速引用即可获得生产级别的应用监控、审计等功能。</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411070014654.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_2、1-x与2-x的不同" tabindex="-1"><a class="header-anchor" href="#_2、1-x与2-x的不同"><span>2、1.x与2.x的不同</span></a></h2><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411070014716.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_3、如何使用" tabindex="-1"><a class="header-anchor" href="#_3、如何使用"><span>3、如何使用</span></a></h2><ul><li>引入场景</li><li>访问 http://localhost:8080/actuator/**</li><li>暴露所有监控信息为HTTP</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">management</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">enabled-by-default</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#暴露所有端点信息</span></span>
<span class="line">    <span class="token key atrule">web</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">exposure</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">&#39;*&#39;</span>  <span class="token comment">#以web方式暴露</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>测试</li></ul><p>http://localhost:8080/actuator/beans</p><p>http://localhost:8080/actuator/configprops</p><p>http://localhost:8080/actuator/metrics</p><p>http://localhost:8080/actuator/metrics/jvm.gc.pause</p><p><a href="http://localhost:8080/actuator/metrics" target="_blank" rel="noopener noreferrer">http://localhost:8080/actuator/</a>endpointName/detailPath 。。。。。。</p><h2 id="_4、可视化" tabindex="-1"><a class="header-anchor" href="#_4、可视化"><span>4、可视化</span></a></h2><p>https://github.com/codecentric/spring-boot-admin</p><h1 id="_2、actuator-endpoint" tabindex="-1"><a class="header-anchor" href="#_2、actuator-endpoint"><span>2、Actuator Endpoint</span></a></h1><h2 id="_1、最常使用的端点" tabindex="-1"><a class="header-anchor" href="#_1、最常使用的端点"><span>1、最常使用的端点</span></a></h2><table><thead><tr><th>ID</th><th>描述</th></tr></thead><tbody><tr><td><code>auditevents</code></td><td>暴露当前应用程序的审核事件信息。需要一个<code>AuditEventRepository组件</code>。</td></tr><tr><td><code>beans</code></td><td>显示应用程序中所有Spring Bean的完整列表。</td></tr><tr><td><code>caches</code></td><td>暴露可用的缓存。</td></tr><tr><td><code>conditions</code></td><td>显示自动配置的所有条件信息，包括匹配或不匹配的原因。</td></tr><tr><td><code>configprops</code></td><td>显示所有<code>@ConfigurationProperties</code>。</td></tr><tr><td><code>env</code></td><td>暴露Spring的属性<code>ConfigurableEnvironment</code></td></tr><tr><td><code>flyway</code></td><td>显示已应用的所有Flyway数据库迁移。 需要一个或多个<code>Flyway</code>组件。</td></tr><tr><td><code>health</code></td><td>显示应用程序运行状况信息。</td></tr><tr><td><code>httptrace</code></td><td>显示HTTP跟踪信息（默认情况下，最近100个HTTP请求-响应）。需要一个<code>HttpTraceRepository</code>组件。</td></tr><tr><td><code>info</code></td><td>显示应用程序信息。</td></tr><tr><td><code>integrationgraph</code></td><td>显示Spring <code>integrationgraph</code> 。需要依赖<code>spring-integration-core</code>。</td></tr><tr><td><code>loggers</code></td><td>显示和修改应用程序中日志的配置。</td></tr><tr><td><code>liquibase</code></td><td>显示已应用的所有Liquibase数据库迁移。需要一个或多个<code>Liquibase</code>组件。</td></tr><tr><td><code>metrics</code></td><td>显示当前应用程序的“指标”信息。</td></tr><tr><td><code>mappings</code></td><td>显示所有<code>@RequestMapping</code>路径列表。</td></tr><tr><td><code>scheduledtasks</code></td><td>显示应用程序中的计划任务。</td></tr><tr><td><code>sessions</code></td><td>允许从Spring Session支持的会话存储中检索和删除用户会话。需要使用Spring Session的基于Servlet的Web应用程序。</td></tr><tr><td><code>shutdown</code></td><td>使应用程序正常关闭。默认禁用。</td></tr><tr><td><code>startup</code></td><td>显示由<code>ApplicationStartup</code>收集的启动步骤数据。需要使用<code>SpringApplication</code>进行配置<code>BufferingApplicationStartup</code>。</td></tr><tr><td><code>threaddump</code></td><td>执行线程转储。</td></tr></tbody></table><p>如果您的应用程序是Web应用程序（Spring MVC，Spring WebFlux或Jersey），则可以使用以下附加端点：</p><table><thead><tr><th>ID</th><th>描述</th></tr></thead><tbody><tr><td><code>heapdump</code></td><td>返回<code>hprof</code>堆转储文件。</td></tr><tr><td><code>jolokia</code></td><td>通过HTTP暴露JMX bean（需要引入Jolokia，不适用于WebFlux）。需要引入依赖<code>jolokia-core</code>。</td></tr><tr><td><code>logfile</code></td><td>返回日志文件的内容（如果已设置<code>logging.file.name</code>或<code>logging.file.path</code>属性）。支持使用HTTP<code>Range</code>标头来检索部分日志文件的内容。</td></tr><tr><td><code>prometheus</code></td><td>以Prometheus服务器可以抓取的格式公开指标。需要依赖<code>micrometer-registry-prometheus</code>。</td></tr></tbody></table><p>最常用的Endpoint</p><ul><li><strong>Health：监控状况</strong></li><li><strong>Metrics：运行时指标</strong></li><li><strong>Loggers：日志记录</strong></li></ul><h2 id="_2、health-endpoint" tabindex="-1"><a class="header-anchor" href="#_2、health-endpoint"><span>2、Health Endpoint</span></a></h2><p>健康检查端点，我们一般用于在云平台，平台会定时的检查应用的健康状况，我们就需要Health Endpoint可以为平台返回当前应用的一系列组件健康状况的集合。</p><p>重要的几点：</p><ul><li>health endpoint返回的结果，应该是一系列健康检查后的一个汇总报告</li><li>很多的健康检查默认已经自动配置好了，比如：数据库、redis等</li><li>可以很容易的添加自定义的健康检查机制</li></ul><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411070014633.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_3、metrics-endpoint" tabindex="-1"><a class="header-anchor" href="#_3、metrics-endpoint"><span>3、Metrics Endpoint</span></a></h2><p>提供详细的、层级的、空间指标信息，这些信息可以被pull（主动推送）或者push（被动获取）方式得到；</p><ul><li>通过Metrics对接多种监控系统</li><li>简化核心Metrics开发</li><li>添加自定义Metrics或者扩展已有Metrics</li></ul><figure><img src="https://gitee.com/private_crh/notes/raw/master/typora/202411070014630.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_4、管理endpoints" tabindex="-1"><a class="header-anchor" href="#_4、管理endpoints"><span>4、管理Endpoints</span></a></h2><h3 id="_1、开启与禁用endpoints" tabindex="-1"><a class="header-anchor" href="#_1、开启与禁用endpoints"><span>1、开启与禁用Endpoints</span></a></h3><ul><li>默认所有的Endpoint除过shutdown都是开启的。</li><li>需要开启或者禁用某个Endpoint。配置模式为 <strong>management.endpoint.</strong> <code>&lt;endpointName&gt;</code> <strong>.enabled = true</strong></li></ul><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">management</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">beans</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>或者禁用所有的Endpoint然后手动开启指定的Endpoint</li></ul><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">management</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">enabled-by-default</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></span>
<span class="line">  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">beans</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">    <span class="token key atrule">health</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、暴露endpoints" tabindex="-1"><a class="header-anchor" href="#_2、暴露endpoints"><span>2、暴露Endpoints</span></a></h3><p>支持的暴露方式</p><ul><li>HTTP：默认只暴露<strong>health</strong>和<strong>info</strong> Endpoint</li><li><strong>JMX</strong>：默认暴露所有Endpoint</li><li>除过health和info，剩下的Endpoint都应该进行保护访问。如果引入SpringSecurity，则会默认配置安全访问规则</li></ul><table><thead><tr><th>ID</th><th>JMX</th><th>Web</th></tr></thead><tbody><tr><td><code>auditevents</code></td><td>Yes</td><td>No</td></tr><tr><td><code>beans</code></td><td>Yes</td><td>No</td></tr><tr><td><code>caches</code></td><td>Yes</td><td>No</td></tr><tr><td><code>conditions</code></td><td>Yes</td><td>No</td></tr><tr><td><code>configprops</code></td><td>Yes</td><td>No</td></tr><tr><td><code>env</code></td><td>Yes</td><td>No</td></tr><tr><td><code>flyway</code></td><td>Yes</td><td>No</td></tr><tr><td><code>health</code></td><td>Yes</td><td>Yes</td></tr><tr><td><code>heapdump</code></td><td>N/A</td><td>No</td></tr><tr><td><code>httptrace</code></td><td>Yes</td><td>No</td></tr><tr><td><code>info</code></td><td>Yes</td><td>Yes</td></tr><tr><td><code>integrationgraph</code></td><td>Yes</td><td>No</td></tr><tr><td><code>jolokia</code></td><td>N/A</td><td>No</td></tr><tr><td><code>logfile</code></td><td>N/A</td><td>No</td></tr><tr><td><code>loggers</code></td><td>Yes</td><td>No</td></tr><tr><td><code>liquibase</code></td><td>Yes</td><td>No</td></tr><tr><td><code>metrics</code></td><td>Yes</td><td>No</td></tr><tr><td><code>mappings</code></td><td>Yes</td><td>No</td></tr><tr><td><code>prometheus</code></td><td>N/A</td><td>No</td></tr><tr><td><code>scheduledtasks</code></td><td>Yes</td><td>No</td></tr><tr><td><code>sessions</code></td><td>Yes</td><td>No</td></tr><tr><td><code>shutdown</code></td><td>Yes</td><td>No</td></tr><tr><td><code>startup</code></td><td>Yes</td><td>No</td></tr><tr><td><code>threaddump</code></td><td>Yes</td><td>No</td></tr></tbody></table><h1 id="_3、定制-endpoint" tabindex="-1"><a class="header-anchor" href="#_3、定制-endpoint"><span>3、定制 Endpoint</span></a></h1><h2 id="_1、定制-health-信息" tabindex="-1"><a class="header-anchor" href="#_1、定制-health-信息"><span>1、定制 Health 信息</span></a></h2><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" data-title="java" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>health<span class="token punctuation">.</span></span><span class="token class-name">Health</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>health<span class="token punctuation">.</span></span><span class="token class-name">HealthIndicator</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyHealthIndicator</span> <span class="token keyword">implements</span> <span class="token class-name">HealthIndicator</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Health</span> <span class="token function">health</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">int</span> errorCode <span class="token operator">=</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// perform some specific health check</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>errorCode <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token class-name">Health</span><span class="token punctuation">.</span><span class="token function">down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withDetail</span><span class="token punctuation">(</span><span class="token string">&quot;Error Code&quot;</span><span class="token punctuation">,</span> errorCode<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">Health</span><span class="token punctuation">.</span><span class="token function">up</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">构建<span class="token class-name">Health</span></span>
<span class="line"><span class="token class-name">Health</span> build <span class="token operator">=</span> <span class="token class-name">Health</span><span class="token punctuation">.</span><span class="token function">down</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">withDetail</span><span class="token punctuation">(</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;error service&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">withDetail</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;500&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">withException</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">management<span class="token operator">:</span></span>
<span class="line">    health<span class="token operator">:</span></span>
<span class="line">      enabled<span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line">      show<span class="token operator">-</span>details<span class="token operator">:</span> always #总是显示详细信息。可显示每个模块的状态信息</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" data-title="java" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyComHealthIndicator</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractHealthIndicator</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 真实的检查方法</span>
<span class="line">     * <span class="token keyword">@param</span> <span class="token parameter">builder</span></span>
<span class="line">     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span></span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doHealthCheck</span><span class="token punctuation">(</span><span class="token class-name">Health<span class="token punctuation">.</span>Builder</span> builder<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//mongodb。  获取连接进行测试</span></span>
<span class="line">        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 检查完成</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line"><span class="token comment">//            builder.up(); //健康</span></span>
<span class="line">            builder<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token constant">UP</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;count&quot;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;ms&quot;</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line"><span class="token comment">//            builder.down();</span></span>
<span class="line">            builder<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token class-name">Status</span><span class="token punctuation">.</span><span class="token constant">OUT_OF_SERVICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;err&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;连接超时&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;ms&quot;</span><span class="token punctuation">,</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">        builder<span class="token punctuation">.</span><span class="token function">withDetail</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">withDetails</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h3><h2 id="_2、定制info信息" tabindex="-1"><a class="header-anchor" href="#_2、定制info信息"><span>2、定制info信息</span></a></h2><p>常用两种方式</p><h4 id="_1、编写配置文件" tabindex="-1"><a class="header-anchor" href="#_1、编写配置文件"><span>1、编写配置文件</span></a></h4><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">info</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">appName</span><span class="token punctuation">:</span> boot<span class="token punctuation">-</span>admin</span>
<span class="line">  <span class="token key atrule">version</span><span class="token punctuation">:</span> 2.0.1</span>
<span class="line">  <span class="token key atrule">mavenProjectName</span><span class="token punctuation">:</span> @project.artifactId@  <span class="token comment">#使用@@可以获取maven的pom文件值</span></span>
<span class="line">  <span class="token key atrule">mavenProjectVersion</span><span class="token punctuation">:</span> @project.version@</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、编写infocontributor" tabindex="-1"><a class="header-anchor" href="#_2、编写infocontributor"><span>2、编写InfoContributor</span></a></h4><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" data-title="java" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>info<span class="token punctuation">.</span></span><span class="token class-name">Info</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>info<span class="token punctuation">.</span></span><span class="token class-name">InfoContributor</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExampleInfoContributor</span> <span class="token keyword">implements</span> <span class="token class-name">InfoContributor</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contribute</span><span class="token punctuation">(</span><span class="token class-name">Info<span class="token punctuation">.</span>Builder</span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        builder<span class="token punctuation">.</span><span class="token function">withDetail</span><span class="token punctuation">(</span><span class="token string">&quot;example&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>http://localhost:8080/actuator/info 会输出以上方式返回的所有info信息</p><h2 id="_3、定制metrics信息" tabindex="-1"><a class="header-anchor" href="#_3、定制metrics信息"><span>3、定制Metrics信息</span></a></h2><h4 id="_1、springboot支持自动适配的metrics" tabindex="-1"><a class="header-anchor" href="#_1、springboot支持自动适配的metrics"><span>1、SpringBoot支持自动适配的Metrics</span></a></h4><ul><li><p>JVM metrics, report utilization of:</p></li><li><ul><li>Various memory and buffer pools</li><li>Statistics related to garbage collection</li><li>Threads utilization</li><li>Number of classes loaded/unloaded</li></ul></li><li><p>CPU metrics</p></li><li><p>File descriptor metrics</p></li><li><p>Kafka consumer and producer metrics</p></li><li><p>Log4j2 metrics: record the number of events logged to Log4j2 at each level</p></li><li><p>Logback metrics: record the number of events logged to Logback at each level</p></li><li><p>Uptime metrics: report a gauge for uptime and a fixed gauge representing the application’s absolute start time</p></li><li><p>Tomcat metrics (<code>server.tomcat.mbeanregistry.enabled</code> must be set to <code>true</code> for all Tomcat metrics to be registered)</p></li><li><p><a href="https://docs.spring.io/spring-integration/docs/5.4.1/reference/html/system-management.html#micrometer-integration" target="_blank" rel="noopener noreferrer">Spring Integration</a> metrics</p></li></ul><h4 id="_2、增加定制metrics" tabindex="-1"><a class="header-anchor" href="#_2、增加定制metrics"><span>2、增加定制Metrics</span></a></h4><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" data-title="java" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MyService</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Counter</span> counter<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">MyService</span><span class="token punctuation">(</span><span class="token class-name">MeterRegistry</span> meterRegistry<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">         counter <span class="token operator">=</span> meterRegistry<span class="token punctuation">.</span><span class="token function">counter</span><span class="token punctuation">(</span><span class="token string">&quot;myservice.method.running.counter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        counter<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">//也可以使用下面的方式</span></span>
<span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token class-name">MeterBinder</span> <span class="token function">queueSize</span><span class="token punctuation">(</span><span class="token class-name">Queue</span> queue<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span>registry<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Gauge</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token string">&quot;queueSize&quot;</span><span class="token punctuation">,</span> queue<span class="token operator">::</span><span class="token function">size</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>registry<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_4、定制endpoint" tabindex="-1"><a class="header-anchor" href="#_4、定制endpoint"><span>4、定制Endpoint</span></a></h2><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" data-title="java" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token annotation punctuation">@Endpoint</span><span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token string">&quot;container&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DockerEndpoint</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@ReadOperation</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Map</span> <span class="token function">getDockerInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;docker started...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@WriteOperation</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">restartDocker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;docker restarted....&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>场景：开发<strong>ReadinessEndpoint</strong>来管理程序是否就绪，或者<strong>Liveness****Endpoint</strong>来管理程序是否存活；</p><p>当然，这个也可以直接使用 https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html#production-ready-kubernetes-probes</p>`,65)]))}const d=s(p,[["render",l],["__file","7指标监控.html.vue"]]),r=JSON.parse('{"path":"/codenotes/back/spring/springboot/7%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7.html","title":"指标监控","lang":"zh-CN","frontmatter":{"title":"指标监控","category":["计算机"],"tag":["springboot"],"sticky":false,"star":false,"article":false,"timeline":false,"isOriginal":true,"description":"1、SpringBoot Actuator 1、简介 未来每一个微服务在云上部署以后，我们都需要对其进行监控、追踪、审计、控制等。SpringBoot就抽取了Actuator场景，使得我们每个微服务快速引用即可获得生产级别的应用监控、审计等功能。 2、1.x与2.x的不同 3、如何使用 引入场景 访问 http://localhost:8080/act...","head":[["meta",{"property":"og:url","content":"https://hwchen.top/codenotes/back/spring/springboot/7%E6%8C%87%E6%A0%87%E7%9B%91%E6%8E%A7.html"}],["meta",{"property":"og:site_name","content":"Ahzy"}],["meta",{"property":"og:title","content":"指标监控"}],["meta",{"property":"og:description","content":"1、SpringBoot Actuator 1、简介 未来每一个微服务在云上部署以后，我们都需要对其进行监控、追踪、审计、控制等。SpringBoot就抽取了Actuator场景，使得我们每个微服务快速引用即可获得生产级别的应用监控、审计等功能。 2、1.x与2.x的不同 3、如何使用 引入场景 访问 http://localhost:8080/act..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://gitee.com/private_crh/notes/raw/master/typora/202411070014654.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"springboot"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"指标监控\\",\\"description\\":\\"1、SpringBoot Actuator 1、简介 未来每一个微服务在云上部署以后，我们都需要对其进行监控、追踪、审计、控制等。SpringBoot就抽取了Actuator场景，使得我们每个微服务快速引用即可获得生产级别的应用监控、审计等功能。 2、1.x与2.x的不同 3、如何使用 引入场景 访问 http://localhost:8080/act...\\"}"]]},"headers":[{"level":1,"title":"1、SpringBoot Actuator","slug":"_1、springboot-actuator","link":"#_1、springboot-actuator","children":[{"level":2,"title":"1、简介","slug":"_1、简介","link":"#_1、简介","children":[]},{"level":2,"title":"2、1.x与2.x的不同","slug":"_2、1-x与2-x的不同","link":"#_2、1-x与2-x的不同","children":[]},{"level":2,"title":"3、如何使用","slug":"_3、如何使用","link":"#_3、如何使用","children":[]},{"level":2,"title":"4、可视化","slug":"_4、可视化","link":"#_4、可视化","children":[]}]},{"level":1,"title":"2、Actuator Endpoint","slug":"_2、actuator-endpoint","link":"#_2、actuator-endpoint","children":[{"level":2,"title":"1、最常使用的端点","slug":"_1、最常使用的端点","link":"#_1、最常使用的端点","children":[]},{"level":2,"title":"2、Health Endpoint","slug":"_2、health-endpoint","link":"#_2、health-endpoint","children":[]},{"level":2,"title":"3、Metrics Endpoint","slug":"_3、metrics-endpoint","link":"#_3、metrics-endpoint","children":[]},{"level":2,"title":"4、管理Endpoints","slug":"_4、管理endpoints","link":"#_4、管理endpoints","children":[{"level":3,"title":"1、开启与禁用Endpoints","slug":"_1、开启与禁用endpoints","link":"#_1、开启与禁用endpoints","children":[]},{"level":3,"title":"2、暴露Endpoints","slug":"_2、暴露endpoints","link":"#_2、暴露endpoints","children":[]}]}]},{"level":1,"title":"3、定制 Endpoint","slug":"_3、定制-endpoint","link":"#_3、定制-endpoint","children":[{"level":2,"title":"1、定制 Health 信息","slug":"_1、定制-health-信息","link":"#_1、定制-health-信息","children":[{"level":3,"title":"","slug":"","link":"#","children":[]}]},{"level":2,"title":"2、定制info信息","slug":"_2、定制info信息","link":"#_2、定制info信息","children":[{"level":4,"title":"1、编写配置文件","slug":"_1、编写配置文件","link":"#_1、编写配置文件","children":[]},{"level":4,"title":"2、编写InfoContributor","slug":"_2、编写infocontributor","link":"#_2、编写infocontributor","children":[]}]},{"level":2,"title":"3、定制Metrics信息","slug":"_3、定制metrics信息","link":"#_3、定制metrics信息","children":[{"level":4,"title":"1、SpringBoot支持自动适配的Metrics","slug":"_1、springboot支持自动适配的metrics","link":"#_1、springboot支持自动适配的metrics","children":[]},{"level":4,"title":"2、增加定制Metrics","slug":"_2、增加定制metrics","link":"#_2、增加定制metrics","children":[]}]},{"level":2,"title":"4、定制Endpoint","slug":"_4、定制endpoint","link":"#_4、定制endpoint","children":[]}]}],"git":{},"readingTime":{"minutes":5.69,"words":1706},"filePathRelative":"codenotes/back/spring/springboot/7指标监控.md","excerpt":"\\n<h2>1、简介</h2>\\n<p>未来每一个微服务在云上部署以后，我们都需要对其进行监控、追踪、审计、控制等。SpringBoot就抽取了Actuator场景，使得我们每个微服务快速引用即可获得生产级别的应用监控、审计等功能。</p>\\n<div class=\\"language-xml line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"xml\\" data-title=\\"xml\\"><pre><code><span class=\\"line\\">        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>dependency</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"line\\">            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>groupId</span><span class=\\"token punctuation\\">&gt;</span></span>org.springframework.boot<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>groupId</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"line\\">            <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>artifactId</span><span class=\\"token punctuation\\">&gt;</span></span>spring-boot-starter-actuator<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>artifactId</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"line\\">        <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>dependency</span><span class=\\"token punctuation\\">&gt;</span></span></span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{d as comp,r as data};
