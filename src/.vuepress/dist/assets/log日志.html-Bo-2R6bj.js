import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,b as t,o as p}from"./app-eWV4nnR8.js";const e={};function l(c,n){return p(),s("div",null,n[0]||(n[0]=[t(`<h1 id="日志" tabindex="-1"><a class="header-anchor" href="#日志"><span>日志</span></a></h1><h2 id="_1-1-作用" tabindex="-1"><a class="header-anchor" href="#_1-1-作用"><span>1.1 作用：</span></a></h2><p>​ 跟输出语句一样，可以把程序在运行过程中的详细信息都打印在控制台上。</p><p>​ 利用log日志还可以把这些详细信息保存到文件和数据库中。</p><h2 id="_1-2-使用步骤" tabindex="-1"><a class="header-anchor" href="#_1-2-使用步骤"><span>1.2 使用步骤</span></a></h2><p>​ 不是java的，也不是自己写的，是第三方提供的代码，所以我们要导入jar包。</p><ul><li><p>把第三方的代码导入到当前的项目当中</p><p>新建lib文件夹，把jar粘贴到lib文件夹当中，全选后右键点击选择add as a ....</p><p>检测导入成功：导入成功后jar包可以展开。在项目重构界面可以看到导入的内容</p></li><li><p>把配置文件粘贴到src文件夹下</p></li><li><p>在代码中获取日志对象</p></li><li><p>调用方法打印日志</p></li></ul><h2 id="_1-3-日志级别" tabindex="-1"><a class="header-anchor" href="#_1-3-日志级别"><span>1.3 日志级别</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">TRACE, DEBUG, INFO, WARN, ERROR</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>还有两个特殊的：</p><p>​ ALL：输出所有日志</p><p>​ OFF：关闭所有日志</p><p>日志级别从小到大的关系：</p><p>​ TRACE &lt; DEBUG &lt; INFO &lt; WARN &lt; ERROR</p><h2 id="_1-4-配置文件" tabindex="-1"><a class="header-anchor" href="#_1-4-配置文件"><span>1.4 配置文件</span></a></h2><div class="language-xml line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="xml" data-title="xml" style="--vp-collapsed-lines:10;"><pre><code><span class="line"><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token comment">&lt;!--</span>
<span class="line">        CONSOLE ：表示当前的日志信息是可以输出到控制台的。</span>
<span class="line">    --&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CONSOLE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.ConsoleAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token comment">&lt;!--输出流对象 默认 System.out 改为 System.err--&gt;</span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">&gt;</span></span>System.out<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token comment">&lt;!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度</span>
<span class="line">                %msg：日志消息，%n是换行符--&gt;</span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level]  %c [%thread] : %msg%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">&lt;!-- File是输出的方向通向文件的 --&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FILE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.RollingFileAppender<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoder</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>charset</span><span class="token punctuation">&gt;</span></span>utf-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>charset</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoder</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token comment">&lt;!--日志输出路径--&gt;</span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>file</span><span class="token punctuation">&gt;</span></span>C:/code/itheima-data.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>file</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token comment">&lt;!--指定日志文件拆分和压缩规则--&gt;</span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rollingPolicy</span></span>
<span class="line">                       <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token comment">&lt;!--通过指定压缩文件名称，来确定分割文件方式--&gt;</span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span>C:/code/itheima-data2-%d{yyyy-MMdd}.log%i.gz<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fileNamePattern</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token comment">&lt;!--文件拆分大小--&gt;</span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maxFileSize</span><span class="token punctuation">&gt;</span></span>1MB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maxFileSize</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rollingPolicy</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appender</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">&lt;!--</span>
<span class="line"></span>
<span class="line">    level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF</span>
<span class="line">   ， 默认debug</span>
<span class="line">    &lt;root&gt;可以包含零个或多个&lt;appender-ref&gt;元素，标识这个输出位置将会被本日志级别控制。</span>
<span class="line">    --&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>info<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>CONSOLE<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appender-ref</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>FILE<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div>`,16)]))}const u=a(e,[["render",l],["__file","log日志.html.vue"]]),r=JSON.parse('{"path":"/codenotes/back/javacore/javaadvance/log%E6%97%A5%E5%BF%97.html","title":"日志","lang":"zh-CN","frontmatter":{"title":"日志","author":"黑马_阿玮","category":["计算机"],"tag":["java"],"sticky":false,"star":false,"article":false,"timeline":false,"date":"2024-11-07T00:00:00.000Z","headerDepth":2,"description":"日志 1.1 作用： ​ 跟输出语句一样，可以把程序在运行过程中的详细信息都打印在控制台上。 ​ 利用log日志还可以把这些详细信息保存到文件和数据库中。 1.2 使用步骤 ​ 不是java的，也不是自己写的，是第三方提供的代码，所以我们要导入jar包。 把第三方的代码导入到当前的项目当中 新建lib文件夹，把jar粘贴到lib文件夹当中，全选后右键点...","head":[["meta",{"property":"og:url","content":"https://hwchen.top/codenotes/back/javacore/javaadvance/log%E6%97%A5%E5%BF%97.html"}],["meta",{"property":"og:site_name","content":"Ahzy"}],["meta",{"property":"og:title","content":"日志"}],["meta",{"property":"og:description","content":"日志 1.1 作用： ​ 跟输出语句一样，可以把程序在运行过程中的详细信息都打印在控制台上。 ​ 利用log日志还可以把这些详细信息保存到文件和数据库中。 1.2 使用步骤 ​ 不是java的，也不是自己写的，是第三方提供的代码，所以我们要导入jar包。 把第三方的代码导入到当前的项目当中 新建lib文件夹，把jar粘贴到lib文件夹当中，全选后右键点..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"黑马_阿玮"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:published_time","content":"2024-11-07T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"日志\\",\\"description\\":\\"日志 1.1 作用： ​ 跟输出语句一样，可以把程序在运行过程中的详细信息都打印在控制台上。 ​ 利用log日志还可以把这些详细信息保存到文件和数据库中。 1.2 使用步骤 ​ 不是java的，也不是自己写的，是第三方提供的代码，所以我们要导入jar包。 把第三方的代码导入到当前的项目当中 新建lib文件夹，把jar粘贴到lib文件夹当中，全选后右键点...\\"}"]]},"headers":[{"level":1,"title":"日志","slug":"日志","link":"#日志","children":[{"level":2,"title":"1.1 作用：","slug":"_1-1-作用","link":"#_1-1-作用","children":[]},{"level":2,"title":"1.2 使用步骤","slug":"_1-2-使用步骤","link":"#_1-2-使用步骤","children":[]},{"level":2,"title":"1.3 日志级别","slug":"_1-3-日志级别","link":"#_1-3-日志级别","children":[]},{"level":2,"title":"1.4 配置文件","slug":"_1-4-配置文件","link":"#_1-4-配置文件","children":[]}]}],"git":{},"readingTime":{"minutes":2.12,"words":636},"filePathRelative":"codenotes/back/javacore/javaadvance/log日志.md","localizedDate":"2024年11月7日","excerpt":"\\n<h2>1.1 作用：</h2>\\n<p>​\\t跟输出语句一样，可以把程序在运行过程中的详细信息都打印在控制台上。</p>\\n<p>​\\t利用log日志还可以把这些详细信息保存到文件和数据库中。</p>\\n<h2>1.2 使用步骤</h2>\\n<p>​\\t不是java的，也不是自己写的，是第三方提供的代码，所以我们要导入jar包。</p>\\n<ul>\\n<li>\\n<p>把第三方的代码导入到当前的项目当中</p>\\n<p>新建lib文件夹，把jar粘贴到lib文件夹当中，全选后右键点击选择add as a ....</p>\\n<p>检测导入成功：导入成功后jar包可以展开。在项目重构界面可以看到导入的内容</p>\\n</li>\\n<li>\\n<p>把配置文件粘贴到src文件夹下</p>\\n</li>\\n<li>\\n<p>在代码中获取日志对象</p>\\n</li>\\n<li>\\n<p>调用方法打印日志</p>\\n</li>\\n</ul>","autoDesc":true}');export{u as comp,r as data};
